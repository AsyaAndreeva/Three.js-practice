import * as React from 'react';
import * as THREE from 'three';
import type { HlsConfig } from 'hls.js';
type Config = {
    unsuspend?: 'canplay' | 'canplaythrough' | 'loadstart' | 'loadedmetadata';
    start?: boolean;
    hls?: Partial<HlsConfig>;
} & Partial<Omit<HTMLVideoElement, 'children'>>;
export declare function useVideoTexture(src: string | MediaStream, { unsuspend, start, crossOrigin, muted, loop, hls, ...videoProps }?: Config): THREE.VideoTexture;
export declare const VideoTexture: ({ children, src, ...config }: {
    children?: (texture: ReturnType<typeof useVideoTexture>) => React.ReactNode;
    src: Parameters<typeof useVideoTexture>[0];
} & Parameters<typeof useVideoTexture>[1]) => React.JSX.Element;
export {};
