{"version":3,"file":"hls.light.js","mappings":"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CA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA,gBAAgB,YAAY;AAC5B;;AAEA;AACA,4DAA4D;AAC5D,gEAAgE;AAChE,oEAAoE;AACpE,wEAAwE;AACxE;AACA,2DAA2D,SAAS;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;AC/UA;;AAEA;AACA;AACA,sFAAsF,iBAAiB;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,IAAyD;AAC/D;AACA,OAAO,EAKgC;AACvC,CAAC;;;;;;;UC7KD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://Hls/webpack/universalModuleDefinition","webpack://Hls/./src/config.ts","webpack://Hls/./src/controller/abr-controller.ts","webpack://Hls/./src/controller/base-playlist-controller.ts","webpack://Hls/./src/controller/base-stream-controller.ts","webpack://Hls/./src/controller/buffer-controller.ts","webpack://Hls/./src/controller/buffer-operation-queue.ts","webpack://Hls/./src/controller/cap-level-controller.ts","webpack://Hls/./src/controller/fps-controller.ts","webpack://Hls/./src/controller/fragment-finders.ts","webpack://Hls/./src/controller/fragment-tracker.ts","webpack://Hls/./src/controller/gap-controller.ts","webpack://Hls/./src/controller/id3-track-controller.ts","webpack://Hls/./src/controller/latency-controller.ts","webpack://Hls/./src/controller/level-controller.ts","webpack://Hls/./src/controller/level-helper.ts","webpack://Hls/./src/controller/stream-controller.ts","webpack://Hls/./src/crypt/aes-crypto.ts","webpack://Hls/./src/crypt/aes-decryptor.ts","webpack://Hls/./src/crypt/decrypter.ts","webpack://Hls/./src/crypt/fast-aes-key.ts","webpack://Hls/./src/demux/aacdemuxer.ts","webpack://Hls/./src/demux/adts.ts","webpack://Hls/./src/demux/base-audio-demuxer.ts","webpack://Hls/./src/demux/chunk-cache.ts","webpack://Hls/./src/demux/dummy-demuxed-track.ts","webpack://Hls/./src/demux/exp-golomb.ts","webpack://Hls/./src/demux/id3.ts","webpack://Hls/./src/demux/mp3demuxer.ts","webpack://Hls/./src/demux/mp4demuxer.ts","webpack://Hls/./src/demux/mpegaudio.ts","webpack://Hls/./src/demux/sample-aes.ts","webpack://Hls/./src/demux/transmuxer-interface.ts","webpack://Hls/./src/demux/transmuxer-worker.ts","webpack://Hls/./src/demux/transmuxer.ts","webpack://Hls/./src/demux/tsdemuxer.ts","webpack://Hls/./src/demux/webworkify-webpack.js","webpack://Hls/./src/empty.js","webpack://Hls/./src/errors.ts","webpack://Hls/./src/events.ts","webpack://Hls/./src/hls.ts","webpack://Hls/./src/is-supported.ts","webpack://Hls/./src/loader/date-range.ts","webpack://Hls/./src/loader/fragment-loader.ts","webpack://Hls/./src/loader/fragment.ts","webpack://Hls/./src/loader/key-loader.ts","webpack://Hls/./src/loader/level-details.ts","webpack://Hls/./src/loader/level-key.ts","webpack://Hls/./src/loader/load-stats.ts","webpack://Hls/./src/loader/m3u8-parser.ts","webpack://Hls/./src/loader/playlist-loader.ts","webpack://Hls/./src/polyfills/number.ts","webpack://Hls/./src/remux/aac-helper.ts","webpack://Hls/./src/remux/mp4-generator.ts","webpack://Hls/./src/remux/mp4-remuxer.ts","webpack://Hls/./src/remux/passthrough-remuxer.ts","webpack://Hls/./src/task-loop.ts","webpack://Hls/./src/types/demuxer.ts","webpack://Hls/./src/types/level.ts","webpack://Hls/./src/types/loader.ts","webpack://Hls/./src/types/transmuxer.ts","webpack://Hls/./src/utils/attr-list.ts","webpack://Hls/./src/utils/binary-search.ts","webpack://Hls/./src/utils/buffer-helper.ts","webpack://Hls/./src/utils/codecs.ts","webpack://Hls/./src/utils/discontinuities.ts","webpack://Hls/./src/utils/ewma-bandwidth-estimator.ts","webpack://Hls/./src/utils/ewma.ts","webpack://Hls/./src/utils/fetch-loader.ts","webpack://Hls/./src/utils/hex.ts","webpack://Hls/./src/utils/keysystem-util.ts","webpack://Hls/./src/utils/logger.ts","webpack://Hls/./src/utils/mediakeys-helper.ts","webpack://Hls/./src/utils/mediasource-helper.ts","webpack://Hls/./src/utils/mp4-tools.ts","webpack://Hls/./src/utils/numeric-encoding-utils.ts","webpack://Hls/./src/utils/texttrack-utils.ts","webpack://Hls/./src/utils/time-ranges.ts","webpack://Hls/./src/utils/timescale-conversion.ts","webpack://Hls/./src/utils/typed-array.ts","webpack://Hls/./src/utils/xhr-loader.ts","webpack://Hls/./node_modules/eventemitter3/index.js","webpack://Hls/./node_modules/url-toolkit/src/url-toolkit.js","webpack://Hls/webpack/bootstrap","webpack://Hls/webpack/runtime/compat get default export","webpack://Hls/webpack/runtime/define property getters","webpack://Hls/webpack/runtime/hasOwnProperty shorthand","webpack://Hls/webpack/runtime/make namespace object","webpack://Hls/webpack/before-startup","webpack://Hls/webpack/startup","webpack://Hls/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Hls\"] = factory();\n\telse\n\t\troot[\"Hls\"] = factory();\n})(this, () => {\nreturn ","import AbrController from './controller/abr-controller';\nimport AudioStreamController from './controller/audio-stream-controller';\nimport AudioTrackController from './controller/audio-track-controller';\nimport { SubtitleStreamController } from './controller/subtitle-stream-controller';\nimport SubtitleTrackController from './controller/subtitle-track-controller';\nimport BufferController from './controller/buffer-controller';\nimport { TimelineController } from './controller/timeline-controller';\nimport CapLevelController from './controller/cap-level-controller';\nimport FPSController from './controller/fps-controller';\nimport EMEController, {\n  MediaKeySessionContext,\n} from './controller/eme-controller';\nimport CMCDController from './controller/cmcd-controller';\nimport XhrLoader from './utils/xhr-loader';\nimport FetchLoader, { fetchSupported } from './utils/fetch-loader';\nimport Cues from './utils/cues';\nimport { requestMediaKeySystemAccess } from './utils/mediakeys-helper';\nimport { ILogger, logger } from './utils/logger';\n\nimport type Hls from './hls';\nimport type { CuesInterface } from './utils/cues';\nimport type { MediaKeyFunc, KeySystems } from './utils/mediakeys-helper';\nimport type {\n  FragmentLoaderContext,\n  Loader,\n  LoaderContext,\n  PlaylistLoaderContext,\n} from './types/loader';\n\nexport type ABRControllerConfig = {\n  abrEwmaFastLive: number;\n  abrEwmaSlowLive: number;\n  abrEwmaFastVoD: number;\n  abrEwmaSlowVoD: number;\n  abrEwmaDefaultEstimate: number;\n  abrBandWidthFactor: number;\n  abrBandWidthUpFactor: number;\n  abrMaxWithRealBitrate: boolean;\n  maxStarvationDelay: number;\n  maxLoadingDelay: number;\n};\n\nexport type BufferControllerConfig = {\n  appendErrorMaxRetry: number;\n  backBufferLength: number;\n  liveDurationInfinity: boolean;\n  liveBackBufferLength: number | null;\n};\n\nexport type CapLevelControllerConfig = {\n  capLevelToPlayerSize: boolean;\n};\n\nexport type CMCDControllerConfig = {\n  sessionId?: string;\n  contentId?: string;\n  useHeaders?: boolean;\n};\n\nexport type DRMSystemOptions = {\n  audioRobustness?: string;\n  videoRobustness?: string;\n  audioEncryptionScheme?: string | null;\n  videoEncryptionScheme?: string | null;\n  persistentState?: MediaKeysRequirement;\n  distinctiveIdentifier?: MediaKeysRequirement;\n  sessionTypes?: string[];\n  sessionType?: string;\n};\n\nexport type DRMSystemConfiguration = {\n  licenseUrl: string;\n  serverCertificateUrl?: string;\n  generateRequest?: (\n    this: Hls,\n    initDataType: string,\n    initData: ArrayBuffer | null,\n    keyContext: MediaKeySessionContext\n  ) =>\n    | { initDataType: string; initData: ArrayBuffer | null }\n    | undefined\n    | never;\n};\n\nexport type DRMSystemsConfiguration = Partial<\n  Record<KeySystems, DRMSystemConfiguration>\n>;\n\nexport type EMEControllerConfig = {\n  licenseXhrSetup?: (\n    this: Hls,\n    xhr: XMLHttpRequest,\n    url: string,\n    keyContext: MediaKeySessionContext,\n    licenseChallenge: Uint8Array\n  ) => void | Uint8Array | Promise<Uint8Array | void>;\n  licenseResponseCallback?: (\n    this: Hls,\n    xhr: XMLHttpRequest,\n    url: string,\n    keyContext: MediaKeySessionContext\n  ) => ArrayBuffer;\n  emeEnabled: boolean;\n  widevineLicenseUrl?: string;\n  drmSystems: DRMSystemsConfiguration;\n  drmSystemOptions: DRMSystemOptions;\n  requestMediaKeySystemAccessFunc: MediaKeyFunc | null;\n};\n\nexport interface FragmentLoaderConstructor {\n  new (confg: HlsConfig): Loader<FragmentLoaderContext>;\n}\n\nexport type FragmentLoaderConfig = {\n  fLoader?: FragmentLoaderConstructor;\n\n  fragLoadingTimeOut: number;\n  fragLoadingMaxRetry: number;\n  fragLoadingRetryDelay: number;\n  fragLoadingMaxRetryTimeout: number;\n};\n\nexport type FPSControllerConfig = {\n  capLevelOnFPSDrop: boolean;\n  fpsDroppedMonitoringPeriod: number;\n  fpsDroppedMonitoringThreshold: number;\n};\n\nexport type LevelControllerConfig = {\n  startLevel?: number;\n};\n\nexport type MP4RemuxerConfig = {\n  stretchShortVideoTrack: boolean;\n  maxAudioFramesDrift: number;\n};\n\nexport interface PlaylistLoaderConstructor {\n  new (confg: HlsConfig): Loader<PlaylistLoaderContext>;\n}\n\nexport type PlaylistLoaderConfig = {\n  pLoader?: PlaylistLoaderConstructor;\n\n  manifestLoadingTimeOut: number;\n  manifestLoadingMaxRetry: number;\n  manifestLoadingRetryDelay: number;\n  manifestLoadingMaxRetryTimeout: number;\n\n  levelLoadingTimeOut: number;\n  levelLoadingMaxRetry: number;\n  levelLoadingRetryDelay: number;\n  levelLoadingMaxRetryTimeout: number;\n};\n\nexport type StreamControllerConfig = {\n  autoStartLoad: boolean;\n  startPosition: number;\n  defaultAudioCodec?: string;\n  initialLiveManifestSize: number;\n  maxBufferLength: number;\n  maxBufferSize: number;\n  maxBufferHole: number;\n  highBufferWatchdogPeriod: number;\n  nudgeOffset: number;\n  nudgeMaxRetry: number;\n  maxFragLookUpTolerance: number;\n  maxMaxBufferLength: number;\n  startFragPrefetch: boolean;\n  testBandwidth: boolean;\n};\n\nexport type LatencyControllerConfig = {\n  liveSyncDurationCount: number;\n  liveMaxLatencyDurationCount: number;\n  liveSyncDuration?: number;\n  liveMaxLatencyDuration?: number;\n  maxLiveSyncPlaybackRate: number;\n};\n\nexport type MetadataControllerConfig = {\n  enableDateRangeMetadataCues: boolean;\n  enableEmsgMetadataCues: boolean;\n  enableID3MetadataCues: boolean;\n};\n\nexport type TimelineControllerConfig = {\n  cueHandler: CuesInterface;\n  enableWebVTT: boolean;\n  enableIMSC1: boolean;\n  enableCEA708Captions: boolean;\n  captionsTextTrack1Label: string;\n  captionsTextTrack1LanguageCode: string;\n  captionsTextTrack2Label: string;\n  captionsTextTrack2LanguageCode: string;\n  captionsTextTrack3Label: string;\n  captionsTextTrack3LanguageCode: string;\n  captionsTextTrack4Label: string;\n  captionsTextTrack4LanguageCode: string;\n  renderTextTracksNatively: boolean;\n};\n\nexport type TSDemuxerConfig = {\n  forceKeyFrameOnDiscontinuity: boolean;\n};\n\nexport type HlsConfig = {\n  debug: boolean | ILogger;\n  enableWorker: boolean;\n  enableSoftwareAES: boolean;\n  minAutoBitrate: number;\n  ignoreDevicePixelRatio: boolean;\n  loader: { new (confg: HlsConfig): Loader<LoaderContext> };\n  fetchSetup?: (context: LoaderContext, initParams: any) => Request;\n  xhrSetup?: (xhr: XMLHttpRequest, url: string) => void;\n\n  // Alt Audio\n  audioStreamController?: typeof AudioStreamController;\n  audioTrackController?: typeof AudioTrackController;\n  // Subtitle\n  subtitleStreamController?: typeof SubtitleStreamController;\n  subtitleTrackController?: typeof SubtitleTrackController;\n  timelineController?: typeof TimelineController;\n  // EME\n  emeController?: typeof EMEController;\n  // CMCD\n  cmcd?: CMCDControllerConfig;\n  cmcdController?: typeof CMCDController;\n\n  abrController: typeof AbrController;\n  bufferController: typeof BufferController;\n  capLevelController: typeof CapLevelController;\n  fpsController: typeof FPSController;\n  progressive: boolean;\n  lowLatencyMode: boolean;\n} & ABRControllerConfig &\n  BufferControllerConfig &\n  CapLevelControllerConfig &\n  EMEControllerConfig &\n  FPSControllerConfig &\n  FragmentLoaderConfig &\n  LevelControllerConfig &\n  MP4RemuxerConfig &\n  PlaylistLoaderConfig &\n  StreamControllerConfig &\n  LatencyControllerConfig &\n  MetadataControllerConfig &\n  TimelineControllerConfig &\n  TSDemuxerConfig;\n\n// If possible, keep hlsDefaultConfig shallow\n// It is cloned whenever a new Hls instance is created, by keeping the config\n// shallow the properties are cloned, and we don't end up manipulating the default\nexport const hlsDefaultConfig: HlsConfig = {\n  autoStartLoad: true, // used by stream-controller\n  startPosition: -1, // used by stream-controller\n  defaultAudioCodec: undefined, // used by stream-controller\n  debug: false, // used by logger\n  capLevelOnFPSDrop: false, // used by fps-controller\n  capLevelToPlayerSize: false, // used by cap-level-controller\n  ignoreDevicePixelRatio: false, // used by cap-level-controller\n  initialLiveManifestSize: 1, // used by stream-controller\n  maxBufferLength: 30, // used by stream-controller\n  backBufferLength: Infinity, // used by buffer-controller\n  maxBufferSize: 60 * 1000 * 1000, // used by stream-controller\n  maxBufferHole: 0.1, // used by stream-controller\n  highBufferWatchdogPeriod: 2, // used by stream-controller\n  nudgeOffset: 0.1, // used by stream-controller\n  nudgeMaxRetry: 3, // used by stream-controller\n  maxFragLookUpTolerance: 0.25, // used by stream-controller\n  liveSyncDurationCount: 3, // used by latency-controller\n  liveMaxLatencyDurationCount: Infinity, // used by latency-controller\n  liveSyncDuration: undefined, // used by latency-controller\n  liveMaxLatencyDuration: undefined, // used by latency-controller\n  maxLiveSyncPlaybackRate: 1, // used by latency-controller\n  liveDurationInfinity: false, // used by buffer-controller\n  liveBackBufferLength: null, // used by buffer-controller\n  maxMaxBufferLength: 600, // used by stream-controller\n  enableWorker: true, // used by demuxer\n  enableSoftwareAES: true, // used by decrypter\n  manifestLoadingTimeOut: 10000, // used by playlist-loader\n  manifestLoadingMaxRetry: 1, // used by playlist-loader\n  manifestLoadingRetryDelay: 1000, // used by playlist-loader\n  manifestLoadingMaxRetryTimeout: 64000, // used by playlist-loader\n  startLevel: undefined, // used by level-controller\n  levelLoadingTimeOut: 10000, // used by playlist-loader\n  levelLoadingMaxRetry: 4, // used by playlist-loader\n  levelLoadingRetryDelay: 1000, // used by playlist-loader\n  levelLoadingMaxRetryTimeout: 64000, // used by playlist-loader\n  fragLoadingTimeOut: 20000, // used by fragment-loader\n  fragLoadingMaxRetry: 6, // used by fragment-loader\n  fragLoadingRetryDelay: 1000, // used by fragment-loader\n  fragLoadingMaxRetryTimeout: 64000, // used by fragment-loader\n  startFragPrefetch: false, // used by stream-controller\n  fpsDroppedMonitoringPeriod: 5000, // used by fps-controller\n  fpsDroppedMonitoringThreshold: 0.2, // used by fps-controller\n  appendErrorMaxRetry: 3, // used by buffer-controller\n  loader: XhrLoader,\n  // loader: FetchLoader,\n  fLoader: undefined, // used by fragment-loader\n  pLoader: undefined, // used by playlist-loader\n  xhrSetup: undefined, // used by xhr-loader\n  licenseXhrSetup: undefined, // used by eme-controller\n  licenseResponseCallback: undefined, // used by eme-controller\n  abrController: AbrController,\n  bufferController: BufferController,\n  capLevelController: CapLevelController,\n  fpsController: FPSController,\n  stretchShortVideoTrack: false, // used by mp4-remuxer\n  maxAudioFramesDrift: 1, // used by mp4-remuxer\n  forceKeyFrameOnDiscontinuity: true, // used by ts-demuxer\n  abrEwmaFastLive: 3, // used by abr-controller\n  abrEwmaSlowLive: 9, // used by abr-controller\n  abrEwmaFastVoD: 3, // used by abr-controller\n  abrEwmaSlowVoD: 9, // used by abr-controller\n  abrEwmaDefaultEstimate: 5e5, // 500 kbps  // used by abr-controller\n  abrBandWidthFactor: 0.95, // used by abr-controller\n  abrBandWidthUpFactor: 0.7, // used by abr-controller\n  abrMaxWithRealBitrate: false, // used by abr-controller\n  maxStarvationDelay: 4, // used by abr-controller\n  maxLoadingDelay: 4, // used by abr-controller\n  minAutoBitrate: 0, // used by hls\n  emeEnabled: false, // used by eme-controller\n  widevineLicenseUrl: undefined, // used by eme-controller\n  drmSystems: {}, // used by eme-controller\n  drmSystemOptions: {}, // used by eme-controller\n  requestMediaKeySystemAccessFunc: requestMediaKeySystemAccess, // used by eme-controller\n  testBandwidth: true,\n  progressive: false,\n  lowLatencyMode: true,\n  cmcd: undefined,\n  enableDateRangeMetadataCues: true,\n  enableEmsgMetadataCues: true,\n  enableID3MetadataCues: true,\n\n  // Dynamic Modules\n  ...timelineConfig(),\n  subtitleStreamController: __USE_SUBTITLES__\n    ? SubtitleStreamController\n    : undefined,\n  subtitleTrackController: __USE_SUBTITLES__\n    ? SubtitleTrackController\n    : undefined,\n  timelineController: __USE_SUBTITLES__ ? TimelineController : undefined,\n  audioStreamController: __USE_ALT_AUDIO__ ? AudioStreamController : undefined,\n  audioTrackController: __USE_ALT_AUDIO__ ? AudioTrackController : undefined,\n  emeController: __USE_EME_DRM__ ? EMEController : undefined,\n  cmcdController: __USE_CMCD__ ? CMCDController : undefined,\n};\n\nfunction timelineConfig(): TimelineControllerConfig {\n  return {\n    cueHandler: Cues, // used by timeline-controller\n    enableWebVTT: __USE_SUBTITLES__, // used by timeline-controller\n    enableIMSC1: __USE_SUBTITLES__, // used by timeline-controller\n    enableCEA708Captions: __USE_SUBTITLES__, // used by timeline-controller\n    captionsTextTrack1Label: 'English', // used by timeline-controller\n    captionsTextTrack1LanguageCode: 'en', // used by timeline-controller\n    captionsTextTrack2Label: 'Spanish', // used by timeline-controller\n    captionsTextTrack2LanguageCode: 'es', // used by timeline-controller\n    captionsTextTrack3Label: 'Unknown CC', // used by timeline-controller\n    captionsTextTrack3LanguageCode: '', // used by timeline-controller\n    captionsTextTrack4Label: 'Unknown CC', // used by timeline-controller\n    captionsTextTrack4LanguageCode: '', // used by timeline-controller\n    renderTextTracksNatively: true,\n  };\n}\n\nexport function mergeConfig(\n  defaultConfig: HlsConfig,\n  userConfig: Partial<HlsConfig>\n): HlsConfig {\n  if (\n    (userConfig.liveSyncDurationCount ||\n      userConfig.liveMaxLatencyDurationCount) &&\n    (userConfig.liveSyncDuration || userConfig.liveMaxLatencyDuration)\n  ) {\n    throw new Error(\n      \"Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration\"\n    );\n  }\n\n  if (\n    userConfig.liveMaxLatencyDurationCount !== undefined &&\n    (userConfig.liveSyncDurationCount === undefined ||\n      userConfig.liveMaxLatencyDurationCount <=\n        userConfig.liveSyncDurationCount)\n  ) {\n    throw new Error(\n      'Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be greater than \"liveSyncDurationCount\"'\n    );\n  }\n\n  if (\n    userConfig.liveMaxLatencyDuration !== undefined &&\n    (userConfig.liveSyncDuration === undefined ||\n      userConfig.liveMaxLatencyDuration <= userConfig.liveSyncDuration)\n  ) {\n    throw new Error(\n      'Illegal hls.js config: \"liveMaxLatencyDuration\" must be greater than \"liveSyncDuration\"'\n    );\n  }\n\n  return Object.assign({}, defaultConfig, userConfig);\n}\n\nexport function enableStreamingMode(config) {\n  const currentLoader = config.loader;\n  if (currentLoader !== FetchLoader && currentLoader !== XhrLoader) {\n    // If a developer has configured their own loader, respect that choice\n    logger.log(\n      '[config]: Custom loader detected, cannot enable progressive streaming'\n    );\n    config.progressive = false;\n  } else {\n    const canStreamProgressively = fetchSupported();\n    if (canStreamProgressively) {\n      config.loader = FetchLoader;\n      config.progressive = true;\n      config.enableSoftwareAES = true;\n      logger.log('[config]: Progressive streaming enabled, using FetchLoader');\n    }\n  }\n}\n","import EwmaBandWidthEstimator from '../utils/ewma-bandwidth-estimator';\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { PlaylistLevelType } from '../types/loader';\nimport { logger } from '../utils/logger';\nimport type { Fragment } from '../loader/fragment';\nimport type { Part } from '../loader/fragment';\nimport type { LoaderStats } from '../types/loader';\nimport type Hls from '../hls';\nimport type {\n  FragLoadingData,\n  FragLoadedData,\n  FragBufferedData,\n  ErrorData,\n  LevelLoadedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\n\nclass AbrController implements ComponentAPI {\n  protected hls: Hls;\n  private lastLoadedFragLevel: number = 0;\n  private _nextAutoLevel: number = -1;\n  private timer?: number;\n  private onCheck: Function = this._abandonRulesCheck.bind(this);\n  private fragCurrent: Fragment | null = null;\n  private partCurrent: Part | null = null;\n  private bitrateTestDelay: number = 0;\n\n  public readonly bwEstimator: EwmaBandWidthEstimator;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    const config = hls.config;\n    this.bwEstimator = new EwmaBandWidthEstimator(\n      config.abrEwmaSlowVoD,\n      config.abrEwmaFastVoD,\n      config.abrEwmaDefaultEstimate\n    );\n\n    this.registerListeners();\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  protected unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.clearTimer();\n    // @ts-ignore\n    this.hls = this.onCheck = null;\n    this.fragCurrent = this.partCurrent = null;\n  }\n\n  protected onFragLoading(event: Events.FRAG_LOADING, data: FragLoadingData) {\n    const frag = data.frag;\n    if (frag.type === PlaylistLevelType.MAIN) {\n      if (!this.timer) {\n        this.fragCurrent = frag;\n        this.partCurrent = data.part ?? null;\n        this.timer = self.setInterval(this.onCheck, 100);\n      }\n    }\n  }\n\n  protected onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const config = this.hls.config;\n    if (data.details.live) {\n      this.bwEstimator.update(config.abrEwmaSlowLive, config.abrEwmaFastLive);\n    } else {\n      this.bwEstimator.update(config.abrEwmaSlowVoD, config.abrEwmaFastVoD);\n    }\n  }\n\n  /*\n      This method monitors the download rate of the current fragment, and will downswitch if that fragment will not load\n      quickly enough to prevent underbuffering\n    */\n  private _abandonRulesCheck() {\n    const { fragCurrent: frag, partCurrent: part, hls } = this;\n    const { autoLevelEnabled, media } = hls;\n    if (!frag || !media) {\n      return;\n    }\n\n    const stats: LoaderStats = part ? part.stats : frag.stats;\n    const duration = part ? part.duration : frag.duration;\n    // If frag loading is aborted, complete, or from lowest level, stop timer and return\n    if (\n      stats.aborted ||\n      (stats.loaded && stats.loaded === stats.total) ||\n      frag.level === 0\n    ) {\n      this.clearTimer();\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n      return;\n    }\n\n    // This check only runs if we're in ABR mode and actually playing\n    if (\n      !autoLevelEnabled ||\n      media.paused ||\n      !media.playbackRate ||\n      !media.readyState\n    ) {\n      return;\n    }\n\n    const bufferInfo = hls.mainForwardBufferInfo;\n    if (bufferInfo === null) {\n      return;\n    }\n\n    const requestDelay = performance.now() - stats.loading.start;\n    const playbackRate = Math.abs(media.playbackRate);\n    // In order to work with a stable bandwidth, only begin monitoring bandwidth after half of the fragment has been loaded\n    if (requestDelay <= (500 * duration) / playbackRate) {\n      return;\n    }\n\n    const loadedFirstByte = stats.loaded && stats.loading.first;\n    const bwEstimate: number = this.bwEstimator.getEstimate();\n    const { levels, minAutoLevel } = hls;\n    const level = levels[frag.level];\n    const expectedLen =\n      stats.total ||\n      Math.max(stats.loaded, Math.round((duration * level.maxBitrate) / 8));\n    const loadRate = loadedFirstByte ? (stats.loaded * 1000) / requestDelay : 0;\n\n    // fragLoadDelay is an estimate of the time (in seconds) it will take to buffer the remainder of the fragment\n    const fragLoadedDelay = loadRate\n      ? (expectedLen - stats.loaded) / loadRate\n      : (expectedLen * 8) / bwEstimate;\n\n    // bufferStarvationDelay is an estimate of the amount time (in seconds) it will take to exhaust the buffer\n    const bufferStarvationDelay = bufferInfo.len / playbackRate;\n\n    // Only downswitch if the time to finish loading the current fragment is greater than the amount of buffer left\n    if (fragLoadedDelay <= bufferStarvationDelay) {\n      return;\n    }\n\n    let fragLevelNextLoadedDelay: number = Number.POSITIVE_INFINITY;\n    let nextLoadLevel: number;\n    // Iterate through lower level and try to find the largest one that avoids rebuffering\n    for (\n      nextLoadLevel = frag.level - 1;\n      nextLoadLevel > minAutoLevel;\n      nextLoadLevel--\n    ) {\n      // compute time to load next fragment at lower level\n      // 0.8 : consider only 80% of current bw to be conservative\n      // 8 = bits per byte (bps/Bps)\n      const levelNextBitrate = levels[nextLoadLevel].maxBitrate;\n      fragLevelNextLoadedDelay = loadRate\n        ? (duration * levelNextBitrate) / (8 * 0.8 * loadRate)\n        : (duration * levelNextBitrate) / bwEstimate;\n\n      if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n        break;\n      }\n    }\n    // Only emergency switch down if it takes less time to load a new fragment at lowest level instead of continuing\n    // to load the current one\n    if (fragLevelNextLoadedDelay >= fragLoadedDelay) {\n      return;\n    }\n    logger.warn(`Fragment ${frag.sn}${\n      part ? ' part ' + part.index : ''\n    } of level ${\n      frag.level\n    } is loading too slowly and will cause an underbuffer; aborting and switching to level ${nextLoadLevel}\n      Current BW estimate: ${\n        Number.isFinite(bwEstimate) ? (bwEstimate / 1024).toFixed(3) : 'Unknown'\n      } Kb/s\n      Estimated load time for current fragment: ${fragLoadedDelay.toFixed(3)} s\n      Estimated load time for the next fragment: ${fragLevelNextLoadedDelay.toFixed(\n        3\n      )} s\n      Time to underbuffer: ${bufferStarvationDelay.toFixed(3)} s`);\n    hls.nextLoadLevel = nextLoadLevel;\n    if (loadedFirstByte) {\n      // If there has been loading progress, sample bandwidth\n      this.bwEstimator.sample(requestDelay, stats.loaded);\n    }\n    this.clearTimer();\n    if (frag.loader || frag.keyLoader) {\n      this.fragCurrent = this.partCurrent = null;\n      frag.abortRequests();\n    }\n    hls.trigger(Events.FRAG_LOAD_EMERGENCY_ABORTED, { frag, part, stats });\n  }\n\n  protected onFragLoaded(\n    event: Events.FRAG_LOADED,\n    { frag, part }: FragLoadedData\n  ) {\n    if (\n      frag.type === PlaylistLevelType.MAIN &&\n      Number.isFinite(frag.sn as number)\n    ) {\n      const stats = part ? part.stats : frag.stats;\n      const duration = part ? part.duration : frag.duration;\n      // stop monitoring bw once frag loaded\n      this.clearTimer();\n      // store level id after successful fragment load\n      this.lastLoadedFragLevel = frag.level;\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n\n      // compute level average bitrate\n      if (this.hls.config.abrMaxWithRealBitrate) {\n        const level = this.hls.levels[frag.level];\n        const loadedBytes =\n          (level.loaded ? level.loaded.bytes : 0) + stats.loaded;\n        const loadedDuration =\n          (level.loaded ? level.loaded.duration : 0) + duration;\n        level.loaded = { bytes: loadedBytes, duration: loadedDuration };\n        level.realBitrate = Math.round((8 * loadedBytes) / loadedDuration);\n      }\n      if (frag.bitrateTest) {\n        const fragBufferedData: FragBufferedData = {\n          stats,\n          frag,\n          part,\n          id: frag.type,\n        };\n        this.onFragBuffered(Events.FRAG_BUFFERED, fragBufferedData);\n      }\n    }\n  }\n\n  protected onFragBuffered(\n    event: Events.FRAG_BUFFERED,\n    data: FragBufferedData\n  ) {\n    const { frag, part } = data;\n    const stats = part ? part.stats : frag.stats;\n\n    if (stats.aborted) {\n      return;\n    }\n    // Only count non-alt-audio frags which were actually buffered in our BW calculations\n    if (frag.type !== PlaylistLevelType.MAIN || frag.sn === 'initSegment') {\n      return;\n    }\n    // Use the difference between parsing and request instead of buffering and request to compute fragLoadingProcessing;\n    // rationale is that buffer appending only happens once media is attached. This can happen when config.startFragPrefetch\n    // is used. If we used buffering in that case, our BW estimate sample will be very large.\n    const processingMs = stats.parsing.end - stats.loading.start;\n    this.bwEstimator.sample(processingMs, stats.loaded);\n    stats.bwEstimate = this.bwEstimator.getEstimate();\n    if (frag.bitrateTest) {\n      this.bitrateTestDelay = processingMs / 1000;\n    } else {\n      this.bitrateTestDelay = 0;\n    }\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData) {\n    // stop timer in case of frag loading error\n    if (data.frag?.type === PlaylistLevelType.MAIN) {\n      if (data.type === ErrorTypes.KEY_SYSTEM_ERROR) {\n        this.clearTimer();\n        return;\n      }\n      switch (data.details) {\n        case ErrorDetails.FRAG_LOAD_ERROR:\n        case ErrorDetails.FRAG_LOAD_TIMEOUT:\n        case ErrorDetails.KEY_LOAD_ERROR:\n        case ErrorDetails.KEY_LOAD_TIMEOUT:\n          this.clearTimer();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  clearTimer() {\n    self.clearInterval(this.timer);\n    this.timer = undefined;\n  }\n\n  // return next auto level\n  get nextAutoLevel() {\n    const forcedAutoLevel = this._nextAutoLevel;\n    const bwEstimator = this.bwEstimator;\n    // in case next auto level has been forced, and bw not available or not reliable, return forced value\n    if (forcedAutoLevel !== -1 && !bwEstimator.canEstimate()) {\n      return forcedAutoLevel;\n    }\n\n    // compute next level using ABR logic\n    let nextABRAutoLevel = this.getNextABRAutoLevel();\n    // use forced auto level when ABR selected level has errored\n    if (forcedAutoLevel !== -1 && this.hls.levels[nextABRAutoLevel].loadError) {\n      return forcedAutoLevel;\n    }\n    // if forced auto level has been defined, use it to cap ABR computed quality level\n    if (forcedAutoLevel !== -1) {\n      nextABRAutoLevel = Math.min(forcedAutoLevel, nextABRAutoLevel);\n    }\n\n    return nextABRAutoLevel;\n  }\n\n  private getNextABRAutoLevel() {\n    const { fragCurrent, partCurrent, hls } = this;\n    const { maxAutoLevel, config, minAutoLevel, media } = hls;\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n\n    // playbackRate is the absolute value of the playback rate; if media.playbackRate is 0, we use 1 to load as\n    // if we're playing back at the normal rate.\n    const playbackRate =\n      media && media.playbackRate !== 0 ? Math.abs(media.playbackRate) : 1.0;\n    const avgbw = this.bwEstimator\n      ? this.bwEstimator.getEstimate()\n      : config.abrEwmaDefaultEstimate;\n    // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n    const bufferInfo = hls.mainForwardBufferInfo;\n    const bufferStarvationDelay =\n      (bufferInfo ? bufferInfo.len : 0) / playbackRate;\n\n    // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n    let bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay,\n      config.abrBandWidthFactor,\n      config.abrBandWidthUpFactor\n    );\n    if (bestLevel >= 0) {\n      return bestLevel;\n    }\n    logger.trace(\n      `${\n        bufferStarvationDelay ? 'rebuffering expected' : 'buffer is empty'\n      }, finding optimal quality level`\n    );\n    // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n    // if no matching level found, logic will return 0\n    let maxStarvationDelay = currentFragDuration\n      ? Math.min(currentFragDuration, config.maxStarvationDelay)\n      : config.maxStarvationDelay;\n    let bwFactor = config.abrBandWidthFactor;\n    let bwUpFactor = config.abrBandWidthUpFactor;\n\n    if (!bufferStarvationDelay) {\n      // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n      const bitrateTestDelay = this.bitrateTestDelay;\n      if (bitrateTestDelay) {\n        // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n        // max video loading delay used in  automatic start level selection :\n        // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n        // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n        // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration\n        const maxLoadingDelay = currentFragDuration\n          ? Math.min(currentFragDuration, config.maxLoadingDelay)\n          : config.maxLoadingDelay;\n        maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;\n        logger.trace(\n          `bitrate test took ${Math.round(\n            1000 * bitrateTestDelay\n          )}ms, set first fragment max fetchDuration to ${Math.round(\n            1000 * maxStarvationDelay\n          )} ms`\n        );\n        // don't use conservative factor on bitrate test\n        bwFactor = bwUpFactor = 1;\n      }\n    }\n    bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay + maxStarvationDelay,\n      bwFactor,\n      bwUpFactor\n    );\n    return Math.max(bestLevel, 0);\n  }\n\n  private findBestLevel(\n    currentBw: number,\n    minAutoLevel: number,\n    maxAutoLevel: number,\n    maxFetchDuration: number,\n    bwFactor: number,\n    bwUpFactor: number\n  ): number {\n    const {\n      fragCurrent,\n      partCurrent,\n      lastLoadedFragLevel: currentLevel,\n    } = this;\n    const { levels } = this.hls;\n    const level = levels[currentLevel];\n    const live = !!level?.details?.live;\n    const currentCodecSet = level?.codecSet;\n\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n    for (let i = maxAutoLevel; i >= minAutoLevel; i--) {\n      const levelInfo = levels[i];\n\n      if (\n        !levelInfo ||\n        (currentCodecSet && levelInfo.codecSet !== currentCodecSet)\n      ) {\n        continue;\n      }\n\n      const levelDetails = levelInfo.details;\n      const avgDuration =\n        (partCurrent\n          ? levelDetails?.partTarget\n          : levelDetails?.averagetargetduration) || currentFragDuration;\n\n      let adjustedbw: number;\n      // follow algorithm captured from stagefright :\n      // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n      // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n      // consider only 80% of the available bandwidth, but if we are switching up,\n      // be even more conservative (70%) to avoid overestimating and immediately\n      // switching back.\n      if (i <= currentLevel) {\n        adjustedbw = bwFactor * currentBw;\n      } else {\n        adjustedbw = bwUpFactor * currentBw;\n      }\n\n      const bitrate: number = levels[i].maxBitrate;\n      const fetchDuration: number = (bitrate * avgDuration) / adjustedbw;\n\n      logger.trace(\n        `level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ${i}/${Math.round(\n          adjustedbw\n        )}/${bitrate}/${avgDuration}/${maxFetchDuration}/${fetchDuration}`\n      );\n      // if adjusted bw is greater than level bitrate AND\n      if (\n        adjustedbw > bitrate &&\n        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n        // special case to support startLevel = -1 (bitrateTest) on live streams : in that case we should not exit loop so that findBestLevel will return -1\n        (fetchDuration === 0 ||\n          !Number.isFinite(fetchDuration) ||\n          (live && !this.bitrateTestDelay) ||\n          fetchDuration < maxFetchDuration)\n      ) {\n        // as we are looping from highest to lowest, this will return the best achievable quality level\n        return i;\n      }\n    }\n    // not enough time budget even with quality level 0 ... rebuffering might happen\n    return -1;\n  }\n\n  set nextAutoLevel(nextLevel) {\n    this._nextAutoLevel = nextLevel;\n  }\n}\n\nexport default AbrController;\n","import type Hls from '../hls';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport { getSkipValue, HlsSkip, HlsUrlParameters } from '../types/level';\nimport { computeReloadInterval, mergeDetails } from './level-helper';\nimport { logger } from '../utils/logger';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport type {\n  AudioTrackLoadedData,\n  LevelLoadedData,\n  TrackLoadedData,\n} from '../types/events';\nimport { ErrorData } from '../types/events';\nimport { Events } from '../events';\nimport { ErrorTypes } from '../errors';\n\nexport default class BasePlaylistController implements NetworkComponentAPI {\n  protected hls: Hls;\n  protected timer: number = -1;\n  protected requestScheduled: number = -1;\n  protected canLoad: boolean = false;\n  protected retryCount: number = 0;\n  protected log: (msg: any) => void;\n  protected warn: (msg: any) => void;\n\n  constructor(hls: Hls, logPrefix: string) {\n    this.log = logger.log.bind(logger, `${logPrefix}:`);\n    this.warn = logger.warn.bind(logger, `${logPrefix}:`);\n    this.hls = hls;\n  }\n\n  public destroy(): void {\n    this.clearTimer();\n    // @ts-ignore\n    this.hls = this.log = this.warn = null;\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData): void {\n    if (\n      data.fatal &&\n      (data.type === ErrorTypes.NETWORK_ERROR ||\n        data.type === ErrorTypes.KEY_SYSTEM_ERROR)\n    ) {\n      this.stopLoad();\n    }\n  }\n\n  protected clearTimer(): void {\n    clearTimeout(this.timer);\n    this.timer = -1;\n  }\n\n  public startLoad(): void {\n    this.canLoad = true;\n    this.retryCount = 0;\n    this.requestScheduled = -1;\n    this.loadPlaylist();\n  }\n\n  public stopLoad(): void {\n    this.canLoad = false;\n    this.clearTimer();\n  }\n\n  protected switchParams(\n    playlistUri: string,\n    previous: LevelDetails | undefined\n  ): HlsUrlParameters | undefined {\n    const renditionReports = previous?.renditionReports;\n    if (renditionReports) {\n      for (let i = 0; i < renditionReports.length; i++) {\n        const attr = renditionReports[i];\n        let uri: string;\n        try {\n          uri = new self.URL(attr.URI, previous.url).href;\n        } catch (error) {\n          logger.warn(\n            `Could not construct new URL for Rendition Report: ${error}`\n          );\n          uri = attr.URI || '';\n        }\n        if (uri === playlistUri.slice(-uri.length)) {\n          const msn = parseInt(attr['LAST-MSN']) || previous?.lastPartSn;\n          let part = parseInt(attr['LAST-PART']) || previous?.lastPartIndex;\n          if (this.hls.config.lowLatencyMode) {\n            const currentGoal = Math.min(\n              previous.age - previous.partTarget,\n              previous.targetduration\n            );\n            if (part >= 0 && currentGoal > previous.partTarget) {\n              part += 1;\n            }\n          }\n          return new HlsUrlParameters(\n            msn,\n            part >= 0 ? part : undefined,\n            HlsSkip.No\n          );\n        }\n      }\n    }\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters): void {\n    if (this.requestScheduled === -1) {\n      this.requestScheduled = self.performance.now();\n    }\n  }\n\n  protected shouldLoadTrack(track: MediaPlaylist): boolean {\n    return (\n      this.canLoad &&\n      track &&\n      !!track.url &&\n      (!track.details || track.details.live)\n    );\n  }\n\n  protected playlistLoaded(\n    index: number,\n    data: LevelLoadedData | AudioTrackLoadedData | TrackLoadedData,\n    previousDetails?: LevelDetails\n  ) {\n    const { details, stats } = data;\n\n    // Set last updated date-time\n    const now = self.performance.now();\n    const elapsed = stats.loading.first\n      ? Math.max(0, now - stats.loading.first)\n      : 0;\n    details.advancedDateTime = Date.now() - elapsed;\n\n    // if current playlist is a live playlist, arm a timer to reload it\n    if (details.live || previousDetails?.live) {\n      details.reloaded(previousDetails);\n      if (previousDetails) {\n        this.log(\n          `live playlist ${index} ${\n            details.advanced\n              ? 'REFRESHED ' + details.lastPartSn + '-' + details.lastPartIndex\n              : 'MISSED'\n          }`\n        );\n      }\n      // Merge live playlists to adjust fragment starts and fill in delta playlist skipped segments\n      if (previousDetails && details.fragments.length > 0) {\n        mergeDetails(previousDetails, details);\n      }\n      if (!this.canLoad || !details.live) {\n        return;\n      }\n      let deliveryDirectives: HlsUrlParameters;\n      let msn: number | undefined = undefined;\n      let part: number | undefined = undefined;\n      if (details.canBlockReload && details.endSN && details.advanced) {\n        // Load level with LL-HLS delivery directives\n        const lowLatencyMode = this.hls.config.lowLatencyMode;\n        const lastPartSn = details.lastPartSn;\n        const endSn = details.endSN;\n        const lastPartIndex = details.lastPartIndex;\n        const hasParts = lastPartIndex !== -1;\n        const lastPart = lastPartSn === endSn;\n        // When low latency mode is disabled, we'll skip part requests once the last part index is found\n        const nextSnStartIndex = lowLatencyMode ? 0 : lastPartIndex;\n        if (hasParts) {\n          msn = lastPart ? endSn + 1 : lastPartSn;\n          part = lastPart ? nextSnStartIndex : lastPartIndex + 1;\n        } else {\n          msn = endSn + 1;\n        }\n        // Low-Latency CDN Tune-in: \"age\" header and time since load indicates we're behind by more than one part\n        // Update directives to obtain the Playlist that has the estimated additional duration of media\n        const lastAdvanced = details.age;\n        const cdnAge = lastAdvanced + details.ageHeader;\n        let currentGoal = Math.min(\n          cdnAge - details.partTarget,\n          details.targetduration * 1.5\n        );\n        if (currentGoal > 0) {\n          if (previousDetails && currentGoal > previousDetails.tuneInGoal) {\n            // If we attempted to get the next or latest playlist update, but currentGoal increased,\n            // then we either can't catchup, or the \"age\" header cannot be trusted.\n            this.warn(\n              `CDN Tune-in goal increased from: ${previousDetails.tuneInGoal} to: ${currentGoal} with playlist age: ${details.age}`\n            );\n            currentGoal = 0;\n          } else {\n            const segments = Math.floor(currentGoal / details.targetduration);\n            msn += segments;\n            if (part !== undefined) {\n              const parts = Math.round(\n                (currentGoal % details.targetduration) / details.partTarget\n              );\n              part += parts;\n            }\n            this.log(\n              `CDN Tune-in age: ${\n                details.ageHeader\n              }s last advanced ${lastAdvanced.toFixed(\n                2\n              )}s goal: ${currentGoal} skip sn ${segments} to part ${part}`\n            );\n          }\n          details.tuneInGoal = currentGoal;\n        }\n        deliveryDirectives = this.getDeliveryDirectives(\n          details,\n          data.deliveryDirectives,\n          msn,\n          part\n        );\n        if (lowLatencyMode || !lastPart) {\n          this.loadPlaylist(deliveryDirectives);\n          return;\n        }\n      } else {\n        deliveryDirectives = this.getDeliveryDirectives(\n          details,\n          data.deliveryDirectives,\n          msn,\n          part\n        );\n      }\n      const bufferInfo = this.hls.mainForwardBufferInfo;\n      const position = bufferInfo ? bufferInfo.end - bufferInfo.len : 0;\n      const distanceToLiveEdgeMs = (details.edge - position) * 1000;\n      const reloadInterval = computeReloadInterval(\n        details,\n        distanceToLiveEdgeMs\n      );\n      if (!details.updated) {\n        this.requestScheduled = -1;\n      } else if (now > this.requestScheduled + reloadInterval) {\n        this.requestScheduled = stats.loading.start;\n      }\n\n      if (msn !== undefined && details.canBlockReload) {\n        this.requestScheduled =\n          stats.loading.first +\n          reloadInterval -\n          (details.partTarget * 1000 || 1000);\n      } else {\n        this.requestScheduled =\n          (this.requestScheduled === -1 ? now : this.requestScheduled) +\n          reloadInterval;\n      }\n      let estimatedTimeUntilUpdate = this.requestScheduled - now;\n      estimatedTimeUntilUpdate = Math.max(0, estimatedTimeUntilUpdate);\n      this.log(\n        `reload live playlist ${index} in ${Math.round(\n          estimatedTimeUntilUpdate\n        )} ms`\n      );\n      //     this.log(\n      //       `live reload ${details.updated ? 'REFRESHED' : 'MISSED'}\n      // reload in ${estimatedTimeUntilUpdate / 1000}\n      // round trip ${(stats.loading.end - stats.loading.start) / 1000}\n      // diff ${\n      //   (reloadInterval -\n      //     (estimatedTimeUntilUpdate + stats.loading.end - stats.loading.start)) /\n      //   1000\n      // }\n      // reload interval ${reloadInterval / 1000}\n      // target duration ${details.targetduration}\n      // distance to edge ${distanceToLiveEdgeMs / 1000}`\n      //     );\n\n      this.timer = self.setTimeout(\n        () => this.loadPlaylist(deliveryDirectives),\n        estimatedTimeUntilUpdate\n      );\n    } else {\n      this.clearTimer();\n    }\n  }\n\n  private getDeliveryDirectives(\n    details: LevelDetails,\n    previousDeliveryDirectives: HlsUrlParameters | null,\n    msn?: number,\n    part?: number\n  ): HlsUrlParameters {\n    let skip = getSkipValue(details, msn);\n    if (previousDeliveryDirectives?.skip && details.deltaUpdateFailed) {\n      msn = previousDeliveryDirectives.msn;\n      part = previousDeliveryDirectives.part;\n      skip = HlsSkip.No;\n    }\n    return new HlsUrlParameters(msn, part, skip);\n  }\n\n  protected retryLoadingOrFail(errorEvent: ErrorData): boolean {\n    const { config } = this.hls;\n    const retry = this.retryCount < config.levelLoadingMaxRetry;\n    if (retry) {\n      this.requestScheduled = -1;\n      this.retryCount++;\n      if (\n        errorEvent.details.indexOf('LoadTimeOut') > -1 &&\n        errorEvent.context?.deliveryDirectives\n      ) {\n        // The LL-HLS request already timed out so retry immediately\n        this.warn(\n          `retry playlist loading #${this.retryCount} after \"${errorEvent.details}\"`\n        );\n        this.loadPlaylist();\n      } else {\n        // exponential backoff capped to max retry timeout\n        const delay = Math.min(\n          Math.pow(2, this.retryCount) * config.levelLoadingRetryDelay,\n          config.levelLoadingMaxRetryTimeout\n        );\n        // Schedule level/track reload\n        this.timer = self.setTimeout(() => this.loadPlaylist(), delay);\n        this.warn(\n          `retry playlist loading #${this.retryCount} in ${delay} ms after \"${errorEvent.details}\"`\n        );\n      }\n    } else {\n      this.warn(`cannot recover from error \"${errorEvent.details}\"`);\n      // stopping live reloading timer if any\n      this.clearTimer();\n      // switch error to fatal\n      errorEvent.fatal = true;\n    }\n    return retry;\n  }\n}\n","import TaskLoop from '../task-loop';\nimport { FragmentState } from './fragment-tracker';\nimport { Bufferable, BufferHelper, BufferInfo } from '../utils/buffer-helper';\nimport { logger } from '../utils/logger';\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { ChunkMetadata } from '../types/transmuxer';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { alignStream } from '../utils/discontinuities';\nimport {\n  findFragmentByPDT,\n  findFragmentByPTS,\n  findFragWithCC,\n} from './fragment-finders';\nimport {\n  getFragmentWithSN,\n  getPartWith,\n  updateFragPTSDTS,\n} from './level-helper';\nimport TransmuxerInterface from '../demux/transmuxer-interface';\nimport { Fragment, Part } from '../loader/fragment';\nimport FragmentLoader, {\n  FragmentLoadProgressCallback,\n  LoadError,\n} from '../loader/fragment-loader';\nimport KeyLoader from '../loader/key-loader';\nimport { LevelDetails } from '../loader/level-details';\nimport Decrypter from '../crypt/decrypter';\nimport TimeRanges from '../utils/time-ranges';\nimport { PlaylistLevelType } from '../types/loader';\nimport type {\n  BufferAppendingData,\n  ErrorData,\n  FragLoadedData,\n  PartsLoadedData,\n  KeyLoadedData,\n  MediaAttachingData,\n  BufferFlushingData,\n  LevelSwitchingData,\n} from '../types/events';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type { Level } from '../types/level';\nimport type { RemuxedTrack } from '../types/remuxer';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type { SourceBufferName } from '../types/buffer';\n\ntype ResolveFragLoaded = (FragLoadedEndData) => void;\ntype RejectFragLoaded = (LoadError) => void;\n\nexport const State = {\n  STOPPED: 'STOPPED',\n  IDLE: 'IDLE',\n  KEY_LOADING: 'KEY_LOADING',\n  FRAG_LOADING: 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_TRACK: 'WAITING_TRACK',\n  PARSING: 'PARSING',\n  PARSED: 'PARSED',\n  ENDED: 'ENDED',\n  ERROR: 'ERROR',\n  WAITING_INIT_PTS: 'WAITING_INIT_PTS',\n  WAITING_LEVEL: 'WAITING_LEVEL',\n};\n\nexport default class BaseStreamController\n  extends TaskLoop\n  implements NetworkComponentAPI\n{\n  protected hls: Hls;\n\n  protected fragPrevious: Fragment | null = null;\n  protected fragCurrent: Fragment | null = null;\n  protected fragmentTracker: FragmentTracker;\n  protected transmuxer: TransmuxerInterface | null = null;\n  protected _state: string = State.STOPPED;\n  protected media: HTMLMediaElement | null = null;\n  protected mediaBuffer: Bufferable | null = null;\n  protected config: HlsConfig;\n  protected bitrateTest: boolean = false;\n  protected lastCurrentTime: number = 0;\n  protected nextLoadPosition: number = 0;\n  protected startPosition: number = 0;\n  protected loadedmetadata: boolean = false;\n  protected fragLoadError: number = 0;\n  protected retryDate: number = 0;\n  protected levels: Array<Level> | null = null;\n  protected fragmentLoader: FragmentLoader;\n  protected keyLoader: KeyLoader;\n  protected levelLastLoaded: number | null = null;\n  protected startFragRequested: boolean = false;\n  protected decrypter: Decrypter;\n  protected initPTS: Array<number> = [];\n  protected onvseeking: EventListener | null = null;\n  protected onvended: EventListener | null = null;\n\n  private readonly logPrefix: string = '';\n  protected log: (msg: any) => void;\n  protected warn: (msg: any) => void;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader,\n    logPrefix: string\n  ) {\n    super();\n    this.logPrefix = logPrefix;\n    this.log = logger.log.bind(logger, `${logPrefix}:`);\n    this.warn = logger.warn.bind(logger, `${logPrefix}:`);\n    this.hls = hls;\n    this.fragmentLoader = new FragmentLoader(hls.config);\n    this.keyLoader = keyLoader;\n    this.fragmentTracker = fragmentTracker;\n    this.config = hls.config;\n    this.decrypter = new Decrypter(hls.config);\n    hls.on(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n  }\n\n  protected doTick() {\n    this.onTickEnd();\n  }\n\n  protected onTickEnd() {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public startLoad(startPosition: number): void {}\n\n  public stopLoad() {\n    this.fragmentLoader.abort();\n    this.keyLoader.abort();\n    const frag = this.fragCurrent;\n    if (frag) {\n      frag.abortRequests();\n      this.fragmentTracker.removeFragment(frag);\n    }\n    this.resetTransmuxer();\n    this.fragCurrent = null;\n    this.fragPrevious = null;\n    this.clearInterval();\n    this.clearNextTick();\n    this.state = State.STOPPED;\n  }\n\n  protected _streamEnded(\n    bufferInfo: BufferInfo,\n    levelDetails: LevelDetails\n  ): boolean {\n    // If playlist is live, there is another buffered range after the current range, nothing buffered, media is detached,\n    // of nothing loading/loaded return false\n    if (\n      levelDetails.live ||\n      bufferInfo.nextStart ||\n      !bufferInfo.end ||\n      !this.media\n    ) {\n      return false;\n    }\n    const partList = levelDetails.partList;\n    // Since the last part isn't guaranteed to correspond to the last playlist segment for Low-Latency HLS,\n    // check instead if the last part is buffered.\n    if (partList?.length) {\n      const lastPart = partList[partList.length - 1];\n\n      // Checking the midpoint of the part for potential margin of error and related issues.\n      // NOTE: Technically I believe parts could yield content that is < the computed duration (including potential a duration of 0)\n      // and still be spec-compliant, so there may still be edge cases here. Likewise, there could be issues in end of stream\n      // part mismatches for independent audio and video playlists/segments.\n      const lastPartBuffered = BufferHelper.isBuffered(\n        this.media,\n        lastPart.start + lastPart.duration / 2\n      );\n      return lastPartBuffered;\n    }\n\n    const playlistType =\n      levelDetails.fragments[levelDetails.fragments.length - 1].type;\n    return this.fragmentTracker.isEndListAppended(playlistType);\n  }\n\n  protected getLevelDetails(): LevelDetails | undefined {\n    if (this.levels && this.levelLastLoaded !== null) {\n      return this.levels[this.levelLastLoaded]?.details;\n    }\n  }\n\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachingData\n  ) {\n    const media = (this.media = this.mediaBuffer = data.media);\n    this.onvseeking = this.onMediaSeeking.bind(this) as EventListener;\n    this.onvended = this.onMediaEnded.bind(this) as EventListener;\n    media.addEventListener('seeking', this.onvseeking);\n    media.addEventListener('ended', this.onvended);\n    const config = this.config;\n    if (this.levels && config.autoStartLoad && this.state === State.STOPPED) {\n      this.startLoad(config.startPosition);\n    }\n  }\n\n  protected onMediaDetaching() {\n    const media = this.media;\n    if (media?.ended) {\n      this.log('MSE detaching and video ended, reset startPosition');\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n\n    // remove video listeners\n    if (media && this.onvseeking && this.onvended) {\n      media.removeEventListener('seeking', this.onvseeking);\n      media.removeEventListener('ended', this.onvended);\n      this.onvseeking = this.onvended = null;\n    }\n    if (this.keyLoader) {\n      this.keyLoader.detach();\n    }\n    this.media = this.mediaBuffer = null;\n    this.loadedmetadata = false;\n    this.fragmentTracker.removeAllFragments();\n    this.stopLoad();\n  }\n\n  protected onMediaSeeking() {\n    const { config, fragCurrent, media, mediaBuffer, state } = this;\n    const currentTime: number = media ? media.currentTime : 0;\n    const bufferInfo = BufferHelper.bufferInfo(\n      mediaBuffer ? mediaBuffer : media,\n      currentTime,\n      config.maxBufferHole\n    );\n\n    this.log(\n      `media seeking to ${\n        Number.isFinite(currentTime) ? currentTime.toFixed(3) : currentTime\n      }, state: ${state}`\n    );\n\n    if (this.state === State.ENDED) {\n      this.resetLoadingState();\n    } else if (fragCurrent) {\n      // Seeking while frag load is in progress\n      const tolerance = config.maxFragLookUpTolerance;\n      const fragStartOffset = fragCurrent.start - tolerance;\n      const fragEndOffset =\n        fragCurrent.start + fragCurrent.duration + tolerance;\n      // if seeking out of buffered range or into new one\n      if (\n        !bufferInfo.len ||\n        fragEndOffset < bufferInfo.start ||\n        fragStartOffset > bufferInfo.end\n      ) {\n        const pastFragment = currentTime > fragEndOffset;\n        // if the seek position is outside the current fragment range\n        if (currentTime < fragStartOffset || pastFragment) {\n          if (pastFragment && fragCurrent.loader) {\n            this.log(\n              'seeking outside of buffer while fragment load in progress, cancel fragment load'\n            );\n            fragCurrent.abortRequests();\n          }\n          this.resetLoadingState();\n        }\n      }\n    }\n\n    if (media) {\n      this.lastCurrentTime = currentTime;\n    }\n\n    // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target\n    if (!this.loadedmetadata && !bufferInfo.len) {\n      this.nextLoadPosition = this.startPosition = currentTime;\n    }\n\n    // Async tick to speed up processing\n    this.tickImmediate();\n  }\n\n  protected onMediaEnded() {\n    // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n    this.startPosition = this.lastCurrentTime = 0;\n  }\n\n  protected onLevelSwitching(\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ): void {\n    this.fragLoadError = 0;\n  }\n\n  protected onHandlerDestroying() {\n    this.stopLoad();\n    super.onHandlerDestroying();\n  }\n\n  protected onHandlerDestroyed() {\n    this.state = State.STOPPED;\n    this.hls.off(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    if (this.fragmentLoader) {\n      this.fragmentLoader.destroy();\n    }\n    if (this.keyLoader) {\n      this.keyLoader.destroy();\n    }\n    if (this.decrypter) {\n      this.decrypter.destroy();\n    }\n\n    this.hls =\n      this.log =\n      this.warn =\n      this.decrypter =\n      this.keyLoader =\n      this.fragmentLoader =\n      this.fragmentTracker =\n        null as any;\n    super.onHandlerDestroyed();\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    this._loadFragForPlayback(frag, levelDetails, targetBufferTime);\n  }\n\n  private _loadFragForPlayback(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    const progressCallback: FragmentLoadProgressCallback = (\n      data: FragLoadedData\n    ) => {\n      if (this.fragContextChanged(frag)) {\n        this.warn(\n          `Fragment ${frag.sn}${\n            data.part ? ' p: ' + data.part.index : ''\n          } of level ${frag.level} was dropped during download.`\n        );\n        this.fragmentTracker.removeFragment(frag);\n        return;\n      }\n      frag.stats.chunkCount++;\n      this._handleFragmentLoadProgress(data);\n    };\n\n    this._doFragLoad(frag, levelDetails, targetBufferTime, progressCallback)\n      .then((data) => {\n        if (!data) {\n          // if we're here we probably needed to backtrack or are waiting for more parts\n          return;\n        }\n        this.fragLoadError = 0;\n        const state = this.state;\n        if (this.fragContextChanged(frag)) {\n          if (\n            state === State.FRAG_LOADING ||\n            (!this.fragCurrent && state === State.PARSING)\n          ) {\n            this.fragmentTracker.removeFragment(frag);\n            this.state = State.IDLE;\n          }\n          return;\n        }\n\n        if ('payload' in data) {\n          this.log(`Loaded fragment ${frag.sn} of level ${frag.level}`);\n          this.hls.trigger(Events.FRAG_LOADED, data);\n        }\n\n        // Pass through the whole payload; controllers not implementing progressive loading receive data from this callback\n        this._handleFragmentLoadComplete(data);\n      })\n      .catch((reason) => {\n        if (this.state === State.STOPPED || this.state === State.ERROR) {\n          return;\n        }\n        this.warn(reason);\n        this.resetFragmentLoading(frag);\n      });\n  }\n\n  protected flushMainBuffer(\n    startOffset: number,\n    endOffset: number,\n    type: SourceBufferName | null = null\n  ) {\n    if (!(startOffset - endOffset)) {\n      return;\n    }\n    // When alternate audio is playing, the audio-stream-controller is responsible for the audio buffer. Otherwise,\n    // passing a null type flushes both buffers\n    const flushScope: BufferFlushingData = { startOffset, endOffset, type };\n    // Reset load errors on flush\n    this.fragLoadError = 0;\n    this.hls.trigger(Events.BUFFER_FLUSHING, flushScope);\n  }\n\n  protected _loadInitSegment(frag: Fragment, details: LevelDetails) {\n    this._doFragLoad(frag, details)\n      .then((data) => {\n        if (!data || this.fragContextChanged(frag) || !this.levels) {\n          throw new Error('init load aborted');\n        }\n\n        return data;\n      })\n      .then((data: FragLoadedData) => {\n        const { hls } = this;\n        const { payload } = data;\n        const decryptData = frag.decryptdata;\n\n        // check to see if the payload needs to be decrypted\n        if (\n          payload &&\n          payload.byteLength > 0 &&\n          decryptData &&\n          decryptData.key &&\n          decryptData.iv &&\n          decryptData.method === 'AES-128'\n        ) {\n          const startTime = self.performance.now();\n          // decrypt the subtitles\n          return this.decrypter\n            .decrypt(\n              new Uint8Array(payload),\n              decryptData.key.buffer,\n              decryptData.iv.buffer\n            )\n            .then((decryptedData) => {\n              const endTime = self.performance.now();\n              hls.trigger(Events.FRAG_DECRYPTED, {\n                frag,\n                payload: decryptedData,\n                stats: {\n                  tstart: startTime,\n                  tdecrypt: endTime,\n                },\n              });\n              data.payload = decryptedData;\n\n              return data;\n            });\n        }\n\n        return data;\n      })\n      .then((data: FragLoadedData) => {\n        const { fragCurrent, hls, levels } = this;\n        if (!levels) {\n          throw new Error('init load aborted, missing levels');\n        }\n\n        const details = levels[frag.level].details as LevelDetails;\n        console.assert(\n          details,\n          'Level details are defined when init segment is loaded'\n        );\n\n        const stats = frag.stats;\n        this.state = State.IDLE;\n        this.fragLoadError = 0;\n        frag.data = new Uint8Array(data.payload);\n        stats.parsing.start = stats.buffering.start = self.performance.now();\n        stats.parsing.end = stats.buffering.end = self.performance.now();\n\n        // Silence FRAG_BUFFERED event if fragCurrent is null\n        if (data.frag === fragCurrent) {\n          hls.trigger(Events.FRAG_BUFFERED, {\n            stats,\n            frag: fragCurrent,\n            part: null,\n            id: frag.type,\n          });\n        }\n        this.tick();\n      })\n      .catch((reason) => {\n        if (this.state === State.STOPPED || this.state === State.ERROR) {\n          return;\n        }\n        this.warn(reason);\n        this.resetFragmentLoading(frag);\n      });\n  }\n\n  protected fragContextChanged(frag: Fragment | null) {\n    const { fragCurrent } = this;\n    return (\n      !frag ||\n      !fragCurrent ||\n      frag.level !== fragCurrent.level ||\n      frag.sn !== fragCurrent.sn ||\n      frag.urlId !== fragCurrent.urlId\n    );\n  }\n\n  protected fragBufferedComplete(frag: Fragment, part: Part | null) {\n    const media = this.mediaBuffer ? this.mediaBuffer : this.media;\n    this.log(\n      `Buffered ${frag.type} sn: ${frag.sn}${\n        part ? ' part: ' + part.index : ''\n      } of ${this.logPrefix === '[stream-controller]' ? 'level' : 'track'} ${\n        frag.level\n      } (frag:[${(frag.startPTS ?? NaN).toFixed(3)}-${(\n        frag.endPTS ?? NaN\n      ).toFixed(3)}] > buffer:${\n        media\n          ? TimeRanges.toString(BufferHelper.getBuffered(media))\n          : '(detached)'\n      })`\n    );\n    this.state = State.IDLE;\n    if (!media) {\n      return;\n    }\n    if (\n      !this.loadedmetadata &&\n      frag.type == PlaylistLevelType.MAIN &&\n      media.buffered.length &&\n      this.fragCurrent?.sn === this.fragPrevious?.sn\n    ) {\n      this.loadedmetadata = true;\n      this.seekToStartPos();\n    }\n    this.tick();\n  }\n\n  protected seekToStartPos() {}\n\n  protected _handleFragmentLoadComplete(fragLoadedEndData: PartsLoadedData) {\n    const { transmuxer } = this;\n    if (!transmuxer) {\n      return;\n    }\n    const { frag, part, partsLoaded } = fragLoadedEndData;\n    // If we did not load parts, or loaded all parts, we have complete (not partial) fragment data\n    const complete =\n      !partsLoaded ||\n      partsLoaded.length === 0 ||\n      partsLoaded.some((fragLoaded) => !fragLoaded);\n    const chunkMeta = new ChunkMetadata(\n      frag.level,\n      frag.sn as number,\n      frag.stats.chunkCount + 1,\n      0,\n      part ? part.index : -1,\n      !complete\n    );\n    transmuxer.flush(chunkMeta);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _handleFragmentLoadProgress(\n    frag: PartsLoadedData | FragLoadedData\n  ) {}\n\n  protected _doFragLoad(\n    frag: Fragment,\n    details: LevelDetails,\n    targetBufferTime: number | null = null,\n    progressCallback?: FragmentLoadProgressCallback\n  ): Promise<PartsLoadedData | FragLoadedData | null> {\n    if (!this.levels) {\n      throw new Error('frag load aborted, missing levels');\n    }\n\n    let keyLoadingPromise: Promise<KeyLoadedData | void> | null = null;\n    if (frag.encrypted && !frag.decryptdata?.key) {\n      this.log(\n        `Loading key for ${frag.sn} of [${details.startSN}-${details.endSN}], ${\n          this.logPrefix === '[stream-controller]' ? 'level' : 'track'\n        } ${frag.level}`\n      );\n      this.state = State.KEY_LOADING;\n      this.fragCurrent = frag;\n      keyLoadingPromise = this.keyLoader.load(frag).then((keyLoadedData) => {\n        if (!this.fragContextChanged(keyLoadedData.frag)) {\n          this.hls.trigger(Events.KEY_LOADED, keyLoadedData);\n          if (this.state === State.KEY_LOADING) {\n            this.state = State.IDLE;\n          }\n          return keyLoadedData;\n        }\n      });\n      this.hls.trigger(Events.KEY_LOADING, { frag });\n      this.throwIfFragContextChanged('KEY_LOADING');\n    } else if (!frag.encrypted && details.encryptedFragments.length) {\n      this.keyLoader.loadClear(frag, details.encryptedFragments);\n    }\n\n    targetBufferTime = Math.max(frag.start, targetBufferTime || 0);\n    if (this.config.lowLatencyMode && details) {\n      const partList = details.partList;\n      if (partList && progressCallback) {\n        if (targetBufferTime > frag.end && details.fragmentHint) {\n          frag = details.fragmentHint;\n        }\n        const partIndex = this.getNextPart(partList, frag, targetBufferTime);\n        if (partIndex > -1) {\n          const part = partList[partIndex];\n          this.log(\n            `Loading part sn: ${frag.sn} p: ${part.index} cc: ${\n              frag.cc\n            } of playlist [${details.startSN}-${\n              details.endSN\n            }] parts [0-${partIndex}-${partList.length - 1}] ${\n              this.logPrefix === '[stream-controller]' ? 'level' : 'track'\n            }: ${frag.level}, target: ${parseFloat(\n              targetBufferTime.toFixed(3)\n            )}`\n          );\n          this.nextLoadPosition = part.start + part.duration;\n          this.state = State.FRAG_LOADING;\n          this.hls.trigger(Events.FRAG_LOADING, {\n            frag,\n            part: partList[partIndex],\n            targetBufferTime,\n          });\n          this.throwIfFragContextChanged('FRAG_LOADING parts');\n          if (keyLoadingPromise) {\n            return keyLoadingPromise\n              .then((keyLoadedData) => {\n                if (\n                  !keyLoadedData ||\n                  this.fragContextChanged(keyLoadedData.frag)\n                ) {\n                  return null;\n                }\n                return this.doFragPartsLoad(\n                  frag,\n                  partList,\n                  partIndex,\n                  progressCallback\n                );\n              })\n              .catch((error) => this.handleFragLoadError(error));\n          }\n\n          return this.doFragPartsLoad(\n            frag,\n            partList,\n            partIndex,\n            progressCallback\n          ).catch((error: LoadError) => this.handleFragLoadError(error));\n        } else if (\n          !frag.url ||\n          this.loadedEndOfParts(partList, targetBufferTime)\n        ) {\n          // Fragment hint has no parts\n          return Promise.resolve(null);\n        }\n      }\n    }\n\n    this.log(\n      `Loading fragment ${frag.sn} cc: ${frag.cc} ${\n        details ? 'of [' + details.startSN + '-' + details.endSN + '] ' : ''\n      }${this.logPrefix === '[stream-controller]' ? 'level' : 'track'}: ${\n        frag.level\n      }, target: ${parseFloat(targetBufferTime.toFixed(3))}`\n    );\n    // Don't update nextLoadPosition for fragments which are not buffered\n    if (Number.isFinite(frag.sn as number) && !this.bitrateTest) {\n      this.nextLoadPosition = frag.start + frag.duration;\n    }\n    this.state = State.FRAG_LOADING;\n    this.hls.trigger(Events.FRAG_LOADING, { frag, targetBufferTime });\n    this.throwIfFragContextChanged('FRAG_LOADING');\n\n    // Load key before streaming fragment data\n    const dataOnProgress = this.config.progressive;\n    if (dataOnProgress && keyLoadingPromise) {\n      return keyLoadingPromise\n        .then((keyLoadedData) => {\n          if (!keyLoadedData || this.fragContextChanged(keyLoadedData?.frag)) {\n            return null;\n          }\n          return this.fragmentLoader.load(frag, progressCallback);\n        })\n        .catch((error) => this.handleFragLoadError(error));\n    }\n\n    // load unencrypted fragment data with progress event,\n    // or handle fragment result after key and fragment are finished loading\n    return Promise.all([\n      this.fragmentLoader.load(\n        frag,\n        dataOnProgress ? progressCallback : undefined\n      ),\n      keyLoadingPromise,\n    ])\n      .then(([fragLoadedData]) => {\n        if (!dataOnProgress && fragLoadedData && progressCallback) {\n          progressCallback(fragLoadedData);\n        }\n        return fragLoadedData;\n      })\n      .catch((error) => this.handleFragLoadError(error));\n  }\n\n  private throwIfFragContextChanged(context: string): void | never {\n    // exit if context changed during event loop\n    if (this.fragCurrent === null) {\n      throw new Error(`frag load aborted, context changed in ${context}`);\n    }\n  }\n\n  private doFragPartsLoad(\n    frag: Fragment,\n    partList: Part[],\n    partIndex: number,\n    progressCallback: FragmentLoadProgressCallback\n  ): Promise<PartsLoadedData | null> {\n    return new Promise(\n      (resolve: ResolveFragLoaded, reject: RejectFragLoaded) => {\n        const partsLoaded: FragLoadedData[] = [];\n        const loadPartIndex = (index: number) => {\n          const part = partList[index];\n          this.fragmentLoader\n            .loadPart(frag, part, progressCallback)\n            .then((partLoadedData: FragLoadedData) => {\n              partsLoaded[part.index] = partLoadedData;\n              const loadedPart = partLoadedData.part as Part;\n              this.hls.trigger(Events.FRAG_LOADED, partLoadedData);\n              const nextPart = partList[index + 1];\n              if (nextPart && nextPart.fragment === frag) {\n                loadPartIndex(index + 1);\n              } else {\n                return resolve({\n                  frag,\n                  part: loadedPart,\n                  partsLoaded,\n                });\n              }\n            })\n            .catch(reject);\n        };\n        loadPartIndex(partIndex);\n      }\n    );\n  }\n\n  private handleFragLoadError(error: LoadError | Error) {\n    if ('data' in error) {\n      const data = error.data;\n      if (error.data && data.details === ErrorDetails.INTERNAL_ABORTED) {\n        this.handleFragLoadAborted(data.frag, data.part);\n      } else {\n        this.hls.trigger(Events.ERROR, data as ErrorData);\n      }\n    } else {\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.OTHER_ERROR,\n        details: ErrorDetails.INTERNAL_EXCEPTION,\n        err: error,\n        fatal: true,\n      });\n    }\n    return null;\n  }\n\n  protected _handleTransmuxerFlush(chunkMeta: ChunkMetadata) {\n    const context = this.getCurrentContext(chunkMeta);\n    if (!context || this.state !== State.PARSING) {\n      if (\n        !this.fragCurrent &&\n        this.state !== State.STOPPED &&\n        this.state !== State.ERROR\n      ) {\n        this.state = State.IDLE;\n      }\n      return;\n    }\n    const { frag, part, level } = context;\n    const now = self.performance.now();\n    frag.stats.parsing.end = now;\n    if (part) {\n      part.stats.parsing.end = now;\n    }\n    this.updateLevelTiming(frag, part, level, chunkMeta.partial);\n  }\n\n  protected getCurrentContext(\n    chunkMeta: ChunkMetadata\n  ): { frag: Fragment; part: Part | null; level: Level } | null {\n    const { levels } = this;\n    const { level: levelIndex, sn, part: partIndex } = chunkMeta;\n    if (!levels || !levels[levelIndex]) {\n      this.warn(\n        `Levels object was unset while buffering fragment ${sn} of level ${levelIndex}. The current chunk will not be buffered.`\n      );\n      return null;\n    }\n    const level = levels[levelIndex];\n    const part = partIndex > -1 ? getPartWith(level, sn, partIndex) : null;\n    const frag = part\n      ? part.fragment\n      : getFragmentWithSN(level, sn, this.fragCurrent);\n    if (!frag) {\n      return null;\n    }\n    return { frag, part, level };\n  }\n\n  protected bufferFragmentData(\n    data: RemuxedTrack,\n    frag: Fragment,\n    part: Part | null,\n    chunkMeta: ChunkMetadata\n  ) {\n    if (!data || this.state !== State.PARSING) {\n      return;\n    }\n\n    const { data1, data2 } = data;\n    let buffer = data1;\n    if (data1 && data2) {\n      // Combine the moof + mdat so that we buffer with a single append\n      buffer = appendUint8Array(data1, data2);\n    }\n\n    if (!buffer || !buffer.length) {\n      return;\n    }\n\n    const segment: BufferAppendingData = {\n      type: data.type,\n      frag,\n      part,\n      chunkMeta,\n      parent: frag.type,\n      data: buffer,\n    };\n    this.hls.trigger(Events.BUFFER_APPENDING, segment);\n\n    if (data.dropped && data.independent && !part) {\n      // Clear buffer so that we reload previous segments sequentially if required\n      this.flushBufferGap(frag);\n    }\n  }\n\n  protected flushBufferGap(frag: Fragment) {\n    const media = this.media;\n    if (!media) {\n      return;\n    }\n    // If currentTime is not buffered, clear the back buffer so that we can backtrack as much as needed\n    if (!BufferHelper.isBuffered(media, media.currentTime)) {\n      this.flushMainBuffer(0, frag.start);\n      return;\n    }\n    // Remove back-buffer without interrupting playback to allow back tracking\n    const currentTime = media.currentTime;\n    const bufferInfo = BufferHelper.bufferInfo(media, currentTime, 0);\n    const fragDuration = frag.duration;\n    const segmentFraction = Math.min(\n      this.config.maxFragLookUpTolerance * 2,\n      fragDuration * 0.25\n    );\n    const start = Math.max(\n      Math.min(frag.start - segmentFraction, bufferInfo.end - segmentFraction),\n      currentTime + segmentFraction\n    );\n    if (frag.start - start > segmentFraction) {\n      this.flushMainBuffer(start, frag.start);\n    }\n  }\n\n  protected getFwdBufferInfo(\n    bufferable: Bufferable | null,\n    type: PlaylistLevelType\n  ): BufferInfo | null {\n    const { config } = this;\n    const pos = this.getLoadPosition();\n    if (!Number.isFinite(pos)) {\n      return null;\n    }\n    const bufferInfo = BufferHelper.bufferInfo(\n      bufferable,\n      pos,\n      config.maxBufferHole\n    );\n    // Workaround flaw in getting forward buffer when maxBufferHole is smaller than gap at current pos\n    if (bufferInfo.len === 0 && bufferInfo.nextStart !== undefined) {\n      const bufferedFragAtPos = this.fragmentTracker.getBufferedFrag(pos, type);\n      if (bufferedFragAtPos && bufferInfo.nextStart < bufferedFragAtPos.end) {\n        return BufferHelper.bufferInfo(\n          bufferable,\n          pos,\n          Math.max(bufferInfo.nextStart, config.maxBufferHole)\n        );\n      }\n    }\n    return bufferInfo;\n  }\n\n  protected getMaxBufferLength(levelBitrate?: number): number {\n    const { config } = this;\n    let maxBufLen;\n    if (levelBitrate) {\n      maxBufLen = Math.max(\n        (8 * config.maxBufferSize) / levelBitrate,\n        config.maxBufferLength\n      );\n    } else {\n      maxBufLen = config.maxBufferLength;\n    }\n    return Math.min(maxBufLen, config.maxMaxBufferLength);\n  }\n\n  protected reduceMaxBufferLength(threshold?: number) {\n    const config = this.config;\n    const minLength = threshold || config.maxBufferLength;\n    if (config.maxMaxBufferLength >= minLength) {\n      // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...\n      config.maxMaxBufferLength /= 2;\n      this.warn(`Reduce max buffer length to ${config.maxMaxBufferLength}s`);\n      return true;\n    }\n    return false;\n  }\n\n  protected getNextFragment(\n    pos: number,\n    levelDetails: LevelDetails\n  ): Fragment | null {\n    const fragments = levelDetails.fragments;\n    const fragLen = fragments.length;\n\n    if (!fragLen) {\n      return null;\n    }\n\n    // find fragment index, contiguous with end of buffer position\n    const { config } = this;\n    const start = fragments[0].start;\n    let frag;\n\n    if (levelDetails.live) {\n      const initialLiveManifestSize = config.initialLiveManifestSize;\n      if (fragLen < initialLiveManifestSize) {\n        this.warn(\n          `Not enough fragments to start playback (have: ${fragLen}, need: ${initialLiveManifestSize})`\n        );\n        return null;\n      }\n      // The real fragment start times for a live stream are only known after the PTS range for that level is known.\n      // In order to discover the range, we load the best matching fragment for that level and demux it.\n      // Do not load using live logic if the starting frag is requested - we want to use getFragmentAtPosition() so that\n      // we get the fragment matching that start time\n      if (\n        !levelDetails.PTSKnown &&\n        !this.startFragRequested &&\n        this.startPosition === -1\n      ) {\n        frag = this.getInitialLiveFragment(levelDetails, fragments);\n        this.startPosition = frag\n          ? this.hls.liveSyncPosition || frag.start\n          : pos;\n      }\n    } else if (pos <= start) {\n      // VoD playlist: if loadPosition before start of playlist, load first fragment\n      frag = fragments[0];\n    }\n\n    // If we haven't run into any special cases already, just load the fragment most closely matching the requested position\n    if (!frag) {\n      const end = config.lowLatencyMode\n        ? levelDetails.partEnd\n        : levelDetails.fragmentEnd;\n      frag = this.getFragmentAtPosition(pos, end, levelDetails);\n    }\n\n    return this.mapToInitFragWhenRequired(frag);\n  }\n\n  mapToInitFragWhenRequired(frag: Fragment | null): typeof frag {\n    // If an initSegment is present, it must be buffered first\n    if (frag?.initSegment && !frag?.initSegment.data && !this.bitrateTest) {\n      return frag.initSegment;\n    }\n\n    return frag;\n  }\n\n  getNextPart(\n    partList: Part[],\n    frag: Fragment,\n    targetBufferTime: number\n  ): number {\n    let nextPart = -1;\n    let contiguous = false;\n    let independentAttrOmitted = true;\n    for (let i = 0, len = partList.length; i < len; i++) {\n      const part = partList[i];\n      independentAttrOmitted = independentAttrOmitted && !part.independent;\n      if (nextPart > -1 && targetBufferTime < part.start) {\n        break;\n      }\n      const loaded = part.loaded;\n      if (loaded) {\n        nextPart = -1;\n      } else if (\n        (contiguous || part.independent || independentAttrOmitted) &&\n        part.fragment === frag\n      ) {\n        nextPart = i;\n      }\n      contiguous = loaded;\n    }\n    return nextPart;\n  }\n\n  private loadedEndOfParts(\n    partList: Part[],\n    targetBufferTime: number\n  ): boolean {\n    const lastPart = partList[partList.length - 1];\n    return lastPart && targetBufferTime > lastPart.start && lastPart.loaded;\n  }\n\n  /*\n   This method is used find the best matching first fragment for a live playlist. This fragment is used to calculate the\n   \"sliding\" of the playlist, which is its offset from the start of playback. After sliding we can compute the real\n   start and end times for each fragment in the playlist (after which this method will not need to be called).\n  */\n  protected getInitialLiveFragment(\n    levelDetails: LevelDetails,\n    fragments: Array<Fragment>\n  ): Fragment | null {\n    const fragPrevious = this.fragPrevious;\n    let frag: Fragment | null = null;\n    if (fragPrevious) {\n      if (levelDetails.hasProgramDateTime) {\n        // Prefer using PDT, because it can be accurate enough to choose the correct fragment without knowing the level sliding\n        this.log(\n          `Live playlist, switching playlist, load frag with same PDT: ${fragPrevious.programDateTime}`\n        );\n        frag = findFragmentByPDT(\n          fragments,\n          fragPrevious.endProgramDateTime,\n          this.config.maxFragLookUpTolerance\n        );\n      }\n      if (!frag) {\n        // SN does not need to be accurate between renditions, but depending on the packaging it may be so.\n        const targetSN = (fragPrevious.sn as number) + 1;\n        if (\n          targetSN >= levelDetails.startSN &&\n          targetSN <= levelDetails.endSN\n        ) {\n          const fragNext = fragments[targetSN - levelDetails.startSN];\n          // Ensure that we're staying within the continuity range, since PTS resets upon a new range\n          if (fragPrevious.cc === fragNext.cc) {\n            frag = fragNext;\n            this.log(\n              `Live playlist, switching playlist, load frag with next SN: ${\n                frag!.sn\n              }`\n            );\n          }\n        }\n        // It's important to stay within the continuity range if available; otherwise the fragments in the playlist\n        // will have the wrong start times\n        if (!frag) {\n          frag = findFragWithCC(fragments, fragPrevious.cc);\n          if (frag) {\n            this.log(\n              `Live playlist, switching playlist, load frag with same CC: ${frag.sn}`\n            );\n          }\n        }\n      }\n    } else {\n      // Find a new start fragment when fragPrevious is null\n      const liveStart = this.hls.liveSyncPosition;\n      if (liveStart !== null) {\n        frag = this.getFragmentAtPosition(\n          liveStart,\n          this.bitrateTest ? levelDetails.fragmentEnd : levelDetails.edge,\n          levelDetails\n        );\n      }\n    }\n\n    return frag;\n  }\n\n  /*\n  This method finds the best matching fragment given the provided position.\n   */\n  protected getFragmentAtPosition(\n    bufferEnd: number,\n    end: number,\n    levelDetails: LevelDetails\n  ): Fragment | null {\n    const { config } = this;\n    let { fragPrevious } = this;\n    let { fragments, endSN } = levelDetails;\n    const { fragmentHint } = levelDetails;\n    const tolerance = config.maxFragLookUpTolerance;\n\n    const loadingParts = !!(\n      config.lowLatencyMode &&\n      levelDetails.partList &&\n      fragmentHint\n    );\n    if (loadingParts && fragmentHint && !this.bitrateTest) {\n      // Include incomplete fragment with parts at end\n      fragments = fragments.concat(fragmentHint);\n      endSN = fragmentHint.sn as number;\n    }\n\n    let frag;\n    if (bufferEnd < end) {\n      const lookupTolerance = bufferEnd > end - tolerance ? 0 : tolerance;\n      // Remove the tolerance if it would put the bufferEnd past the actual end of stream\n      // Uses buffer and sequence number to calculate switch segment (required if using EXT-X-DISCONTINUITY-SEQUENCE)\n      frag = findFragmentByPTS(\n        fragPrevious,\n        fragments,\n        bufferEnd,\n        lookupTolerance\n      );\n    } else {\n      // reach end of playlist\n      frag = fragments[fragments.length - 1];\n    }\n\n    if (frag) {\n      const curSNIdx = frag.sn - levelDetails.startSN;\n      // Move fragPrevious forward to support forcing the next fragment to load\n      // when the buffer catches up to a previously buffered range.\n      if (this.fragmentTracker.getState(frag) === FragmentState.OK) {\n        fragPrevious = frag;\n      }\n      if (fragPrevious && frag.sn === fragPrevious.sn && !loadingParts) {\n        // Force the next fragment to load if the previous one was already selected. This can occasionally happen with\n        // non-uniform fragment durations\n        const sameLevel = fragPrevious && frag.level === fragPrevious.level;\n        if (sameLevel) {\n          const nextFrag = fragments[curSNIdx + 1];\n          if (\n            frag.sn < endSN &&\n            this.fragmentTracker.getState(nextFrag) !== FragmentState.OK\n          ) {\n            this.log(\n              `SN ${frag.sn} just loaded, load next one: ${nextFrag.sn}`\n            );\n            frag = nextFrag;\n          } else {\n            frag = null;\n          }\n        }\n      }\n    }\n    return frag;\n  }\n\n  protected synchronizeToLiveEdge(levelDetails: LevelDetails) {\n    const { config, media } = this;\n    if (!media) {\n      return;\n    }\n    const liveSyncPosition = this.hls.liveSyncPosition;\n    const currentTime = media.currentTime;\n    const start = levelDetails.fragments[0].start;\n    const end = levelDetails.edge;\n    const withinSlidingWindow =\n      currentTime >= start - config.maxFragLookUpTolerance &&\n      currentTime <= end;\n    // Continue if we can seek forward to sync position or if current time is outside of sliding window\n    if (\n      liveSyncPosition !== null &&\n      media.duration > liveSyncPosition &&\n      (currentTime < liveSyncPosition || !withinSlidingWindow)\n    ) {\n      // Continue if buffer is starving or if current time is behind max latency\n      const maxLatency =\n        config.liveMaxLatencyDuration !== undefined\n          ? config.liveMaxLatencyDuration\n          : config.liveMaxLatencyDurationCount * levelDetails.targetduration;\n      if (\n        (!withinSlidingWindow && media.readyState < 4) ||\n        currentTime < end - maxLatency\n      ) {\n        if (!this.loadedmetadata) {\n          this.nextLoadPosition = liveSyncPosition;\n        }\n        // Only seek if ready and there is not a significant forward buffer available for playback\n        if (media.readyState) {\n          this.warn(\n            `Playback: ${currentTime.toFixed(\n              3\n            )} is located too far from the end of live sliding playlist: ${end}, reset currentTime to : ${liveSyncPosition.toFixed(\n              3\n            )}`\n          );\n          media.currentTime = liveSyncPosition;\n        }\n      }\n    }\n  }\n\n  protected alignPlaylists(\n    details: LevelDetails,\n    previousDetails?: LevelDetails\n  ): number {\n    const { levels, levelLastLoaded, fragPrevious } = this;\n    const lastLevel: Level | null =\n      levelLastLoaded !== null ? levels![levelLastLoaded] : null;\n\n    // FIXME: If not for `shouldAlignOnDiscontinuities` requiring fragPrevious.cc,\n    //  this could all go in level-helper mergeDetails()\n    const length = details.fragments.length;\n    if (!length) {\n      this.warn(`No fragments in live playlist`);\n      return 0;\n    }\n    const slidingStart = details.fragments[0].start;\n    const firstLevelLoad = !previousDetails;\n    const aligned = details.alignedSliding && Number.isFinite(slidingStart);\n    if (firstLevelLoad || (!aligned && !slidingStart)) {\n      alignStream(fragPrevious, lastLevel, details);\n      const alignedSlidingStart = details.fragments[0].start;\n      this.log(\n        `Live playlist sliding: ${alignedSlidingStart.toFixed(2)} start-sn: ${\n          previousDetails ? previousDetails.startSN : 'na'\n        }->${details.startSN} prev-sn: ${\n          fragPrevious ? fragPrevious.sn : 'na'\n        } fragments: ${length}`\n      );\n      return alignedSlidingStart;\n    }\n    return slidingStart;\n  }\n\n  protected waitForCdnTuneIn(details: LevelDetails) {\n    // Wait for Low-Latency CDN Tune-in to get an updated playlist\n    const advancePartLimit = 3;\n    return (\n      details.live &&\n      details.canBlockReload &&\n      details.partTarget &&\n      details.tuneInGoal >\n        Math.max(details.partHoldBack, details.partTarget * advancePartLimit)\n    );\n  }\n\n  protected setStartPosition(details: LevelDetails, sliding: number) {\n    // compute start position if set to -1. use it straight away if value is defined\n    let startPosition = this.startPosition;\n    if (startPosition < sliding) {\n      startPosition = -1;\n    }\n    if (startPosition === -1 || this.lastCurrentTime === -1) {\n      // first, check if start time offset has been set in playlist, if yes, use this value\n      const startTimeOffset = details.startTimeOffset!;\n      if (Number.isFinite(startTimeOffset)) {\n        startPosition = sliding + startTimeOffset;\n        if (startTimeOffset < 0) {\n          startPosition += details.totalduration;\n        }\n        startPosition = Math.min(\n          Math.max(sliding, startPosition),\n          sliding + details.totalduration\n        );\n        this.log(\n          `Start time offset ${startTimeOffset} found in playlist, adjust startPosition to ${startPosition}`\n        );\n        this.startPosition = startPosition;\n      } else if (details.live) {\n        // Leave this.startPosition at -1, so that we can use `getInitialLiveFragment` logic when startPosition has\n        // not been specified via the config or an as an argument to startLoad (#3736).\n        startPosition = this.hls.liveSyncPosition || sliding;\n      } else {\n        this.startPosition = startPosition = 0;\n      }\n      this.lastCurrentTime = startPosition;\n    }\n    this.nextLoadPosition = startPosition;\n  }\n\n  protected getLoadPosition(): number {\n    const { media } = this;\n    // if we have not yet loaded any fragment, start loading from start position\n    let pos = 0;\n    if (this.loadedmetadata && media) {\n      pos = media.currentTime;\n    } else if (this.nextLoadPosition) {\n      pos = this.nextLoadPosition;\n    }\n\n    return pos;\n  }\n\n  private handleFragLoadAborted(frag: Fragment, part: Part | undefined) {\n    if (this.transmuxer && frag.sn !== 'initSegment' && frag.stats.aborted) {\n      this.warn(\n        `Fragment ${frag.sn}${part ? ' part' + part.index : ''} of level ${\n          frag.level\n        } was aborted`\n      );\n      this.resetFragmentLoading(frag);\n    }\n  }\n\n  protected resetFragmentLoading(frag: Fragment) {\n    if (\n      !this.fragCurrent ||\n      (!this.fragContextChanged(frag) &&\n        this.state !== State.FRAG_LOADING_WAITING_RETRY)\n    ) {\n      this.state = State.IDLE;\n    }\n  }\n\n  protected onFragmentOrKeyLoadError(\n    filterType: PlaylistLevelType,\n    data: ErrorData\n  ) {\n    if (data.fatal) {\n      this.stopLoad();\n      this.state = State.ERROR;\n      return;\n    }\n    const config = this.config;\n    if (data.chunkMeta) {\n      // Parsing Error: no retries\n      const context = this.getCurrentContext(data.chunkMeta);\n      if (context) {\n        data.frag = context.frag;\n        data.levelRetry = true;\n        this.fragLoadError = config.fragLoadingMaxRetry;\n      }\n    }\n    const frag = data.frag;\n    // Handle frag error related to caller's filterType\n    if (!frag || frag.type !== filterType) {\n      return;\n    }\n    const fragCurrent = this.fragCurrent;\n    console.assert(\n      fragCurrent &&\n        frag.sn === fragCurrent.sn &&\n        frag.level === fragCurrent.level &&\n        frag.urlId === fragCurrent.urlId,\n      'Frag load error must match current frag to retry'\n    );\n    // keep retrying until the limit will be reached\n    if (this.fragLoadError + 1 <= config.fragLoadingMaxRetry) {\n      if (!this.loadedmetadata) {\n        this.startFragRequested = false;\n        this.nextLoadPosition = this.startPosition;\n      }\n      // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n      const delay = Math.min(\n        Math.pow(2, this.fragLoadError) * config.fragLoadingRetryDelay,\n        config.fragLoadingMaxRetryTimeout\n      );\n      this.warn(\n        `Fragment ${frag.sn} of ${filterType} ${frag.level} failed to load, retrying in ${delay}ms`\n      );\n      this.retryDate = self.performance.now() + delay;\n      this.fragLoadError++;\n      this.state = State.FRAG_LOADING_WAITING_RETRY;\n    } else if (data.levelRetry) {\n      if (filterType === PlaylistLevelType.AUDIO) {\n        // Reset current fragment since audio track audio is essential and may not have a fail-over track\n        this.fragCurrent = null;\n      }\n      // Fragment errors that result in a level switch or redundant fail-over\n      // should reset the stream controller state to idle\n      this.fragLoadError = 0;\n      this.state = State.IDLE;\n    } else {\n      logger.error(\n        `${data.details} reaches max retry, redispatch as fatal ...`\n      );\n      // switch error to fatal\n      data.fatal = true;\n      this.hls.stopLoad();\n      this.state = State.ERROR;\n    }\n  }\n\n  protected afterBufferFlushed(\n    media: Bufferable,\n    bufferType: SourceBufferName,\n    playlistType: PlaylistLevelType\n  ) {\n    if (!media) {\n      return;\n    }\n    // After successful buffer flushing, filter flushed fragments from bufferedFrags use mediaBuffered instead of media\n    // (so that we will check against video.buffered ranges in case of alt audio track)\n    const bufferedTimeRanges = BufferHelper.getBuffered(media);\n    this.fragmentTracker.detectEvictedFragments(\n      bufferType,\n      bufferedTimeRanges,\n      playlistType\n    );\n    if (this.state === State.ENDED) {\n      this.resetLoadingState();\n    }\n  }\n\n  protected resetLoadingState() {\n    this.log('Reset loading state');\n    this.fragCurrent = null;\n    this.fragPrevious = null;\n    this.state = State.IDLE;\n  }\n\n  protected resetStartWhenNotLoaded(level: number): void {\n    // if loadedmetadata is not set, it means that first frag request failed\n    // in that case, reset startFragRequested flag\n    if (!this.loadedmetadata) {\n      this.startFragRequested = false;\n      const details = this.levels ? this.levels[level].details : null;\n      if (details?.live) {\n        // Update the start position and return to IDLE to recover live start\n        this.startPosition = -1;\n        this.setStartPosition(details, 0);\n        this.resetLoadingState();\n      } else {\n        this.nextLoadPosition = this.startPosition;\n      }\n    }\n  }\n\n  private updateLevelTiming(\n    frag: Fragment,\n    part: Part | null,\n    level: Level,\n    partial: boolean\n  ) {\n    const details = level.details as LevelDetails;\n    console.assert(!!details, 'level.details must be defined');\n    const parsed = Object.keys(frag.elementaryStreams).reduce(\n      (result, type) => {\n        const info = frag.elementaryStreams[type];\n        if (info) {\n          const parsedDuration = info.endPTS - info.startPTS;\n          if (parsedDuration <= 0) {\n            // Destroy the transmuxer after it's next time offset failed to advance because duration was <= 0.\n            // The new transmuxer will be configured with a time offset matching the next fragment start,\n            // preventing the timeline from shifting.\n            this.warn(\n              `Could not parse fragment ${frag.sn} ${type} duration reliably (${parsedDuration})`\n            );\n            return result || false;\n          }\n          const drift = partial\n            ? 0\n            : updateFragPTSDTS(\n                details,\n                frag,\n                info.startPTS,\n                info.endPTS,\n                info.startDTS,\n                info.endDTS\n              );\n          this.hls.trigger(Events.LEVEL_PTS_UPDATED, {\n            details,\n            level,\n            drift,\n            type,\n            frag,\n            start: info.startPTS,\n            end: info.endPTS,\n          });\n          return true;\n        }\n        return result;\n      },\n      false\n    );\n    if (!parsed) {\n      this.warn(\n        `Found no media in fragment ${frag.sn} of level ${level.id} resetting transmuxer to fallback to playlist timing`\n      );\n      this.resetTransmuxer();\n    }\n    this.state = State.PARSED;\n    this.hls.trigger(Events.FRAG_PARSED, { frag, part });\n  }\n\n  protected resetTransmuxer() {\n    if (this.transmuxer) {\n      this.transmuxer.destroy();\n      this.transmuxer = null;\n    }\n  }\n\n  set state(nextState) {\n    const previousState = this._state;\n    if (previousState !== nextState) {\n      this._state = nextState;\n      this.log(`${previousState}->${nextState}`);\n    }\n  }\n\n  get state() {\n    return this._state;\n  }\n}\n","import { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { BufferHelper } from '../utils/buffer-helper';\nimport { getMediaSource } from '../utils/mediasource-helper';\nimport { ElementaryStreamTypes } from '../loader/fragment';\nimport type { TrackSet } from '../types/track';\nimport BufferOperationQueue from './buffer-operation-queue';\nimport {\n  BufferOperation,\n  SourceBuffers,\n  SourceBufferName,\n  SourceBufferListeners,\n} from '../types/buffer';\nimport type {\n  LevelUpdatedData,\n  BufferAppendingData,\n  MediaAttachingData,\n  ManifestParsedData,\n  BufferCodecsData,\n  BufferEOSData,\n  BufferFlushingData,\n  FragParsedData,\n  FragChangedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\nimport type { ChunkMetadata } from '../types/transmuxer';\nimport type Hls from '../hls';\nimport type { LevelDetails } from '../loader/level-details';\n\nconst MediaSource = getMediaSource();\nconst VIDEO_CODEC_PROFILE_REPACE = /([ha]vc.)(?:\\.[^.,]+)+/;\n\nexport default class BufferController implements ComponentAPI {\n  // The level details used to determine duration, target-duration and live\n  private details: LevelDetails | null = null;\n  // cache the self generated object url to detect hijack of video tag\n  private _objectUrl: string | null = null;\n  // A queue of buffer operations which require the SourceBuffer to not be updating upon execution\n  private operationQueue!: BufferOperationQueue;\n  // References to event listeners for each SourceBuffer, so that they can be referenced for event removal\n  private listeners!: SourceBufferListeners;\n\n  private hls: Hls;\n\n  // The number of BUFFER_CODEC events received before any sourceBuffers are created\n  public bufferCodecEventsExpected: number = 0;\n\n  // The total number of BUFFER_CODEC events received\n  private _bufferCodecEventsTotal: number = 0;\n\n  // A reference to the attached media element\n  public media: HTMLMediaElement | null = null;\n\n  // A reference to the active media source\n  public mediaSource: MediaSource | null = null;\n\n  // Last MP3 audio chunk appended\n  private lastMpegAudioChunk: ChunkMetadata | null = null;\n\n  // counters\n  public appendError: number = 0;\n\n  public tracks: TrackSet = {};\n  public pendingTracks: TrackSet = {};\n  public sourceBuffer!: SourceBuffers;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this._initSourceBuffer();\n    this.registerListeners();\n  }\n\n  public hasSourceTypes(): boolean {\n    return (\n      this.getSourceBufferTypes().length > 0 ||\n      Object.keys(this.pendingTracks).length > 0\n    );\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.details = null;\n    this.lastMpegAudioChunk = null;\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.on(Events.BUFFER_APPENDING, this.onBufferAppending, this);\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.on(Events.BUFFER_EOS, this.onBufferEos, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    hls.on(Events.FRAG_PARSED, this.onFragParsed, this);\n    hls.on(Events.FRAG_CHANGED, this.onFragChanged, this);\n  }\n\n  protected unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.off(Events.BUFFER_APPENDING, this.onBufferAppending, this);\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.off(Events.BUFFER_EOS, this.onBufferEos, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    hls.off(Events.FRAG_PARSED, this.onFragParsed, this);\n    hls.off(Events.FRAG_CHANGED, this.onFragChanged, this);\n  }\n\n  private _initSourceBuffer() {\n    this.sourceBuffer = {};\n    this.operationQueue = new BufferOperationQueue(this.sourceBuffer);\n    this.listeners = {\n      audio: [],\n      video: [],\n      audiovideo: [],\n    };\n    this.lastMpegAudioChunk = null;\n  }\n\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller\n    // sourcebuffers will be created all at once when the expected nb of tracks will be reached\n    // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller\n    // it will contain the expected nb of source buffers, no need to compute it\n    let codecEvents: number = 2;\n    if ((data.audio && !data.video) || !data.altAudio) {\n      codecEvents = 1;\n    }\n    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = codecEvents;\n    this.details = null;\n    logger.log(\n      `${this.bufferCodecEventsExpected} bufferCodec event(s) expected`\n    );\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    const media = (this.media = data.media);\n    if (media && MediaSource) {\n      const ms = (this.mediaSource = new MediaSource());\n      // MediaSource listeners are arrow functions with a lexical scope, and do not need to be bound\n      ms.addEventListener('sourceopen', this._onMediaSourceOpen);\n      ms.addEventListener('sourceended', this._onMediaSourceEnded);\n      ms.addEventListener('sourceclose', this._onMediaSourceClose);\n      // link video and media Source\n      media.src = self.URL.createObjectURL(ms);\n      // cache the locally generated object url\n      this._objectUrl = media.src;\n      media.addEventListener('emptied', this._onMediaEmptied);\n    }\n  }\n\n  protected onMediaDetaching() {\n    const { media, mediaSource, _objectUrl } = this;\n    if (mediaSource) {\n      logger.log('[buffer-controller]: media source detaching');\n      if (mediaSource.readyState === 'open') {\n        try {\n          // endOfStream could trigger exception if any sourcebuffer is in updating state\n          // we don't really care about checking sourcebuffer state here,\n          // as we are anyway detaching the MediaSource\n          // let's just avoid this exception to propagate\n          mediaSource.endOfStream();\n        } catch (err) {\n          logger.warn(\n            `[buffer-controller]: onMediaDetaching: ${err.message} while calling endOfStream`\n          );\n        }\n      }\n      // Clean up the SourceBuffers by invoking onBufferReset\n      this.onBufferReset();\n      mediaSource.removeEventListener('sourceopen', this._onMediaSourceOpen);\n      mediaSource.removeEventListener('sourceended', this._onMediaSourceEnded);\n      mediaSource.removeEventListener('sourceclose', this._onMediaSourceClose);\n\n      // Detach properly the MediaSource from the HTMLMediaElement as\n      // suggested in https://github.com/w3c/media-source/issues/53.\n      if (media) {\n        media.removeEventListener('emptied', this._onMediaEmptied);\n        if (_objectUrl) {\n          self.URL.revokeObjectURL(_objectUrl);\n        }\n\n        // clean up video tag src only if it's our own url. some external libraries might\n        // hijack the video tag and change its 'src' without destroying the Hls instance first\n        if (media.src === _objectUrl) {\n          media.removeAttribute('src');\n          media.load();\n        } else {\n          logger.warn(\n            '[buffer-controller]: media.src was changed by a third party - skip cleanup'\n          );\n        }\n      }\n\n      this.mediaSource = null;\n      this.media = null;\n      this._objectUrl = null;\n      this.bufferCodecEventsExpected = this._bufferCodecEventsTotal;\n      this.pendingTracks = {};\n      this.tracks = {};\n    }\n\n    this.hls.trigger(Events.MEDIA_DETACHED, undefined);\n  }\n\n  protected onBufferReset() {\n    this.getSourceBufferTypes().forEach((type) => {\n      const sb = this.sourceBuffer[type];\n      try {\n        if (sb) {\n          this.removeBufferListeners(type);\n          if (this.mediaSource) {\n            this.mediaSource.removeSourceBuffer(sb);\n          }\n          // Synchronously remove the SB from the map before the next call in order to prevent an async function from\n          // accessing it\n          this.sourceBuffer[type] = undefined;\n        }\n      } catch (err) {\n        logger.warn(\n          `[buffer-controller]: Failed to reset the ${type} buffer`,\n          err\n        );\n      }\n    });\n    this._initSourceBuffer();\n  }\n\n  protected onBufferCodecs(\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) {\n    const sourceBufferCount = this.getSourceBufferTypes().length;\n\n    Object.keys(data).forEach((trackName) => {\n      if (sourceBufferCount) {\n        // check if SourceBuffer codec needs to change\n        const track = this.tracks[trackName];\n        if (track && typeof track.buffer.changeType === 'function') {\n          const { id, codec, levelCodec, container, metadata } =\n            data[trackName];\n          const currentCodec = (track.levelCodec || track.codec).replace(\n            VIDEO_CODEC_PROFILE_REPACE,\n            '$1'\n          );\n          const nextCodec = (levelCodec || codec).replace(\n            VIDEO_CODEC_PROFILE_REPACE,\n            '$1'\n          );\n          if (currentCodec !== nextCodec) {\n            const mimeType = `${container};codecs=${levelCodec || codec}`;\n            this.appendChangeType(trackName, mimeType);\n            logger.log(\n              `[buffer-controller]: switching codec ${currentCodec} to ${nextCodec}`\n            );\n            this.tracks[trackName] = {\n              buffer: track.buffer,\n              codec,\n              container,\n              levelCodec,\n              metadata,\n              id,\n            };\n          }\n        }\n      } else {\n        // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks\n        this.pendingTracks[trackName] = data[trackName];\n      }\n    });\n\n    // if sourcebuffers already created, do nothing ...\n    if (sourceBufferCount) {\n      return;\n    }\n\n    this.bufferCodecEventsExpected = Math.max(\n      this.bufferCodecEventsExpected - 1,\n      0\n    );\n    if (this.mediaSource && this.mediaSource.readyState === 'open') {\n      this.checkPendingTracks();\n    }\n  }\n\n  protected appendChangeType(type, mimeType) {\n    const { operationQueue } = this;\n    const operation: BufferOperation = {\n      execute: () => {\n        const sb = this.sourceBuffer[type];\n        if (sb) {\n          logger.log(\n            `[buffer-controller]: changing ${type} sourceBuffer type to ${mimeType}`\n          );\n          sb.changeType(mimeType);\n        }\n        operationQueue.shiftAndExecuteNext(type);\n      },\n      onStart: () => {},\n      onComplete: () => {},\n      onError: (e) => {\n        logger.warn(\n          `[buffer-controller]: Failed to change ${type} SourceBuffer type`,\n          e\n        );\n      },\n    };\n\n    operationQueue.append(operation, type);\n  }\n\n  protected onBufferAppending(\n    event: Events.BUFFER_APPENDING,\n    eventData: BufferAppendingData\n  ) {\n    const { hls, operationQueue, tracks } = this;\n    const { data, type, frag, part, chunkMeta } = eventData;\n    const chunkStats = chunkMeta.buffering[type];\n\n    const bufferAppendingStart = self.performance.now();\n    chunkStats.start = bufferAppendingStart;\n    const fragBuffering = frag.stats.buffering;\n    const partBuffering = part ? part.stats.buffering : null;\n    if (fragBuffering.start === 0) {\n      fragBuffering.start = bufferAppendingStart;\n    }\n    if (partBuffering && partBuffering.start === 0) {\n      partBuffering.start = bufferAppendingStart;\n    }\n\n    // TODO: Only update timestampOffset when audio/mpeg fragment or part is not contiguous with previously appended\n    // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)\n    // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`\n    // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos).\n    // More info here: https://github.com/video-dev/hls.js/issues/332#issuecomment-257986486\n    const audioTrack = tracks.audio;\n    let checkTimestampOffset = false;\n    if (type === 'audio' && audioTrack?.container === 'audio/mpeg') {\n      checkTimestampOffset =\n        !this.lastMpegAudioChunk ||\n        chunkMeta.id === 1 ||\n        this.lastMpegAudioChunk.sn !== chunkMeta.sn;\n      this.lastMpegAudioChunk = chunkMeta;\n    }\n\n    const fragStart = frag.start;\n    const operation: BufferOperation = {\n      execute: () => {\n        chunkStats.executeStart = self.performance.now();\n        if (checkTimestampOffset) {\n          const sb = this.sourceBuffer[type];\n          if (sb) {\n            const delta = fragStart - sb.timestampOffset;\n            if (Math.abs(delta) >= 0.1) {\n              logger.log(\n                `[buffer-controller]: Updating audio SourceBuffer timestampOffset to ${fragStart} (delta: ${delta}) sn: ${frag.sn})`\n              );\n              sb.timestampOffset = fragStart;\n            }\n          }\n        }\n        this.appendExecutor(data, type);\n      },\n      onStart: () => {\n        // logger.debug(`[buffer-controller]: ${type} SourceBuffer updatestart`);\n      },\n      onComplete: () => {\n        // logger.debug(`[buffer-controller]: ${type} SourceBuffer updateend`);\n        const end = self.performance.now();\n        chunkStats.executeEnd = chunkStats.end = end;\n        if (fragBuffering.first === 0) {\n          fragBuffering.first = end;\n        }\n        if (partBuffering && partBuffering.first === 0) {\n          partBuffering.first = end;\n        }\n\n        const { sourceBuffer } = this;\n        const timeRanges = {};\n        for (const type in sourceBuffer) {\n          timeRanges[type] = BufferHelper.getBuffered(sourceBuffer[type]);\n        }\n        this.appendError = 0;\n        this.hls.trigger(Events.BUFFER_APPENDED, {\n          type,\n          frag,\n          part,\n          chunkMeta,\n          parent: frag.type,\n          timeRanges,\n        });\n      },\n      onError: (err) => {\n        // in case any error occured while appending, put back segment in segments table\n        logger.error(\n          `[buffer-controller]: Error encountered while trying to append to the ${type} SourceBuffer`,\n          err\n        );\n        const event = {\n          type: ErrorTypes.MEDIA_ERROR,\n          parent: frag.type,\n          details: ErrorDetails.BUFFER_APPEND_ERROR,\n          err,\n          fatal: false,\n        };\n\n        if (err.code === DOMException.QUOTA_EXCEEDED_ERR) {\n          // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\n          // let's stop appending any segments, and report BUFFER_FULL_ERROR error\n          event.details = ErrorDetails.BUFFER_FULL_ERROR;\n        } else {\n          this.appendError++;\n          event.details = ErrorDetails.BUFFER_APPEND_ERROR;\n          /* with UHD content, we could get loop of quota exceeded error until\n            browser is able to evict some data from sourcebuffer. Retrying can help recover.\n          */\n          if (this.appendError > hls.config.appendErrorMaxRetry) {\n            logger.error(\n              `[buffer-controller]: Failed ${hls.config.appendErrorMaxRetry} times to append segment in sourceBuffer`\n            );\n            event.fatal = true;\n            hls.stopLoad();\n          }\n        }\n        hls.trigger(Events.ERROR, event);\n      },\n    };\n    operationQueue.append(operation, type);\n  }\n\n  protected onBufferFlushing(\n    event: Events.BUFFER_FLUSHING,\n    data: BufferFlushingData\n  ) {\n    const { operationQueue } = this;\n    const flushOperation = (type: SourceBufferName): BufferOperation => ({\n      execute: this.removeExecutor.bind(\n        this,\n        type,\n        data.startOffset,\n        data.endOffset\n      ),\n      onStart: () => {\n        // logger.debug(`[buffer-controller]: Started flushing ${data.startOffset} -> ${data.endOffset} for ${type} Source Buffer`);\n      },\n      onComplete: () => {\n        // logger.debug(`[buffer-controller]: Finished flushing ${data.startOffset} -> ${data.endOffset} for ${type} Source Buffer`);\n        this.hls.trigger(Events.BUFFER_FLUSHED, { type });\n      },\n      onError: (e) => {\n        logger.warn(\n          `[buffer-controller]: Failed to remove from ${type} SourceBuffer`,\n          e\n        );\n      },\n    });\n\n    if (data.type) {\n      operationQueue.append(flushOperation(data.type), data.type);\n    } else {\n      this.getSourceBufferTypes().forEach((type: SourceBufferName) => {\n        operationQueue.append(flushOperation(type), type);\n      });\n    }\n  }\n\n  protected onFragParsed(event: Events.FRAG_PARSED, data: FragParsedData) {\n    const { frag, part } = data;\n    const buffersAppendedTo: Array<SourceBufferName> = [];\n    const elementaryStreams = part\n      ? part.elementaryStreams\n      : frag.elementaryStreams;\n    if (elementaryStreams[ElementaryStreamTypes.AUDIOVIDEO]) {\n      buffersAppendedTo.push('audiovideo');\n    } else {\n      if (elementaryStreams[ElementaryStreamTypes.AUDIO]) {\n        buffersAppendedTo.push('audio');\n      }\n      if (elementaryStreams[ElementaryStreamTypes.VIDEO]) {\n        buffersAppendedTo.push('video');\n      }\n    }\n\n    const onUnblocked = () => {\n      const now = self.performance.now();\n      frag.stats.buffering.end = now;\n      if (part) {\n        part.stats.buffering.end = now;\n      }\n      const stats = part ? part.stats : frag.stats;\n      this.hls.trigger(Events.FRAG_BUFFERED, {\n        frag,\n        part,\n        stats,\n        id: frag.type,\n      });\n    };\n\n    if (buffersAppendedTo.length === 0) {\n      logger.warn(\n        `Fragments must have at least one ElementaryStreamType set. type: ${frag.type} level: ${frag.level} sn: ${frag.sn}`\n      );\n    }\n\n    this.blockBuffers(onUnblocked, buffersAppendedTo);\n  }\n\n  private onFragChanged(event: Events.FRAG_CHANGED, data: FragChangedData) {\n    this.flushBackBuffer();\n  }\n\n  // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()\n  // an undefined data.type will mark all buffers as EOS.\n  protected onBufferEos(event: Events.BUFFER_EOS, data: BufferEOSData) {\n    const ended = this.getSourceBufferTypes().reduce((acc, type) => {\n      const sb = this.sourceBuffer[type];\n      if (sb && (!data.type || data.type === type)) {\n        sb.ending = true;\n        if (!sb.ended) {\n          sb.ended = true;\n          logger.log(`[buffer-controller]: ${type} sourceBuffer now EOS`);\n        }\n      }\n      return acc && !!(!sb || sb.ended);\n    }, true);\n\n    if (ended) {\n      logger.log(`[buffer-controller]: Queueing mediaSource.endOfStream()`);\n      this.blockBuffers(() => {\n        this.getSourceBufferTypes().forEach((type) => {\n          const sb = this.sourceBuffer[type];\n          if (sb) {\n            sb.ending = false;\n          }\n        });\n        const { mediaSource } = this;\n        if (!mediaSource || mediaSource.readyState !== 'open') {\n          if (mediaSource) {\n            logger.info(\n              `[buffer-controller]: Could not call mediaSource.endOfStream(). mediaSource.readyState: ${mediaSource.readyState}`\n            );\n          }\n          return;\n        }\n        logger.log(`[buffer-controller]: Calling mediaSource.endOfStream()`);\n        // Allow this to throw and be caught by the enqueueing function\n        mediaSource.endOfStream();\n      });\n    }\n  }\n\n  protected onLevelUpdated(\n    event: Events.LEVEL_UPDATED,\n    { details }: LevelUpdatedData\n  ) {\n    if (!details.fragments.length) {\n      return;\n    }\n    this.details = details;\n\n    if (this.getSourceBufferTypes().length) {\n      this.blockBuffers(this.updateMediaElementDuration.bind(this));\n    } else {\n      this.updateMediaElementDuration();\n    }\n  }\n\n  flushBackBuffer() {\n    const { hls, details, media, sourceBuffer } = this;\n    if (!media || details === null) {\n      return;\n    }\n\n    const sourceBufferTypes = this.getSourceBufferTypes();\n    if (!sourceBufferTypes.length) {\n      return;\n    }\n\n    // Support for deprecated liveBackBufferLength\n    const backBufferLength =\n      details.live && hls.config.liveBackBufferLength !== null\n        ? hls.config.liveBackBufferLength\n        : hls.config.backBufferLength;\n\n    if (!Number.isFinite(backBufferLength) || backBufferLength < 0) {\n      return;\n    }\n\n    const currentTime = media.currentTime;\n    const targetDuration = details.levelTargetDuration;\n    const maxBackBufferLength = Math.max(backBufferLength, targetDuration);\n    const targetBackBufferPosition =\n      Math.floor(currentTime / targetDuration) * targetDuration -\n      maxBackBufferLength;\n    sourceBufferTypes.forEach((type: SourceBufferName) => {\n      const sb = sourceBuffer[type];\n      if (sb) {\n        const buffered = BufferHelper.getBuffered(sb);\n        // when target buffer start exceeds actual buffer start\n        if (\n          buffered.length > 0 &&\n          targetBackBufferPosition > buffered.start(0)\n        ) {\n          hls.trigger(Events.BACK_BUFFER_REACHED, {\n            bufferEnd: targetBackBufferPosition,\n          });\n\n          // Support for deprecated event:\n          if (details.live) {\n            hls.trigger(Events.LIVE_BACK_BUFFER_REACHED, {\n              bufferEnd: targetBackBufferPosition,\n            });\n          } else if (\n            sb.ended &&\n            buffered.end(buffered.length - 1) - currentTime < targetDuration * 2\n          ) {\n            logger.info(\n              `[buffer-controller]: Cannot flush ${type} back buffer while SourceBuffer is in ended state`\n            );\n            return;\n          }\n\n          hls.trigger(Events.BUFFER_FLUSHING, {\n            startOffset: 0,\n            endOffset: targetBackBufferPosition,\n            type,\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Update Media Source duration to current level duration or override to Infinity if configuration parameter\n   * 'liveDurationInfinity` is set to `true`\n   * More details: https://github.com/video-dev/hls.js/issues/355\n   */\n  private updateMediaElementDuration() {\n    if (\n      !this.details ||\n      !this.media ||\n      !this.mediaSource ||\n      this.mediaSource.readyState !== 'open'\n    ) {\n      return;\n    }\n    const { details, hls, media, mediaSource } = this;\n    const levelDuration = details.fragments[0].start + details.totalduration;\n    const mediaDuration = media.duration;\n    const msDuration = Number.isFinite(mediaSource.duration)\n      ? mediaSource.duration\n      : 0;\n\n    if (details.live && hls.config.liveDurationInfinity) {\n      // Override duration to Infinity\n      logger.log(\n        '[buffer-controller]: Media Source duration is set to Infinity'\n      );\n      mediaSource.duration = Infinity;\n      this.updateSeekableRange(details);\n    } else if (\n      (levelDuration > msDuration && levelDuration > mediaDuration) ||\n      !Number.isFinite(mediaDuration)\n    ) {\n      // levelDuration was the last value we set.\n      // not using mediaSource.duration as the browser may tweak this value\n      // only update Media Source duration if its value increase, this is to avoid\n      // flushing already buffered portion when switching between quality level\n      logger.log(\n        `[buffer-controller]: Updating Media Source duration to ${levelDuration.toFixed(\n          3\n        )}`\n      );\n      mediaSource.duration = levelDuration;\n    }\n  }\n\n  updateSeekableRange(levelDetails) {\n    const mediaSource = this.mediaSource;\n    const fragments = levelDetails.fragments;\n    const len = fragments.length;\n    if (len && levelDetails.live && mediaSource?.setLiveSeekableRange) {\n      const start = Math.max(0, fragments[0].start);\n      const end = Math.max(start, start + levelDetails.totalduration);\n      mediaSource.setLiveSeekableRange(start, end);\n    }\n  }\n\n  protected checkPendingTracks() {\n    const { bufferCodecEventsExpected, operationQueue, pendingTracks } = this;\n\n    // Check if we've received all of the expected bufferCodec events. When none remain, create all the sourceBuffers at once.\n    // This is important because the MSE spec allows implementations to throw QuotaExceededErrors if creating new sourceBuffers after\n    // data has been appended to existing ones.\n    // 2 tracks is the max (one for audio, one for video). If we've reach this max go ahead and create the buffers.\n    const pendingTracksCount = Object.keys(pendingTracks).length;\n    if (\n      (pendingTracksCount && !bufferCodecEventsExpected) ||\n      pendingTracksCount === 2\n    ) {\n      // ok, let's create them now !\n      this.createSourceBuffers(pendingTracks);\n      this.pendingTracks = {};\n      // append any pending segments now !\n      const buffers = this.getSourceBufferTypes();\n      if (buffers.length === 0) {\n        this.hls.trigger(Events.ERROR, {\n          type: ErrorTypes.MEDIA_ERROR,\n          details: ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR,\n          fatal: true,\n          reason: 'could not create source buffer for media codec(s)',\n        });\n        return;\n      }\n      buffers.forEach((type: SourceBufferName) => {\n        operationQueue.executeNext(type);\n      });\n    }\n  }\n\n  protected createSourceBuffers(tracks: TrackSet) {\n    const { sourceBuffer, mediaSource } = this;\n    if (!mediaSource) {\n      throw Error('createSourceBuffers called when mediaSource was null');\n    }\n    let tracksCreated = 0;\n    for (const trackName in tracks) {\n      if (!sourceBuffer[trackName]) {\n        const track = tracks[trackName as keyof TrackSet];\n        if (!track) {\n          throw Error(\n            `source buffer exists for track ${trackName}, however track does not`\n          );\n        }\n        // use levelCodec as first priority\n        const codec = track.levelCodec || track.codec;\n        const mimeType = `${track.container};codecs=${codec}`;\n        logger.log(`[buffer-controller]: creating sourceBuffer(${mimeType})`);\n        try {\n          const sb = (sourceBuffer[trackName] =\n            mediaSource.addSourceBuffer(mimeType));\n          const sbName = trackName as SourceBufferName;\n          this.addBufferListener(sbName, 'updatestart', this._onSBUpdateStart);\n          this.addBufferListener(sbName, 'updateend', this._onSBUpdateEnd);\n          this.addBufferListener(sbName, 'error', this._onSBUpdateError);\n          this.tracks[trackName] = {\n            buffer: sb,\n            codec: codec,\n            container: track.container,\n            levelCodec: track.levelCodec,\n            metadata: track.metadata,\n            id: track.id,\n          };\n          tracksCreated++;\n        } catch (err) {\n          logger.error(\n            `[buffer-controller]: error while trying to add sourceBuffer: ${err.message}`\n          );\n          this.hls.trigger(Events.ERROR, {\n            type: ErrorTypes.MEDIA_ERROR,\n            details: ErrorDetails.BUFFER_ADD_CODEC_ERROR,\n            fatal: false,\n            error: err,\n            mimeType: mimeType,\n          });\n        }\n      }\n    }\n    if (tracksCreated) {\n      this.hls.trigger(Events.BUFFER_CREATED, { tracks: this.tracks });\n    }\n  }\n\n  // Keep as arrow functions so that we can directly reference these functions directly as event listeners\n  private _onMediaSourceOpen = () => {\n    const { media, mediaSource } = this;\n    logger.log('[buffer-controller]: Media source opened');\n    if (media) {\n      media.removeEventListener('emptied', this._onMediaEmptied);\n      this.updateMediaElementDuration();\n      this.hls.trigger(Events.MEDIA_ATTACHED, { media });\n    }\n\n    if (mediaSource) {\n      // once received, don't listen anymore to sourceopen event\n      mediaSource.removeEventListener('sourceopen', this._onMediaSourceOpen);\n    }\n    this.checkPendingTracks();\n  };\n\n  private _onMediaSourceClose = () => {\n    logger.log('[buffer-controller]: Media source closed');\n  };\n\n  private _onMediaSourceEnded = () => {\n    logger.log('[buffer-controller]: Media source ended');\n  };\n\n  private _onMediaEmptied = () => {\n    const { media, _objectUrl } = this;\n    if (media && media.src !== _objectUrl) {\n      logger.error(\n        `Media element src was set while attaching MediaSource (${_objectUrl} > ${media.src})`\n      );\n    }\n  };\n\n  private _onSBUpdateStart(type: SourceBufferName) {\n    const { operationQueue } = this;\n    const operation = operationQueue.current(type);\n    operation.onStart();\n  }\n\n  private _onSBUpdateEnd(type: SourceBufferName) {\n    const { operationQueue } = this;\n    const operation = operationQueue.current(type);\n    operation.onComplete();\n    operationQueue.shiftAndExecuteNext(type);\n  }\n\n  private _onSBUpdateError(type: SourceBufferName, event: Event) {\n    logger.error(`[buffer-controller]: ${type} SourceBuffer error`, event);\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n    // SourceBuffer errors are not necessarily fatal; if so, the HTMLMediaElement will fire an error event\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.BUFFER_APPENDING_ERROR,\n      fatal: false,\n    });\n    // updateend is always fired after error, so we'll allow that to shift the current operation off of the queue\n    const operation = this.operationQueue.current(type);\n    if (operation) {\n      operation.onError(event);\n    }\n  }\n\n  // This method must result in an updateend event; if remove is not called, _onSBUpdateEnd must be called manually\n  private removeExecutor(\n    type: SourceBufferName,\n    startOffset: number,\n    endOffset: number\n  ) {\n    const { media, mediaSource, operationQueue, sourceBuffer } = this;\n    const sb = sourceBuffer[type];\n    if (!media || !mediaSource || !sb) {\n      logger.warn(\n        `[buffer-controller]: Attempting to remove from the ${type} SourceBuffer, but it does not exist`\n      );\n      operationQueue.shiftAndExecuteNext(type);\n      return;\n    }\n    const mediaDuration = Number.isFinite(media.duration)\n      ? media.duration\n      : Infinity;\n    const msDuration = Number.isFinite(mediaSource.duration)\n      ? mediaSource.duration\n      : Infinity;\n    const removeStart = Math.max(0, startOffset);\n    const removeEnd = Math.min(endOffset, mediaDuration, msDuration);\n    if (removeEnd > removeStart && !sb.ending) {\n      sb.ended = false;\n      logger.log(\n        `[buffer-controller]: Removing [${removeStart},${removeEnd}] from the ${type} SourceBuffer`\n      );\n      console.assert(!sb.updating, `${type} sourceBuffer must not be updating`);\n      sb.remove(removeStart, removeEnd);\n    } else {\n      // Cycle the queue\n      operationQueue.shiftAndExecuteNext(type);\n    }\n  }\n\n  // This method must result in an updateend event; if append is not called, _onSBUpdateEnd must be called manually\n  private appendExecutor(data: Uint8Array, type: SourceBufferName) {\n    const { operationQueue, sourceBuffer } = this;\n    const sb = sourceBuffer[type];\n    if (!sb) {\n      logger.warn(\n        `[buffer-controller]: Attempting to append to the ${type} SourceBuffer, but it does not exist`\n      );\n      operationQueue.shiftAndExecuteNext(type);\n      return;\n    }\n\n    sb.ended = false;\n    console.assert(!sb.updating, `${type} sourceBuffer must not be updating`);\n    sb.appendBuffer(data);\n  }\n\n  // Enqueues an operation to each SourceBuffer queue which, upon execution, resolves a promise. When all promises\n  // resolve, the onUnblocked function is executed. Functions calling this method do not need to unblock the queue\n  // upon completion, since we already do it here\n  private blockBuffers(\n    onUnblocked: () => void,\n    buffers: Array<SourceBufferName> = this.getSourceBufferTypes()\n  ) {\n    if (!buffers.length) {\n      logger.log(\n        '[buffer-controller]: Blocking operation requested, but no SourceBuffers exist'\n      );\n      Promise.resolve().then(onUnblocked);\n      return;\n    }\n    const { operationQueue } = this;\n\n    // logger.debug(`[buffer-controller]: Blocking ${buffers} SourceBuffer`);\n    const blockingOperations = buffers.map((type) =>\n      operationQueue.appendBlocker(type as SourceBufferName)\n    );\n    Promise.all(blockingOperations).then(() => {\n      // logger.debug(`[buffer-controller]: Blocking operation resolved; unblocking ${buffers} SourceBuffer`);\n      onUnblocked();\n      buffers.forEach((type) => {\n        const sb = this.sourceBuffer[type];\n        // Only cycle the queue if the SB is not updating. There's a bug in Chrome which sets the SB updating flag to\n        // true when changing the MediaSource duration (https://bugs.chromium.org/p/chromium/issues/detail?id=959359&can=2&q=mediasource%20duration)\n        // While this is a workaround, it's probably useful to have around\n        if (!sb || !sb.updating) {\n          operationQueue.shiftAndExecuteNext(type);\n        }\n      });\n    });\n  }\n\n  private getSourceBufferTypes(): Array<SourceBufferName> {\n    return Object.keys(this.sourceBuffer) as Array<SourceBufferName>;\n  }\n\n  private addBufferListener(\n    type: SourceBufferName,\n    event: string,\n    fn: Function\n  ) {\n    const buffer = this.sourceBuffer[type];\n    if (!buffer) {\n      return;\n    }\n    const listener = fn.bind(this, type);\n    this.listeners[type].push({ event, listener });\n    buffer.addEventListener(event, listener);\n  }\n\n  private removeBufferListeners(type: SourceBufferName) {\n    const buffer = this.sourceBuffer[type];\n    if (!buffer) {\n      return;\n    }\n    this.listeners[type].forEach((l) => {\n      buffer.removeEventListener(l.event, l.listener);\n    });\n  }\n}\n","import { logger } from '../utils/logger';\nimport type {\n  BufferOperation,\n  BufferOperationQueues,\n  SourceBuffers,\n  SourceBufferName,\n} from '../types/buffer';\n\nexport default class BufferOperationQueue {\n  private buffers: SourceBuffers;\n  private queues: BufferOperationQueues = {\n    video: [],\n    audio: [],\n    audiovideo: [],\n  };\n\n  constructor(sourceBufferReference: SourceBuffers) {\n    this.buffers = sourceBufferReference;\n  }\n\n  public append(operation: BufferOperation, type: SourceBufferName) {\n    const queue = this.queues[type];\n    queue.push(operation);\n    if (queue.length === 1 && this.buffers[type]) {\n      this.executeNext(type);\n    }\n  }\n\n  public insertAbort(operation: BufferOperation, type: SourceBufferName) {\n    const queue = this.queues[type];\n    queue.unshift(operation);\n    this.executeNext(type);\n  }\n\n  public appendBlocker(type: SourceBufferName): Promise<{}> {\n    let execute;\n    const promise: Promise<{}> = new Promise((resolve) => {\n      execute = resolve;\n    });\n    const operation: BufferOperation = {\n      execute,\n      onStart: () => {},\n      onComplete: () => {},\n      onError: () => {},\n    };\n\n    this.append(operation, type);\n    return promise;\n  }\n\n  public executeNext(type: SourceBufferName) {\n    const { buffers, queues } = this;\n    const sb = buffers[type];\n    const queue = queues[type];\n    if (queue.length) {\n      const operation: BufferOperation = queue[0];\n      try {\n        // Operations are expected to result in an 'updateend' event being fired. If not, the queue will lock. Operations\n        // which do not end with this event must call _onSBUpdateEnd manually\n        operation.execute();\n      } catch (e) {\n        logger.warn(\n          '[buffer-operation-queue]: Unhandled exception executing the current operation'\n        );\n        operation.onError(e);\n\n        // Only shift the current operation off, otherwise the updateend handler will do this for us\n        if (!sb || !sb.updating) {\n          queue.shift();\n          this.executeNext(type);\n        }\n      }\n    }\n  }\n\n  public shiftAndExecuteNext(type: SourceBufferName) {\n    this.queues[type].shift();\n    this.executeNext(type);\n  }\n\n  public current(type: SourceBufferName) {\n    return this.queues[type][0];\n  }\n}\n","/*\n * cap stream level to media size dimension controller\n */\n\nimport { Events } from '../events';\nimport type { Level } from '../types/level';\nimport type {\n  ManifestParsedData,\n  BufferCodecsData,\n  MediaAttachingData,\n  FPSDropLevelCappingData,\n} from '../types/events';\nimport StreamController from './stream-controller';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\n\nclass CapLevelController implements ComponentAPI {\n  public autoLevelCapping: number;\n  public firstLevel: number;\n  public media: HTMLVideoElement | null;\n  public restrictedLevels: Array<number>;\n  public timer: number | undefined;\n\n  private hls: Hls;\n  private streamController?: StreamController;\n  public clientRect: { width: number; height: number } | null;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.firstLevel = -1;\n    this.media = null;\n    this.restrictedLevels = [];\n    this.timer = undefined;\n    this.clientRect = null;\n\n    this.registerListeners();\n  }\n\n  public setStreamController(streamController: StreamController) {\n    this.streamController = streamController;\n  }\n\n  public destroy() {\n    this.unregisterListener();\n    if (this.hls.config.capLevelToPlayerSize) {\n      this.stopCapping();\n    }\n    this.media = null;\n    this.clientRect = null;\n    // @ts-ignore\n    this.hls = this.streamController = null;\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected unregisterListener() {\n    const { hls } = this;\n    hls.off(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected onFpsDropLevelCapping(\n    event: Events.FPS_DROP_LEVEL_CAPPING,\n    data: FPSDropLevelCappingData\n  ) {\n    // Don't add a restricted level more than once\n    if (\n      CapLevelController.isLevelAllowed(\n        data.droppedLevel,\n        this.restrictedLevels\n      )\n    ) {\n      this.restrictedLevels.push(data.droppedLevel);\n    }\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media instanceof HTMLVideoElement ? data.media : null;\n    this.clientRect = null;\n  }\n\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    const hls = this.hls;\n    this.restrictedLevels = [];\n    this.firstLevel = data.firstLevel;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // Start capping immediately if the manifest has signaled video codecs\n      this.startCapping();\n    }\n  }\n\n  // Only activate capping when playing a video stream; otherwise, multi-bitrate audio-only streams will be restricted\n  // to the first level\n  protected onBufferCodecs(\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) {\n    const hls = this.hls;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // If the manifest did not signal a video codec capping has been deferred until we're certain video is present\n      this.startCapping();\n    }\n  }\n\n  protected onMediaDetaching() {\n    this.stopCapping();\n  }\n\n  detectPlayerSize() {\n    if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {\n      const levels = this.hls.levels;\n      if (levels.length) {\n        const hls = this.hls;\n        hls.autoLevelCapping = this.getMaxLevel(levels.length - 1);\n        if (\n          hls.autoLevelCapping > this.autoLevelCapping &&\n          this.streamController\n        ) {\n          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n          // usually happen when the user go to the fullscreen mode.\n          this.streamController.nextLevelSwitch();\n        }\n        this.autoLevelCapping = hls.autoLevelCapping;\n      }\n    }\n  }\n\n  /*\n   * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n   */\n  getMaxLevel(capLevelIndex: number): number {\n    const levels = this.hls.levels;\n    if (!levels.length) {\n      return -1;\n    }\n\n    const validLevels = levels.filter(\n      (level, index) =>\n        CapLevelController.isLevelAllowed(index, this.restrictedLevels) &&\n        index <= capLevelIndex\n    );\n\n    this.clientRect = null;\n    return CapLevelController.getMaxLevelByMediaSize(\n      validLevels,\n      this.mediaWidth,\n      this.mediaHeight\n    );\n  }\n\n  startCapping() {\n    if (this.timer) {\n      // Don't reset capping if started twice; this can happen if the manifest signals a video codec\n      return;\n    }\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\n    self.clearInterval(this.timer);\n    this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1000);\n    this.detectPlayerSize();\n  }\n\n  stopCapping() {\n    this.restrictedLevels = [];\n    this.firstLevel = -1;\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    if (this.timer) {\n      self.clearInterval(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n  getDimensions(): { width: number; height: number } {\n    if (this.clientRect) {\n      return this.clientRect;\n    }\n    const media = this.media;\n    const boundsRect = {\n      width: 0,\n      height: 0,\n    };\n\n    if (media) {\n      const clientRect = media.getBoundingClientRect();\n      boundsRect.width = clientRect.width;\n      boundsRect.height = clientRect.height;\n      if (!boundsRect.width && !boundsRect.height) {\n        // When the media element has no width or height (equivalent to not being in the DOM),\n        // then use its width and height attributes (media.width, media.height)\n        boundsRect.width =\n          clientRect.right - clientRect.left || media.width || 0;\n        boundsRect.height =\n          clientRect.bottom - clientRect.top || media.height || 0;\n      }\n    }\n    this.clientRect = boundsRect;\n    return boundsRect;\n  }\n\n  get mediaWidth(): number {\n    return this.getDimensions().width * this.contentScaleFactor;\n  }\n\n  get mediaHeight(): number {\n    return this.getDimensions().height * this.contentScaleFactor;\n  }\n\n  get contentScaleFactor(): number {\n    let pixelRatio = 1;\n    if (!this.hls.config.ignoreDevicePixelRatio) {\n      try {\n        pixelRatio = self.devicePixelRatio;\n      } catch (e) {\n        /* no-op */\n      }\n    }\n\n    return pixelRatio;\n  }\n\n  static isLevelAllowed(\n    level: number,\n    restrictedLevels: Array<number> = []\n  ): boolean {\n    return restrictedLevels.indexOf(level) === -1;\n  }\n\n  static getMaxLevelByMediaSize(\n    levels: Array<Level>,\n    width: number,\n    height: number\n  ): number {\n    if (!levels || !levels.length) {\n      return -1;\n    }\n\n    // Levels can have the same dimensions but differing bandwidths - since levels are ordered, we can look to the next\n    // to determine whether we've chosen the greatest bandwidth for the media's dimensions\n    const atGreatestBandwidth = (curLevel, nextLevel) => {\n      if (!nextLevel) {\n        return true;\n      }\n\n      return (\n        curLevel.width !== nextLevel.width ||\n        curLevel.height !== nextLevel.height\n      );\n    };\n\n    // If we run through the loop without breaking, the media's dimensions are greater than every level, so default to\n    // the max level\n    let maxLevelIndex = levels.length - 1;\n\n    for (let i = 0; i < levels.length; i += 1) {\n      const level = levels[i];\n      if (\n        (level.width >= width || level.height >= height) &&\n        atGreatestBandwidth(level, levels[i + 1])\n      ) {\n        maxLevelIndex = i;\n        break;\n      }\n    }\n\n    return maxLevelIndex;\n  }\n}\n\nexport default CapLevelController;\n","import { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { MediaAttachingData } from '../types/events';\nimport StreamController from './stream-controller';\n\nclass FPSController implements ComponentAPI {\n  private hls: Hls;\n  private isVideoPlaybackQualityAvailable: boolean = false;\n  private timer?: number;\n  private media: HTMLVideoElement | null = null;\n  private lastTime: any;\n  private lastDroppedFrames: number = 0;\n  private lastDecodedFrames: number = 0;\n  // stream controller must be provided as a dependency!\n  private streamController!: StreamController;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    this.registerListeners();\n  }\n\n  public setStreamController(streamController: StreamController) {\n    this.streamController = streamController;\n  }\n\n  protected registerListeners() {\n    this.hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n  }\n\n  protected unregisterListeners() {\n    this.hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching);\n  }\n\n  destroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n\n    this.unregisterListeners();\n    this.isVideoPlaybackQualityAvailable = false;\n    this.media = null;\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    const config = this.hls.config;\n    if (config.capLevelOnFPSDrop) {\n      const media =\n        data.media instanceof self.HTMLVideoElement ? data.media : null;\n      this.media = media;\n      if (media && typeof media.getVideoPlaybackQuality === 'function') {\n        this.isVideoPlaybackQualityAvailable = true;\n      }\n\n      self.clearInterval(this.timer);\n      this.timer = self.setInterval(\n        this.checkFPSInterval.bind(this),\n        config.fpsDroppedMonitoringPeriod\n      );\n    }\n  }\n\n  checkFPS(\n    video: HTMLVideoElement,\n    decodedFrames: number,\n    droppedFrames: number\n  ) {\n    const currentTime = performance.now();\n    if (decodedFrames) {\n      if (this.lastTime) {\n        const currentPeriod = currentTime - this.lastTime;\n        const currentDropped = droppedFrames - this.lastDroppedFrames;\n        const currentDecoded = decodedFrames - this.lastDecodedFrames;\n        const droppedFPS = (1000 * currentDropped) / currentPeriod;\n        const hls = this.hls;\n        hls.trigger(Events.FPS_DROP, {\n          currentDropped: currentDropped,\n          currentDecoded: currentDecoded,\n          totalDroppedFrames: droppedFrames,\n        });\n        if (droppedFPS > 0) {\n          // logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));\n          if (\n            currentDropped >\n            hls.config.fpsDroppedMonitoringThreshold * currentDecoded\n          ) {\n            let currentLevel = hls.currentLevel;\n            logger.warn(\n              'drop FPS ratio greater than max allowed value for currentLevel: ' +\n                currentLevel\n            );\n            if (\n              currentLevel > 0 &&\n              (hls.autoLevelCapping === -1 ||\n                hls.autoLevelCapping >= currentLevel)\n            ) {\n              currentLevel = currentLevel - 1;\n              hls.trigger(Events.FPS_DROP_LEVEL_CAPPING, {\n                level: currentLevel,\n                droppedLevel: hls.currentLevel,\n              });\n              hls.autoLevelCapping = currentLevel;\n              this.streamController.nextLevelSwitch();\n            }\n          }\n        }\n      }\n      this.lastTime = currentTime;\n      this.lastDroppedFrames = droppedFrames;\n      this.lastDecodedFrames = decodedFrames;\n    }\n  }\n\n  checkFPSInterval() {\n    const video = this.media;\n    if (video) {\n      if (this.isVideoPlaybackQualityAvailable) {\n        const videoPlaybackQuality = video.getVideoPlaybackQuality();\n        this.checkFPS(\n          video,\n          videoPlaybackQuality.totalVideoFrames,\n          videoPlaybackQuality.droppedVideoFrames\n        );\n      } else {\n        // HTMLVideoElement doesn't include the webkit types\n        this.checkFPS(\n          video,\n          (video as any).webkitDecodedFrameCount as number,\n          (video as any).webkitDroppedFrameCount as number\n        );\n      }\n    }\n  }\n}\n\nexport default FPSController;\n","import BinarySearch from '../utils/binary-search';\nimport { Fragment } from '../loader/fragment';\n\n/**\n * Returns first fragment whose endPdt value exceeds the given PDT.\n * @param {Array<Fragment>} fragments - The array of candidate fragments\n * @param {number|null} [PDTValue = null] - The PDT value which must be exceeded\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start/end can be within in order to be considered contiguous\n * @returns {*|null} fragment - The best matching fragment\n */\nexport function findFragmentByPDT(\n  fragments: Array<Fragment>,\n  PDTValue: number | null,\n  maxFragLookUpTolerance: number\n): Fragment | null {\n  if (\n    PDTValue === null ||\n    !Array.isArray(fragments) ||\n    !fragments.length ||\n    !Number.isFinite(PDTValue)\n  ) {\n    return null;\n  }\n\n  // if less than start\n  const startPDT = fragments[0].programDateTime;\n  if (PDTValue < (startPDT || 0)) {\n    return null;\n  }\n\n  const endPDT = fragments[fragments.length - 1].endProgramDateTime;\n  if (PDTValue >= (endPDT || 0)) {\n    return null;\n  }\n\n  maxFragLookUpTolerance = maxFragLookUpTolerance || 0;\n  for (let seg = 0; seg < fragments.length; ++seg) {\n    const frag = fragments[seg];\n    if (pdtWithinToleranceTest(PDTValue, maxFragLookUpTolerance, frag)) {\n      return frag;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Finds a fragment based on the SN of the previous fragment; or based on the needs of the current buffer.\n * This method compensates for small buffer gaps by applying a tolerance to the start of any candidate fragment, thus\n * breaking any traps which would cause the same fragment to be continuously selected within a small range.\n * @param {*} fragPrevious - The last frag successfully appended\n * @param {Array} fragments - The array of candidate fragments\n * @param {number} [bufferEnd = 0] - The end of the contiguous buffered range the playhead is currently within\n * @param {number} maxFragLookUpTolerance - The amount of time that a fragment's start/end can be within in order to be considered contiguous\n * @returns {*} foundFrag - The best matching fragment\n */\nexport function findFragmentByPTS(\n  fragPrevious: Fragment | null,\n  fragments: Array<Fragment>,\n  bufferEnd: number = 0,\n  maxFragLookUpTolerance: number = 0\n): Fragment | null {\n  let fragNext: Fragment | null = null;\n  if (fragPrevious) {\n    fragNext =\n      fragments[\n        (fragPrevious.sn as number) - (fragments[0].sn as number) + 1\n      ] || null;\n  } else if (bufferEnd === 0 && fragments[0].start === 0) {\n    fragNext = fragments[0];\n  }\n  // Prefer the next fragment if it's within tolerance\n  if (\n    fragNext &&\n    fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, fragNext) ===\n      0\n  ) {\n    return fragNext;\n  }\n  // We might be seeking past the tolerance so find the best match\n  const foundFragment = BinarySearch.search(\n    fragments,\n    fragmentWithinToleranceTest.bind(null, bufferEnd, maxFragLookUpTolerance)\n  );\n  if (foundFragment && (foundFragment !== fragPrevious || !fragNext)) {\n    return foundFragment;\n  }\n  // If no match was found return the next fragment after fragPrevious, or null\n  return fragNext;\n}\n\n/**\n * The test function used by the findFragmentBySn's BinarySearch to look for the best match to the current buffer conditions.\n * @param {*} candidate - The fragment to test\n * @param {number} [bufferEnd = 0] - The end of the current buffered range the playhead is currently within\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous\n * @returns {number} - 0 if it matches, 1 if too low, -1 if too high\n */\nexport function fragmentWithinToleranceTest(\n  bufferEnd = 0,\n  maxFragLookUpTolerance = 0,\n  candidate: Fragment\n) {\n  // eagerly accept an accurate match (no tolerance)\n  if (\n    candidate.start <= bufferEnd &&\n    candidate.start + candidate.duration > bufferEnd\n  ) {\n    return 0;\n  }\n  // offset should be within fragment boundary - config.maxFragLookUpTolerance\n  // this is to cope with situations like\n  // bufferEnd = 9.991\n  // frag[Ø] : [0,10]\n  // frag[1] : [10,20]\n  // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n  //              frag start               frag start+duration\n  //                  |-----------------------------|\n  //              <--->                         <--->\n  //  ...--------><-----------------------------><---------....\n  // previous frag         matching fragment         next frag\n  //  return -1             return 0                 return 1\n  // logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n  // Set the lookup tolerance to be small enough to detect the current segment - ensures we don't skip over very small segments\n  const candidateLookupTolerance = Math.min(\n    maxFragLookUpTolerance,\n    candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0)\n  );\n  if (\n    candidate.start + candidate.duration - candidateLookupTolerance <=\n    bufferEnd\n  ) {\n    return 1;\n  } else if (\n    candidate.start - candidateLookupTolerance > bufferEnd &&\n    candidate.start\n  ) {\n    // if maxFragLookUpTolerance will have negative value then don't return -1 for first element\n    return -1;\n  }\n\n  return 0;\n}\n\n/**\n * The test function used by the findFragmentByPdt's BinarySearch to look for the best match to the current buffer conditions.\n * This function tests the candidate's program date time values, as represented in Unix time\n * @param {*} candidate - The fragment to test\n * @param {number} [pdtBufferEnd = 0] - The Unix time representing the end of the current buffered range\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous\n * @returns {boolean} True if contiguous, false otherwise\n */\nexport function pdtWithinToleranceTest(\n  pdtBufferEnd: number,\n  maxFragLookUpTolerance: number,\n  candidate: Fragment\n): boolean {\n  const candidateLookupTolerance =\n    Math.min(\n      maxFragLookUpTolerance,\n      candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0)\n    ) * 1000;\n\n  // endProgramDateTime can be null, default to zero\n  const endProgramDateTime = candidate.endProgramDateTime || 0;\n  return endProgramDateTime - candidateLookupTolerance > pdtBufferEnd;\n}\n\nexport function findFragWithCC(\n  fragments: Fragment[],\n  cc: number\n): Fragment | null {\n  return BinarySearch.search(fragments, (candidate) => {\n    if (candidate.cc < cc) {\n      return 1;\n    } else if (candidate.cc > cc) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}\n","import { Events } from '../events';\nimport { Fragment, Part } from '../loader/fragment';\nimport { PlaylistLevelType } from '../types/loader';\nimport type { SourceBufferName } from '../types/buffer';\nimport type {\n  FragmentBufferedRange,\n  FragmentEntity,\n  FragmentTimeRange,\n} from '../types/fragment-tracker';\nimport type { ComponentAPI } from '../types/component-api';\nimport type {\n  BufferAppendedData,\n  FragBufferedData,\n  FragLoadedData,\n} from '../types/events';\nimport type Hls from '../hls';\n\nexport enum FragmentState {\n  NOT_LOADED = 'NOT_LOADED',\n  APPENDING = 'APPENDING',\n  PARTIAL = 'PARTIAL',\n  OK = 'OK',\n}\n\nexport class FragmentTracker implements ComponentAPI {\n  private activeFragment: Fragment | null = null;\n  private activeParts: Part[] | null = null;\n  private endListFragments: { [key in PlaylistLevelType]?: FragmentEntity } =\n    Object.create(null);\n  private fragments: Partial<Record<string, FragmentEntity>> =\n    Object.create(null);\n  private timeRanges:\n    | {\n        [key in SourceBufferName]?: TimeRanges;\n      }\n    | null = Object.create(null);\n\n  private bufferPadding: number = 0.2;\n  private hls: Hls;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.BUFFER_APPENDED, this.onBufferAppended, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.BUFFER_APPENDED, this.onBufferAppended, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n  }\n\n  public destroy() {\n    this._unregisterListeners();\n    // @ts-ignore\n    this.fragments =\n      // @ts-ignore\n      this.endListFragments =\n      this.timeRanges =\n      this.activeFragment =\n      this.activeParts =\n        null;\n  }\n\n  /**\n   * Return a Fragment with an appended range that matches the position and levelType.\n   * If not found any Fragment, return null\n   */\n  public getAppendedFrag(\n    position: number,\n    levelType: PlaylistLevelType\n  ): Fragment | Part | null {\n    if (levelType === PlaylistLevelType.MAIN) {\n      const { activeFragment, activeParts } = this;\n      if (!activeFragment) {\n        return null;\n      }\n      if (activeParts) {\n        for (let i = activeParts.length; i--; ) {\n          const activePart = activeParts[i];\n          const appendedPTS = activePart\n            ? activePart.end\n            : activeFragment.appendedPTS;\n          if (\n            activePart.start <= position &&\n            appendedPTS !== undefined &&\n            position <= appendedPTS\n          ) {\n            // 9 is a magic number. remove parts from lookup after a match but keep some short seeks back.\n            if (i > 9) {\n              this.activeParts = activeParts.slice(i - 9);\n            }\n            return activePart;\n          }\n        }\n      } else if (\n        activeFragment.start <= position &&\n        activeFragment.appendedPTS !== undefined &&\n        position <= activeFragment.appendedPTS\n      ) {\n        return activeFragment;\n      }\n    }\n    return this.getBufferedFrag(position, levelType);\n  }\n\n  /**\n   * Return a buffered Fragment that matches the position and levelType.\n   * A buffered Fragment is one whose loading, parsing and appending is done (completed or \"partial\" meaning aborted).\n   * If not found any Fragment, return null\n   */\n  public getBufferedFrag(\n    position: number,\n    levelType: PlaylistLevelType\n  ): Fragment | null {\n    const { fragments } = this;\n    const keys = Object.keys(fragments);\n    for (let i = keys.length; i--; ) {\n      const fragmentEntity = fragments[keys[i]];\n      if (fragmentEntity?.body.type === levelType && fragmentEntity.buffered) {\n        const frag = fragmentEntity.body;\n        if (frag.start <= position && position <= frag.end) {\n          return frag;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Partial fragments effected by coded frame eviction will be removed\n   * The browser will unload parts of the buffer to free up memory for new buffer data\n   * Fragments will need to be reloaded when the buffer is freed up, removing partial fragments will allow them to reload(since there might be parts that are still playable)\n   */\n  public detectEvictedFragments(\n    elementaryStream: SourceBufferName,\n    timeRange: TimeRanges,\n    playlistType?: PlaylistLevelType\n  ) {\n    if (this.timeRanges) {\n      this.timeRanges[elementaryStream] = timeRange;\n    }\n    // Check if any flagged fragments have been unloaded\n    Object.keys(this.fragments).forEach((key) => {\n      const fragmentEntity = this.fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (!fragmentEntity.buffered && !fragmentEntity.loaded) {\n        if (fragmentEntity.body.type === playlistType) {\n          this.removeFragment(fragmentEntity.body);\n        }\n        return;\n      }\n      const esData = fragmentEntity.range[elementaryStream];\n      if (!esData) {\n        return;\n      }\n      esData.time.some((time: FragmentTimeRange) => {\n        const isNotBuffered = !this.isTimeBuffered(\n          time.startPTS,\n          time.endPTS,\n          timeRange\n        );\n        if (isNotBuffered) {\n          // Unregister partial fragment as it needs to load again to be reused\n          this.removeFragment(fragmentEntity.body);\n        }\n        return isNotBuffered;\n      });\n    });\n  }\n\n  /**\n   * Checks if the fragment passed in is loaded in the buffer properly\n   * Partially loaded fragments will be registered as a partial fragment\n   */\n  private detectPartialFragments(data: FragBufferedData) {\n    const timeRanges = this.timeRanges;\n    const { frag, part } = data;\n    if (!timeRanges || frag.sn === 'initSegment') {\n      return;\n    }\n\n    const fragKey = getFragmentKey(frag);\n    const fragmentEntity = this.fragments[fragKey];\n    if (!fragmentEntity) {\n      return;\n    }\n    Object.keys(timeRanges).forEach((elementaryStream) => {\n      const streamInfo = frag.elementaryStreams[elementaryStream];\n      if (!streamInfo) {\n        return;\n      }\n      const timeRange = timeRanges[elementaryStream];\n      const partial = part !== null || streamInfo.partial === true;\n      fragmentEntity.range[elementaryStream] = this.getBufferedTimes(\n        frag,\n        part,\n        partial,\n        timeRange\n      );\n    });\n    fragmentEntity.loaded = null;\n    if (Object.keys(fragmentEntity.range).length) {\n      fragmentEntity.buffered = true;\n      if (fragmentEntity.body.endList) {\n        this.endListFragments[fragmentEntity.body.type] = fragmentEntity;\n      }\n    } else {\n      // remove fragment if nothing was appended\n      this.removeFragment(fragmentEntity.body);\n    }\n  }\n\n  public fragBuffered(frag: Fragment) {\n    const fragKey = getFragmentKey(frag);\n    const fragmentEntity = this.fragments[fragKey];\n    if (fragmentEntity) {\n      fragmentEntity.loaded = null;\n      fragmentEntity.buffered = true;\n    }\n  }\n\n  private getBufferedTimes(\n    fragment: Fragment,\n    part: Part | null,\n    partial: boolean,\n    timeRange: TimeRanges\n  ): FragmentBufferedRange {\n    const buffered: FragmentBufferedRange = {\n      time: [],\n      partial,\n    };\n    const startPTS = part ? part.start : fragment.start;\n    const endPTS = part ? part.end : fragment.end;\n    const minEndPTS = fragment.minEndPTS || endPTS;\n    const maxStartPTS = fragment.maxStartPTS || startPTS;\n    for (let i = 0; i < timeRange.length; i++) {\n      const startTime = timeRange.start(i) - this.bufferPadding;\n      const endTime = timeRange.end(i) + this.bufferPadding;\n      if (maxStartPTS >= startTime && minEndPTS <= endTime) {\n        // Fragment is entirely contained in buffer\n        // No need to check the other timeRange times since it's completely playable\n        buffered.time.push({\n          startPTS: Math.max(startPTS, timeRange.start(i)),\n          endPTS: Math.min(endPTS, timeRange.end(i)),\n        });\n        break;\n      } else if (startPTS < endTime && endPTS > startTime) {\n        buffered.partial = true;\n        // Check for intersection with buffer\n        // Get playable sections of the fragment\n        buffered.time.push({\n          startPTS: Math.max(startPTS, timeRange.start(i)),\n          endPTS: Math.min(endPTS, timeRange.end(i)),\n        });\n      } else if (endPTS <= startTime) {\n        // No need to check the rest of the timeRange as it is in order\n        break;\n      }\n    }\n    return buffered;\n  }\n\n  /**\n   * Gets the partial fragment for a certain time\n   */\n  public getPartialFragment(time: number): Fragment | null {\n    let bestFragment: Fragment | null = null;\n    let timePadding: number;\n    let startTime: number;\n    let endTime: number;\n    let bestOverlap: number = 0;\n    const { bufferPadding, fragments } = this;\n    Object.keys(fragments).forEach((key) => {\n      const fragmentEntity = fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (isPartial(fragmentEntity)) {\n        startTime = fragmentEntity.body.start - bufferPadding;\n        endTime = fragmentEntity.body.end + bufferPadding;\n        if (time >= startTime && time <= endTime) {\n          // Use the fragment that has the most padding from start and end time\n          timePadding = Math.min(time - startTime, endTime - time);\n          if (bestOverlap <= timePadding) {\n            bestFragment = fragmentEntity.body;\n            bestOverlap = timePadding;\n          }\n        }\n      }\n    });\n    return bestFragment;\n  }\n\n  public isEndListAppended(type: PlaylistLevelType): boolean {\n    const lastFragmentEntity = this.endListFragments[type];\n    return (\n      lastFragmentEntity !== undefined &&\n      (lastFragmentEntity.buffered || isPartial(lastFragmentEntity))\n    );\n  }\n\n  public getState(fragment: Fragment): FragmentState {\n    const fragKey = getFragmentKey(fragment);\n    const fragmentEntity = this.fragments[fragKey];\n\n    if (fragmentEntity) {\n      if (!fragmentEntity.buffered) {\n        return FragmentState.APPENDING;\n      } else if (isPartial(fragmentEntity)) {\n        return FragmentState.PARTIAL;\n      } else {\n        return FragmentState.OK;\n      }\n    }\n\n    return FragmentState.NOT_LOADED;\n  }\n\n  private isTimeBuffered(\n    startPTS: number,\n    endPTS: number,\n    timeRange: TimeRanges\n  ): boolean {\n    let startTime;\n    let endTime;\n    for (let i = 0; i < timeRange.length; i++) {\n      startTime = timeRange.start(i) - this.bufferPadding;\n      endTime = timeRange.end(i) + this.bufferPadding;\n      if (startPTS >= startTime && endPTS <= endTime) {\n        return true;\n      }\n\n      if (endPTS <= startTime) {\n        // No need to check the rest of the timeRange as it is in order\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  private onFragLoaded(event: Events.FRAG_LOADED, data: FragLoadedData) {\n    const { frag, part } = data;\n    // don't track initsegment (for which sn is not a number)\n    // don't track frags used for bitrateTest, they're irrelevant.\n    // don't track parts for memory efficiency\n    if (frag.sn === 'initSegment' || frag.bitrateTest || part) {\n      return;\n    }\n\n    const fragKey = getFragmentKey(frag);\n    this.fragments[fragKey] = {\n      body: frag,\n      loaded: data,\n      buffered: false,\n      range: Object.create(null),\n    };\n  }\n\n  private onBufferAppended(\n    event: Events.BUFFER_APPENDED,\n    data: BufferAppendedData\n  ) {\n    const { frag, part, timeRanges } = data;\n    if (frag.type === PlaylistLevelType.MAIN) {\n      if (this.activeFragment !== frag) {\n        this.activeFragment = frag;\n        frag.appendedPTS = undefined;\n      }\n      if (part) {\n        let activeParts = this.activeParts;\n        if (!activeParts) {\n          this.activeParts = activeParts = [];\n        }\n        activeParts.push(part);\n      } else {\n        this.activeParts = null;\n      }\n    }\n    // Store the latest timeRanges loaded in the buffer\n    this.timeRanges = timeRanges;\n    Object.keys(timeRanges).forEach((elementaryStream: SourceBufferName) => {\n      const timeRange = timeRanges[elementaryStream] as TimeRanges;\n      this.detectEvictedFragments(elementaryStream, timeRange);\n      if (!part && frag.type === PlaylistLevelType.MAIN) {\n        const streamInfo = frag.elementaryStreams[elementaryStream];\n        if (!streamInfo) {\n          return;\n        }\n        for (let i = 0; i < timeRange.length; i++) {\n          const rangeEnd = timeRange.end(i);\n          if (rangeEnd <= streamInfo.endPTS && rangeEnd > streamInfo.startPTS) {\n            frag.appendedPTS = Math.max(rangeEnd, frag.appendedPTS || 0);\n          } else {\n            frag.appendedPTS = streamInfo.endPTS;\n          }\n        }\n      }\n    });\n  }\n\n  private onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    this.detectPartialFragments(data);\n  }\n\n  private hasFragment(fragment: Fragment): boolean {\n    const fragKey = getFragmentKey(fragment);\n    return !!this.fragments[fragKey];\n  }\n\n  public removeFragmentsInRange(\n    start: number,\n    end: number,\n    playlistType: PlaylistLevelType\n  ) {\n    Object.keys(this.fragments).forEach((key) => {\n      const fragmentEntity = this.fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (fragmentEntity.buffered) {\n        const frag = fragmentEntity.body;\n        if (\n          frag.type === playlistType &&\n          frag.start < end &&\n          frag.end > start\n        ) {\n          this.removeFragment(frag);\n        }\n      }\n    });\n  }\n\n  public removeFragment(fragment: Fragment) {\n    const fragKey = getFragmentKey(fragment);\n    fragment.stats.loaded = 0;\n    fragment.clearElementaryStreamInfo();\n    fragment.appendedPTS = undefined;\n    delete this.fragments[fragKey];\n    if (fragment.endList) {\n      delete this.endListFragments[fragment.type];\n    }\n  }\n\n  public removeAllFragments() {\n    this.fragments = Object.create(null);\n    this.endListFragments = Object.create(null);\n    this.activeFragment = null;\n    this.activeParts = null;\n  }\n}\n\nfunction isPartial(fragmentEntity: FragmentEntity): boolean {\n  return (\n    fragmentEntity.buffered &&\n    (fragmentEntity.range.video?.partial || fragmentEntity.range.audio?.partial)\n  );\n}\n\nfunction getFragmentKey(fragment: Fragment): string {\n  return `${fragment.type}_${fragment.level}_${fragment.urlId}_${fragment.sn}`;\n}\n","import type { BufferInfo } from '../utils/buffer-helper';\nimport { BufferHelper } from '../utils/buffer-helper';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\nimport type { Fragment } from '../loader/fragment';\nimport type { FragmentTracker } from './fragment-tracker';\n\nexport const STALL_MINIMUM_DURATION_MS = 250;\nexport const MAX_START_GAP_JUMP = 2.0;\nexport const SKIP_BUFFER_HOLE_STEP_SECONDS = 0.1;\nexport const SKIP_BUFFER_RANGE_START = 0.05;\n\nexport default class GapController {\n  private config: HlsConfig;\n  private media: HTMLMediaElement | null = null;\n  private fragmentTracker: FragmentTracker;\n  private hls: Hls;\n  private nudgeRetry: number = 0;\n  private stallReported: boolean = false;\n  private stalled: number | null = null;\n  private moved: boolean = false;\n  private seeking: boolean = false;\n\n  constructor(config, media, fragmentTracker, hls) {\n    this.config = config;\n    this.media = media;\n    this.fragmentTracker = fragmentTracker;\n    this.hls = hls;\n  }\n\n  public destroy() {\n    this.media = null;\n    // @ts-ignore\n    this.hls = this.fragmentTracker = null;\n  }\n\n  /**\n   * Checks if the playhead is stuck within a gap, and if so, attempts to free it.\n   * A gap is an unbuffered range between two buffered ranges (or the start and the first buffered range).\n   *\n   * @param {number} lastCurrentTime Previously read playhead position\n   */\n  public poll(lastCurrentTime: number, activeFrag: Fragment | null) {\n    const { config, media, stalled } = this;\n    if (media === null) {\n      return;\n    }\n    const { currentTime, seeking } = media;\n    const seeked = this.seeking && !seeking;\n    const beginSeek = !this.seeking && seeking;\n\n    this.seeking = seeking;\n\n    // The playhead is moving, no-op\n    if (currentTime !== lastCurrentTime) {\n      this.moved = true;\n      if (stalled !== null) {\n        // The playhead is now moving, but was previously stalled\n        if (this.stallReported) {\n          const stalledDuration = self.performance.now() - stalled;\n          logger.warn(\n            `playback not stuck anymore @${currentTime}, after ${Math.round(\n              stalledDuration\n            )}ms`\n          );\n          this.stallReported = false;\n        }\n        this.stalled = null;\n        this.nudgeRetry = 0;\n      }\n      return;\n    }\n\n    // Clear stalled state when beginning or finishing seeking so that we don't report stalls coming out of a seek\n    if (beginSeek || seeked) {\n      this.stalled = null;\n    }\n\n    // The playhead should not be moving\n    if (\n      (media.paused && !seeking) ||\n      media.ended ||\n      media.playbackRate === 0 ||\n      !BufferHelper.getBuffered(media).length\n    ) {\n      return;\n    }\n\n    const bufferInfo = BufferHelper.bufferInfo(media, currentTime, 0);\n    const isBuffered = bufferInfo.len > 0;\n    const nextStart = bufferInfo.nextStart || 0;\n\n    // There is no playable buffer (seeked, waiting for buffer)\n    if (!isBuffered && !nextStart) {\n      return;\n    }\n\n    if (seeking) {\n      // Waiting for seeking in a buffered range to complete\n      const hasEnoughBuffer = bufferInfo.len > MAX_START_GAP_JUMP;\n      // Next buffered range is too far ahead to jump to while still seeking\n      const noBufferGap =\n        !nextStart ||\n        (activeFrag && activeFrag.start <= currentTime) ||\n        (nextStart - currentTime > MAX_START_GAP_JUMP &&\n          !this.fragmentTracker.getPartialFragment(currentTime));\n      if (hasEnoughBuffer || noBufferGap) {\n        return;\n      }\n      // Reset moved state when seeking to a point in or before a gap\n      this.moved = false;\n    }\n\n    // Skip start gaps if we haven't played, but the last poll detected the start of a stall\n    // The addition poll gives the browser a chance to jump the gap for us\n    if (!this.moved && this.stalled !== null) {\n      // Jump start gaps within jump threshold\n      const startJump =\n        Math.max(nextStart, bufferInfo.start || 0) - currentTime;\n\n      // When joining a live stream with audio tracks, account for live playlist window sliding by allowing\n      // a larger jump over start gaps caused by the audio-stream-controller buffering a start fragment\n      // that begins over 1 target duration after the video start position.\n      const level = this.hls.levels\n        ? this.hls.levels[this.hls.currentLevel]\n        : null;\n      const isLive = level?.details?.live;\n      const maxStartGapJump = isLive\n        ? level!.details!.targetduration * 2\n        : MAX_START_GAP_JUMP;\n      if (startJump > 0 && startJump <= maxStartGapJump) {\n        this._trySkipBufferHole(null);\n        return;\n      }\n    }\n\n    // Start tracking stall time\n    const tnow = self.performance.now();\n    if (stalled === null) {\n      this.stalled = tnow;\n      return;\n    }\n\n    const stalledDuration = tnow - stalled;\n    if (!seeking && stalledDuration >= STALL_MINIMUM_DURATION_MS) {\n      // Report stalling after trying to fix\n      this._reportStall(bufferInfo);\n      if (!this.media) {\n        return;\n      }\n    }\n\n    const bufferedWithHoles = BufferHelper.bufferInfo(\n      media,\n      currentTime,\n      config.maxBufferHole\n    );\n    this._tryFixBufferStall(bufferedWithHoles, stalledDuration);\n  }\n\n  /**\n   * Detects and attempts to fix known buffer stalling issues.\n   * @param bufferInfo - The properties of the current buffer.\n   * @param stalledDurationMs - The amount of time Hls.js has been stalling for.\n   * @private\n   */\n  private _tryFixBufferStall(\n    bufferInfo: BufferInfo,\n    stalledDurationMs: number\n  ) {\n    const { config, fragmentTracker, media } = this;\n    if (media === null) {\n      return;\n    }\n    const currentTime = media.currentTime;\n\n    const partial = fragmentTracker.getPartialFragment(currentTime);\n    if (partial) {\n      // Try to skip over the buffer hole caused by a partial fragment\n      // This method isn't limited by the size of the gap between buffered ranges\n      const targetTime = this._trySkipBufferHole(partial);\n      // we return here in this case, meaning\n      // the branch below only executes when we don't handle a partial fragment\n      if (targetTime || !this.media) {\n        return;\n      }\n    }\n\n    // if we haven't had to skip over a buffer hole of a partial fragment\n    // we may just have to \"nudge\" the playlist as the browser decoding/rendering engine\n    // needs to cross some sort of threshold covering all source-buffers content\n    // to start playing properly.\n    if (\n      bufferInfo.len > config.maxBufferHole &&\n      stalledDurationMs > config.highBufferWatchdogPeriod * 1000\n    ) {\n      logger.warn('Trying to nudge playhead over buffer-hole');\n      // Try to nudge currentTime over a buffer hole if we've been stalling for the configured amount of seconds\n      // We only try to jump the hole if it's under the configured size\n      // Reset stalled so to rearm watchdog timer\n      this.stalled = null;\n      this._tryNudgeBuffer();\n    }\n  }\n\n  /**\n   * Triggers a BUFFER_STALLED_ERROR event, but only once per stall period.\n   * @param bufferLen - The playhead distance from the end of the current buffer segment.\n   * @private\n   */\n  private _reportStall(bufferInfo: BufferInfo) {\n    const { hls, media, stallReported } = this;\n    if (!stallReported && media) {\n      // Report stalled error once\n      this.stallReported = true;\n      logger.warn(\n        `Playback stalling at @${\n          media.currentTime\n        } due to low buffer (${JSON.stringify(bufferInfo)})`\n      );\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_STALLED_ERROR,\n        fatal: false,\n        buffer: bufferInfo.len,\n      });\n    }\n  }\n\n  /**\n   * Attempts to fix buffer stalls by jumping over known gaps caused by partial fragments\n   * @param partial - The partial fragment found at the current time (where playback is stalling).\n   * @private\n   */\n  private _trySkipBufferHole(partial: Fragment | null): number {\n    const { config, hls, media } = this;\n    if (media === null) {\n      return 0;\n    }\n    const currentTime = media.currentTime;\n    let lastEndTime = 0;\n    // Check if currentTime is between unbuffered regions of partial fragments\n    const buffered = BufferHelper.getBuffered(media);\n    for (let i = 0; i < buffered.length; i++) {\n      const startTime = buffered.start(i);\n      if (\n        currentTime + config.maxBufferHole >= lastEndTime &&\n        currentTime < startTime\n      ) {\n        const targetTime = Math.max(\n          startTime + SKIP_BUFFER_RANGE_START,\n          media.currentTime + SKIP_BUFFER_HOLE_STEP_SECONDS\n        );\n        logger.warn(\n          `skipping hole, adjusting currentTime from ${currentTime} to ${targetTime}`\n        );\n        this.moved = true;\n        this.stalled = null;\n        media.currentTime = targetTime;\n        if (partial) {\n          hls.trigger(Events.ERROR, {\n            type: ErrorTypes.MEDIA_ERROR,\n            details: ErrorDetails.BUFFER_SEEK_OVER_HOLE,\n            fatal: false,\n            reason: `fragment loaded with buffer holes, seeking from ${currentTime} to ${targetTime}`,\n            frag: partial,\n          });\n        }\n        return targetTime;\n      }\n      lastEndTime = buffered.end(i);\n    }\n    return 0;\n  }\n\n  /**\n   * Attempts to fix buffer stalls by advancing the mediaElement's current time by a small amount.\n   * @private\n   */\n  private _tryNudgeBuffer() {\n    const { config, hls, media, nudgeRetry } = this;\n    if (media === null) {\n      return;\n    }\n    const currentTime = media.currentTime;\n    this.nudgeRetry++;\n\n    if (nudgeRetry < config.nudgeMaxRetry) {\n      const targetTime = currentTime + (nudgeRetry + 1) * config.nudgeOffset;\n      // playback stalled in buffered area ... let's nudge currentTime to try to overcome this\n      logger.warn(`Nudging 'currentTime' from ${currentTime} to ${targetTime}`);\n      media.currentTime = targetTime;\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_NUDGE_ON_STALL,\n        fatal: false,\n      });\n    } else {\n      logger.error(\n        `Playhead still not moving while enough data buffered @${currentTime} after ${config.nudgeMaxRetry} nudges`\n      );\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_STALLED_ERROR,\n        fatal: true,\n      });\n    }\n  }\n}\n","import { Events } from '../events';\nimport {\n  sendAddTrackEvent,\n  clearCurrentCues,\n  removeCuesInRange,\n} from '../utils/texttrack-utils';\nimport * as ID3 from '../demux/id3';\nimport { DateRange, DateRangeAttribute } from '../loader/date-range';\nimport { MetadataSchema } from '../types/demuxer';\nimport type {\n  BufferFlushingData,\n  FragParsingMetadataData,\n  LevelUpdatedData,\n  MediaAttachedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\n\ndeclare global {\n  interface Window {\n    WebKitDataCue: VTTCue | void;\n  }\n}\n\ntype Cue = VTTCue | TextTrackCue;\n\nconst MIN_CUE_DURATION = 0.25;\n\nfunction getCueClass() {\n  // Attempt to recreate Safari functionality by creating\n  // WebKitDataCue objects when available and store the decoded\n  // ID3 data in the value property of the cue\n  return (self.WebKitDataCue || self.VTTCue || self.TextTrackCue) as any;\n}\n\n// VTTCue latest draft allows an infinite duration, fallback\n// to MAX_VALUE if necessary\nconst MAX_CUE_ENDTIME = (() => {\n  const Cue = getCueClass();\n  try {\n    new Cue(0, Number.POSITIVE_INFINITY, '');\n  } catch (e) {\n    return Number.MAX_VALUE;\n  }\n  return Number.POSITIVE_INFINITY;\n})();\n\nfunction dateRangeDateToTimelineSeconds(date: Date, offset: number): number {\n  return date.getTime() / 1000 - offset;\n}\n\nfunction hexToArrayBuffer(str): ArrayBuffer {\n  return Uint8Array.from(\n    str\n      .replace(/^0x/, '')\n      .replace(/([\\da-fA-F]{2}) ?/g, '0x$1 ')\n      .replace(/ +$/, '')\n      .split(' ')\n  ).buffer;\n}\nclass ID3TrackController implements ComponentAPI {\n  private hls: Hls;\n  private id3Track: TextTrack | null = null;\n  private media: HTMLMediaElement | null = null;\n  private dateRangeCuesAppended: Record<\n    string,\n    { cues: Record<string, Cue>; dateRange: DateRange; durationKnown: boolean }\n  > = {};\n\n  constructor(hls) {\n    this.hls = hls;\n    this._registerListeners();\n  }\n\n  destroy() {\n    this._unregisterListeners();\n    this.id3Track = null;\n    this.media = null;\n    this.dateRangeCuesAppended = {};\n    // @ts-ignore\n    this.hls = null;\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n  }\n\n  // Add ID3 metatadata text track.\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ): void {\n    this.media = data.media;\n  }\n\n  protected onMediaDetaching(): void {\n    if (!this.id3Track) {\n      return;\n    }\n    clearCurrentCues(this.id3Track);\n    this.id3Track = null;\n    this.media = null;\n    this.dateRangeCuesAppended = {};\n  }\n\n  private onManifestLoading() {\n    this.dateRangeCuesAppended = {};\n  }\n\n  createTrack(media: HTMLMediaElement): TextTrack {\n    const track = this.getID3Track(media.textTracks) as TextTrack;\n    track.mode = 'hidden';\n    return track;\n  }\n\n  getID3Track(textTracks: TextTrackList): TextTrack | void {\n    if (!this.media) {\n      return;\n    }\n    for (let i = 0; i < textTracks.length; i++) {\n      const textTrack: TextTrack = textTracks[i];\n      if (textTrack.kind === 'metadata' && textTrack.label === 'id3') {\n        // send 'addtrack' when reusing the textTrack for metadata,\n        // same as what we do for captions\n        sendAddTrackEvent(textTrack, this.media);\n\n        return textTrack;\n      }\n    }\n    return this.media.addTextTrack('metadata', 'id3');\n  }\n\n  onFragParsingMetadata(\n    event: Events.FRAG_PARSING_METADATA,\n    data: FragParsingMetadataData\n  ) {\n    if (!this.media) {\n      return;\n    }\n\n    const {\n      hls: {\n        config: { enableEmsgMetadataCues, enableID3MetadataCues },\n      },\n    } = this;\n    if (!enableEmsgMetadataCues && !enableID3MetadataCues) {\n      return;\n    }\n\n    const { samples } = data;\n\n    // create track dynamically\n    if (!this.id3Track) {\n      this.id3Track = this.createTrack(this.media);\n    }\n\n    const Cue = getCueClass();\n\n    for (let i = 0; i < samples.length; i++) {\n      const type = samples[i].type;\n      if (\n        (type === MetadataSchema.emsg && !enableEmsgMetadataCues) ||\n        !enableID3MetadataCues\n      ) {\n        continue;\n      }\n\n      const frames = ID3.getID3Frames(samples[i].data);\n      if (frames) {\n        const startTime = samples[i].pts;\n        let endTime: number = startTime + samples[i].duration;\n\n        if (endTime > MAX_CUE_ENDTIME) {\n          endTime = MAX_CUE_ENDTIME;\n        }\n\n        const timeDiff = endTime - startTime;\n        if (timeDiff <= 0) {\n          endTime = startTime + MIN_CUE_DURATION;\n        }\n\n        for (let j = 0; j < frames.length; j++) {\n          const frame = frames[j];\n          // Safari doesn't put the timestamp frame in the TextTrack\n          if (!ID3.isTimeStampFrame(frame)) {\n            // add a bounds to any unbounded cues\n            this.updateId3CueEnds(startTime);\n\n            const cue = new Cue(startTime, endTime, '');\n            cue.value = frame;\n            if (type) {\n              cue.type = type;\n            }\n            this.id3Track.addCue(cue);\n          }\n        }\n      }\n    }\n  }\n\n  updateId3CueEnds(startTime: number) {\n    const cues = this.id3Track?.cues;\n    if (cues) {\n      for (let i = cues.length; i--; ) {\n        const cue = cues[i] as any;\n        if (cue.startTime < startTime && cue.endTime === MAX_CUE_ENDTIME) {\n          cue.endTime = startTime;\n        }\n      }\n    }\n  }\n\n  onBufferFlushing(\n    event: Events.BUFFER_FLUSHING,\n    { startOffset, endOffset, type }: BufferFlushingData\n  ) {\n    const { id3Track, hls } = this;\n    if (!hls) {\n      return;\n    }\n\n    const {\n      config: { enableEmsgMetadataCues, enableID3MetadataCues },\n    } = hls;\n    if (id3Track && (enableEmsgMetadataCues || enableID3MetadataCues)) {\n      let predicate;\n\n      if (type === 'audio') {\n        predicate = (cue) =>\n          (cue as any).type === MetadataSchema.audioId3 &&\n          enableID3MetadataCues;\n      } else if (type === 'video') {\n        predicate = (cue) =>\n          (cue as any).type === MetadataSchema.emsg && enableEmsgMetadataCues;\n      } else {\n        predicate = (cue) =>\n          ((cue as any).type === MetadataSchema.audioId3 &&\n            enableID3MetadataCues) ||\n          ((cue as any).type === MetadataSchema.emsg && enableEmsgMetadataCues);\n      }\n      removeCuesInRange(id3Track, startOffset, endOffset, predicate);\n    }\n  }\n\n  onLevelUpdated(event: Events.LEVEL_UPDATED, { details }: LevelUpdatedData) {\n    if (\n      !this.media ||\n      !details.hasProgramDateTime ||\n      !this.hls.config.enableDateRangeMetadataCues\n    ) {\n      return;\n    }\n    const { dateRangeCuesAppended, id3Track } = this;\n    const { dateRanges } = details;\n    const ids = Object.keys(dateRanges);\n    // Remove cues from track not found in details.dateRanges\n    if (id3Track) {\n      const idsToRemove = Object.keys(dateRangeCuesAppended).filter(\n        (id) => !ids.includes(id)\n      );\n      for (let i = idsToRemove.length; i--; ) {\n        const id = idsToRemove[i];\n        Object.keys(dateRangeCuesAppended[id].cues).forEach((key) => {\n          id3Track.removeCue(dateRangeCuesAppended[id].cues[key]);\n        });\n        delete dateRangeCuesAppended[id];\n      }\n    }\n    // Exit if the playlist does not have Date Ranges or does not have Program Date Time\n    const lastFragment = details.fragments[details.fragments.length - 1];\n    if (ids.length === 0 || !Number.isFinite(lastFragment?.programDateTime)) {\n      return;\n    }\n\n    if (!this.id3Track) {\n      this.id3Track = this.createTrack(this.media);\n    }\n\n    const dateTimeOffset =\n      (lastFragment.programDateTime as number) / 1000 - lastFragment.start;\n    const Cue = getCueClass();\n\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      const dateRange = dateRanges[id];\n      const appendedDateRangeCues = dateRangeCuesAppended[id];\n      const cues = appendedDateRangeCues?.cues || {};\n      let durationKnown = appendedDateRangeCues?.durationKnown || false;\n      const startTime = dateRangeDateToTimelineSeconds(\n        dateRange.startDate,\n        dateTimeOffset\n      );\n      let endTime = MAX_CUE_ENDTIME;\n      const endDate = dateRange.endDate;\n      if (endDate) {\n        endTime = dateRangeDateToTimelineSeconds(endDate, dateTimeOffset);\n        durationKnown = true;\n      } else if (dateRange.endOnNext && !durationKnown) {\n        const nextDateRangeWithSameClass = ids\n          .reduce((filterMapArray, id) => {\n            const candidate = dateRanges[id];\n            if (\n              candidate.class === dateRange.class &&\n              candidate.id !== id &&\n              candidate.startDate > dateRange.startDate\n            ) {\n              filterMapArray.push(candidate);\n            }\n            return filterMapArray;\n          }, [] as DateRange[])\n          .sort((a, b) => a.startDate.getTime() - b.startDate.getTime())[0];\n        if (nextDateRangeWithSameClass) {\n          endTime = dateRangeDateToTimelineSeconds(\n            nextDateRangeWithSameClass.startDate,\n            dateTimeOffset\n          );\n          durationKnown = true;\n        }\n      }\n\n      const attributes = Object.keys(dateRange.attr);\n      for (let j = 0; j < attributes.length; j++) {\n        const key = attributes[j];\n        if (\n          key === DateRangeAttribute.ID ||\n          key === DateRangeAttribute.CLASS ||\n          key === DateRangeAttribute.START_DATE ||\n          key === DateRangeAttribute.DURATION ||\n          key === DateRangeAttribute.END_DATE ||\n          key === DateRangeAttribute.END_ON_NEXT\n        ) {\n          continue;\n        }\n        let cue = cues[key] as any;\n        if (cue) {\n          if (durationKnown && !appendedDateRangeCues.durationKnown) {\n            cue.endTime = endTime;\n          }\n        } else {\n          let data = dateRange.attr[key];\n          cue = new Cue(startTime, endTime, '');\n          if (\n            key === DateRangeAttribute.SCTE35_OUT ||\n            key === DateRangeAttribute.SCTE35_IN\n          ) {\n            data = hexToArrayBuffer(data);\n          }\n          cue.value = { key, data };\n          cue.type = MetadataSchema.dateRange;\n          this.id3Track.addCue(cue);\n          cues[key] = cue;\n        }\n      }\n      dateRangeCuesAppended[id] = {\n        cues,\n        dateRange,\n        durationKnown,\n      };\n    }\n  }\n}\n\nexport default ID3TrackController;\n","import { LevelDetails } from '../loader/level-details';\nimport { ErrorDetails } from '../errors';\nimport { Events } from '../events';\nimport type {\n  ErrorData,\n  LevelUpdatedData,\n  MediaAttachingData,\n} from '../types/events';\nimport { logger } from '../utils/logger';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\n\nexport default class LatencyController implements ComponentAPI {\n  private hls: Hls;\n  private readonly config: HlsConfig;\n  private media: HTMLMediaElement | null = null;\n  private levelDetails: LevelDetails | null = null;\n  private currentTime: number = 0;\n  private stallCount: number = 0;\n  private _latency: number | null = null;\n  private timeupdateHandler = () => this.timeupdate();\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.config = hls.config;\n    this.registerListeners();\n  }\n\n  get latency(): number {\n    return this._latency || 0;\n  }\n\n  get maxLatency(): number {\n    const { config, levelDetails } = this;\n    if (config.liveMaxLatencyDuration !== undefined) {\n      return config.liveMaxLatencyDuration;\n    }\n    return levelDetails\n      ? config.liveMaxLatencyDurationCount * levelDetails.targetduration\n      : 0;\n  }\n\n  get targetLatency(): number | null {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return null;\n    }\n    const { holdBack, partHoldBack, targetduration } = levelDetails;\n    const { liveSyncDuration, liveSyncDurationCount, lowLatencyMode } =\n      this.config;\n    const userConfig = this.hls.userConfig;\n    let targetLatency = lowLatencyMode ? partHoldBack || holdBack : holdBack;\n    if (\n      userConfig.liveSyncDuration ||\n      userConfig.liveSyncDurationCount ||\n      targetLatency === 0\n    ) {\n      targetLatency =\n        liveSyncDuration !== undefined\n          ? liveSyncDuration\n          : liveSyncDurationCount * targetduration;\n    }\n    const maxLiveSyncOnStallIncrease = targetduration;\n    const liveSyncOnStallIncrease = 1.0;\n    return (\n      targetLatency +\n      Math.min(\n        this.stallCount * liveSyncOnStallIncrease,\n        maxLiveSyncOnStallIncrease\n      )\n    );\n  }\n\n  get liveSyncPosition(): number | null {\n    const liveEdge = this.estimateLiveEdge();\n    const targetLatency = this.targetLatency;\n    const levelDetails = this.levelDetails;\n    if (liveEdge === null || targetLatency === null || levelDetails === null) {\n      return null;\n    }\n    const edge = levelDetails.edge;\n    const syncPosition = liveEdge - targetLatency - this.edgeStalled;\n    const min = edge - levelDetails.totalduration;\n    const max =\n      edge -\n      ((this.config.lowLatencyMode && levelDetails.partTarget) ||\n        levelDetails.targetduration);\n    return Math.min(Math.max(min, syncPosition), max);\n  }\n\n  get drift(): number {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return 1;\n    }\n    return levelDetails.drift;\n  }\n\n  get edgeStalled(): number {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return 0;\n    }\n    const maxLevelUpdateAge =\n      ((this.config.lowLatencyMode && levelDetails.partTarget) ||\n        levelDetails.targetduration) * 3;\n    return Math.max(levelDetails.age - maxLevelUpdateAge, 0);\n  }\n\n  private get forwardBufferLength(): number {\n    const { media, levelDetails } = this;\n    if (!media || !levelDetails) {\n      return 0;\n    }\n    const bufferedRanges = media.buffered.length;\n    return (\n      (bufferedRanges\n        ? media.buffered.end(bufferedRanges - 1)\n        : levelDetails.edge) - this.currentTime\n    );\n  }\n\n  public destroy(): void {\n    this.unregisterListeners();\n    this.onMediaDetaching();\n    this.levelDetails = null;\n    // @ts-ignore\n    this.hls = this.timeupdateHandler = null;\n  }\n\n  private registerListeners() {\n    this.hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    this.hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    this.hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    this.hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    this.hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private unregisterListeners() {\n    this.hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached);\n    this.hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching);\n    this.hls.off(Events.MANIFEST_LOADING, this.onManifestLoading);\n    this.hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated);\n    this.hls.off(Events.ERROR, this.onError);\n  }\n\n  private onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media;\n    this.media.addEventListener('timeupdate', this.timeupdateHandler);\n  }\n\n  private onMediaDetaching() {\n    if (this.media) {\n      this.media.removeEventListener('timeupdate', this.timeupdateHandler);\n      this.media = null;\n    }\n  }\n\n  private onManifestLoading() {\n    this.levelDetails = null;\n    this._latency = null;\n    this.stallCount = 0;\n  }\n\n  private onLevelUpdated(\n    event: Events.LEVEL_UPDATED,\n    { details }: LevelUpdatedData\n  ) {\n    this.levelDetails = details;\n    if (details.advanced) {\n      this.timeupdate();\n    }\n    if (!details.live && this.media) {\n      this.media.removeEventListener('timeupdate', this.timeupdateHandler);\n    }\n  }\n\n  private onError(event: Events.ERROR, data: ErrorData) {\n    if (data.details !== ErrorDetails.BUFFER_STALLED_ERROR) {\n      return;\n    }\n    this.stallCount++;\n    logger.warn(\n      '[playback-rate-controller]: Stall detected, adjusting target latency'\n    );\n  }\n\n  private timeupdate() {\n    const { media, levelDetails } = this;\n    if (!media || !levelDetails) {\n      return;\n    }\n    this.currentTime = media.currentTime;\n\n    const latency = this.computeLatency();\n    if (latency === null) {\n      return;\n    }\n    this._latency = latency;\n\n    // Adapt playbackRate to meet target latency in low-latency mode\n    const { lowLatencyMode, maxLiveSyncPlaybackRate } = this.config;\n    if (!lowLatencyMode || maxLiveSyncPlaybackRate === 1) {\n      return;\n    }\n    const targetLatency = this.targetLatency;\n    if (targetLatency === null) {\n      return;\n    }\n    const distanceFromTarget = latency - targetLatency;\n    // Only adjust playbackRate when within one target duration of targetLatency\n    // and more than one second from under-buffering.\n    // Playback further than one target duration from target can be considered DVR playback.\n    const liveMinLatencyDuration = Math.min(\n      this.maxLatency,\n      targetLatency + levelDetails.targetduration\n    );\n    const inLiveRange = distanceFromTarget < liveMinLatencyDuration;\n    if (\n      levelDetails.live &&\n      inLiveRange &&\n      distanceFromTarget > 0.05 &&\n      this.forwardBufferLength > 1\n    ) {\n      const max = Math.min(2, Math.max(1.0, maxLiveSyncPlaybackRate));\n      const rate =\n        Math.round(\n          (2 / (1 + Math.exp(-0.75 * distanceFromTarget - this.edgeStalled))) *\n            20\n        ) / 20;\n      media.playbackRate = Math.min(max, Math.max(1, rate));\n    } else if (media.playbackRate !== 1 && media.playbackRate !== 0) {\n      media.playbackRate = 1;\n    }\n  }\n\n  private estimateLiveEdge(): number | null {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return null;\n    }\n    return levelDetails.edge + levelDetails.age;\n  }\n\n  private computeLatency(): number | null {\n    const liveEdge = this.estimateLiveEdge();\n    if (liveEdge === null) {\n      return null;\n    }\n    return liveEdge - this.currentTime;\n  }\n}\n","/*\n * Level Controller\n */\n\nimport {\n  ManifestLoadedData,\n  ManifestParsedData,\n  LevelLoadedData,\n  TrackSwitchedData,\n  FragLoadedData,\n  ErrorData,\n  LevelSwitchingData,\n} from '../types/events';\nimport { HdcpLevel, HdcpLevels, Level } from '../types/level';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { isCodecSupportedInMp4 } from '../utils/codecs';\nimport { addGroupId, assignTrackIdsByGroup } from './level-helper';\nimport BasePlaylistController from './base-playlist-controller';\nimport { PlaylistContextType, PlaylistLevelType } from '../types/loader';\nimport type Hls from '../hls';\nimport type { HlsUrlParameters, LevelParsed } from '../types/level';\nimport type { MediaPlaylist } from '../types/media-playlist';\n\nconst chromeOrFirefox: boolean = /chrome|firefox/.test(\n  navigator.userAgent.toLowerCase()\n);\n\nexport default class LevelController extends BasePlaylistController {\n  private _levels: Level[] = [];\n  private _firstLevel: number = -1;\n  private _startLevel?: number;\n  private currentLevelIndex: number = -1;\n  private manualLevelIndex: number = -1;\n\n  public onParsedComplete!: Function;\n\n  constructor(hls: Hls) {\n    super(hls, '[level-controller]');\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  public destroy() {\n    this._unregisterListeners();\n    this.manualLevelIndex = -1;\n    this._levels.length = 0;\n    super.destroy();\n  }\n\n  public startLoad(): void {\n    const levels = this._levels;\n\n    // clean up live level details to force reload them, and reset load errors\n    levels.forEach((level) => {\n      level.loadError = 0;\n    });\n\n    super.startLoad();\n  }\n\n  protected onManifestLoaded(\n    event: Events.MANIFEST_LOADED,\n    data: ManifestLoadedData\n  ): void {\n    let levels: Level[] = [];\n    let audioTracks: MediaPlaylist[] = [];\n    let subtitleTracks: MediaPlaylist[] = [];\n    let bitrateStart: number | undefined;\n    const levelSet: { [key: string]: Level } = {};\n    let levelFromSet: Level;\n    let resolutionFound = false;\n    let videoCodecFound = false;\n    let audioCodecFound = false;\n\n    // regroup redundant levels together\n    data.levels.forEach((levelParsed: LevelParsed) => {\n      const attributes = levelParsed.attrs;\n\n      resolutionFound =\n        resolutionFound || !!(levelParsed.width && levelParsed.height);\n      videoCodecFound = videoCodecFound || !!levelParsed.videoCodec;\n      audioCodecFound = audioCodecFound || !!levelParsed.audioCodec;\n\n      // erase audio codec info if browser does not support mp4a.40.34.\n      // demuxer will autodetect codec and fallback to mpeg/audio\n      if (\n        chromeOrFirefox &&\n        levelParsed.audioCodec &&\n        levelParsed.audioCodec.indexOf('mp4a.40.34') !== -1\n      ) {\n        levelParsed.audioCodec = undefined;\n      }\n\n      const levelKey = `${levelParsed.bitrate}-${levelParsed.attrs.RESOLUTION}-${levelParsed.attrs.CODECS}`;\n      levelFromSet = levelSet[levelKey];\n\n      if (!levelFromSet) {\n        levelFromSet = new Level(levelParsed);\n        levelSet[levelKey] = levelFromSet;\n        levels.push(levelFromSet);\n      } else {\n        levelFromSet.url.push(levelParsed.url);\n      }\n\n      if (attributes) {\n        if (attributes.AUDIO) {\n          addGroupId(levelFromSet, 'audio', attributes.AUDIO);\n        }\n        if (attributes.SUBTITLES) {\n          addGroupId(levelFromSet, 'text', attributes.SUBTITLES);\n        }\n      }\n    });\n\n    // remove audio-only level if we also have levels with video codecs or RESOLUTION signalled\n    if ((resolutionFound || videoCodecFound) && audioCodecFound) {\n      levels = levels.filter(\n        ({ videoCodec, width, height }) => !!videoCodec || !!(width && height)\n      );\n    }\n\n    // only keep levels with supported audio/video codecs\n    levels = levels.filter(({ audioCodec, videoCodec }) => {\n      return (\n        (!audioCodec || isCodecSupportedInMp4(audioCodec, 'audio')) &&\n        (!videoCodec || isCodecSupportedInMp4(videoCodec, 'video'))\n      );\n    });\n\n    if (data.audioTracks) {\n      audioTracks = data.audioTracks.filter(\n        (track) =>\n          !track.audioCodec || isCodecSupportedInMp4(track.audioCodec, 'audio')\n      );\n      // Assign ids after filtering as array indices by group-id\n      assignTrackIdsByGroup(audioTracks);\n    }\n\n    if (data.subtitles) {\n      subtitleTracks = data.subtitles;\n      assignTrackIdsByGroup(subtitleTracks);\n    }\n\n    if (levels.length > 0) {\n      // start bitrate is the first bitrate of the manifest\n      bitrateStart = levels[0].bitrate;\n      // sort levels from lowest to highest\n      levels.sort((a, b) => {\n        if (a.attrs['HDCP-LEVEL'] !== b.attrs['HDCP-LEVEL']) {\n          return (a.attrs['HDCP-LEVEL'] || '') > (b.attrs['HDCP-LEVEL'] || '')\n            ? 1\n            : -1;\n        }\n        if (a.bitrate !== b.bitrate) {\n          return a.bitrate - b.bitrate;\n        }\n        if (a.attrs.SCORE !== b.attrs.SCORE) {\n          return (\n            a.attrs.decimalFloatingPoint('SCORE') -\n            b.attrs.decimalFloatingPoint('SCORE')\n          );\n        }\n        if (resolutionFound && a.height !== b.height) {\n          return a.height - b.height;\n        }\n        return 0;\n      });\n      this._levels = levels;\n      // find index of first level in sorted levels\n      for (let i = 0; i < levels.length; i++) {\n        if (levels[i].bitrate === bitrateStart) {\n          this._firstLevel = i;\n          this.log(\n            `manifest loaded, ${levels.length} level(s) found, first bitrate: ${bitrateStart}`\n          );\n          break;\n        }\n      }\n\n      // Audio is only alternate if manifest include a URI along with the audio group tag,\n      // and this is not an audio-only stream where levels contain audio-only\n      const audioOnly = audioCodecFound && !videoCodecFound;\n      const edata: ManifestParsedData = {\n        levels,\n        audioTracks,\n        subtitleTracks,\n        sessionData: data.sessionData,\n        sessionKeys: data.sessionKeys,\n        firstLevel: this._firstLevel,\n        stats: data.stats,\n        audio: audioCodecFound,\n        video: videoCodecFound,\n        altAudio: !audioOnly && audioTracks.some((t) => !!t.url),\n      };\n      this.hls.trigger(Events.MANIFEST_PARSED, edata);\n\n      // Initiate loading after all controllers have received MANIFEST_PARSED\n      if (this.hls.config.autoStartLoad || this.hls.forceStartLoad) {\n        this.hls.startLoad(this.hls.config.startPosition);\n      }\n    } else {\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,\n        fatal: true,\n        url: data.url,\n        reason: 'no level with compatible codecs found in manifest',\n      });\n    }\n  }\n\n  get levels(): Level[] | null {\n    if (this._levels.length === 0) {\n      return null;\n    }\n    return this._levels;\n  }\n\n  get level(): number {\n    return this.currentLevelIndex;\n  }\n\n  set level(newLevel: number) {\n    const levels = this._levels;\n    if (levels.length === 0) {\n      return;\n    }\n    if (this.currentLevelIndex === newLevel && levels[newLevel]?.details) {\n      return;\n    }\n    // check if level idx is valid\n    if (newLevel < 0 || newLevel >= levels.length) {\n      // invalid level id given, trigger error\n      const fatal = newLevel < 0;\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.OTHER_ERROR,\n        details: ErrorDetails.LEVEL_SWITCH_ERROR,\n        level: newLevel,\n        fatal,\n        reason: 'invalid level idx',\n      });\n      if (fatal) {\n        return;\n      }\n      newLevel = Math.min(newLevel, levels.length - 1);\n    }\n\n    // stopping live reloading timer if any\n    this.clearTimer();\n\n    const lastLevelIndex = this.currentLevelIndex;\n    const lastLevel = levels[lastLevelIndex];\n    const level = levels[newLevel];\n    this.log(`switching to level ${newLevel} from ${lastLevelIndex}`);\n    this.currentLevelIndex = newLevel;\n\n    const levelSwitchingData: LevelSwitchingData = Object.assign({}, level, {\n      level: newLevel,\n      maxBitrate: level.maxBitrate,\n      uri: level.uri,\n      urlId: level.urlId,\n    });\n    // @ts-ignore\n    delete levelSwitchingData._urlId;\n    this.hls.trigger(Events.LEVEL_SWITCHING, levelSwitchingData);\n    // check if we need to load playlist for this level\n    const levelDetails = level.details;\n    if (!levelDetails || levelDetails.live) {\n      // level not retrieved yet, or live playlist we need to (re)load it\n      const hlsUrlParameters = this.switchParams(level.uri, lastLevel?.details);\n      this.loadPlaylist(hlsUrlParameters);\n    }\n  }\n\n  get manualLevel(): number {\n    return this.manualLevelIndex;\n  }\n\n  set manualLevel(newLevel) {\n    this.manualLevelIndex = newLevel;\n    if (this._startLevel === undefined) {\n      this._startLevel = newLevel;\n    }\n\n    if (newLevel !== -1) {\n      this.level = newLevel;\n    }\n  }\n\n  get firstLevel(): number {\n    return this._firstLevel;\n  }\n\n  set firstLevel(newLevel) {\n    this._firstLevel = newLevel;\n  }\n\n  get startLevel() {\n    // hls.startLevel takes precedence over config.startLevel\n    // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)\n    if (this._startLevel === undefined) {\n      const configStartLevel = this.hls.config.startLevel;\n      if (configStartLevel !== undefined) {\n        return configStartLevel;\n      } else {\n        return this._firstLevel;\n      }\n    } else {\n      return this._startLevel;\n    }\n  }\n\n  set startLevel(newLevel) {\n    this._startLevel = newLevel;\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData) {\n    super.onError(event, data);\n    if (data.fatal) {\n      return;\n    }\n\n    // Switch to redundant level when track fails to load\n    const context = data.context;\n    const level = this._levels[this.currentLevelIndex];\n    if (\n      context &&\n      ((context.type === PlaylistContextType.AUDIO_TRACK &&\n        level.audioGroupIds &&\n        context.groupId === level.audioGroupIds[level.urlId]) ||\n        (context.type === PlaylistContextType.SUBTITLE_TRACK &&\n          level.textGroupIds &&\n          context.groupId === level.textGroupIds[level.urlId]))\n    ) {\n      this.redundantFailover(this.currentLevelIndex);\n      return;\n    }\n\n    let levelError = false;\n    let levelSwitch = true;\n    let levelIndex;\n\n    // try to recover not fatal errors\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        if (data.frag) {\n          // Share fragment error count accross media options (main, audio, subs)\n          // This allows for level based rendition switching when media option assets fail\n          const variantLevelIndex =\n            data.frag.type === PlaylistLevelType.MAIN\n              ? data.frag.level\n              : this.currentLevelIndex;\n          const level = this._levels[variantLevelIndex];\n          // Set levelIndex when we're out of fragment retries\n          if (level) {\n            level.fragmentError++;\n            if (level.fragmentError > this.hls.config.fragLoadingMaxRetry) {\n              levelIndex = variantLevelIndex;\n            }\n          } else {\n            levelIndex = variantLevelIndex;\n          }\n        }\n        break;\n      case ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED: {\n        const restrictedHdcpLevel = level.attrs['HDCP-LEVEL'];\n        if (restrictedHdcpLevel) {\n          this.hls.maxHdcpLevel =\n            HdcpLevels[\n              HdcpLevels.indexOf(restrictedHdcpLevel as HdcpLevel) - 1\n            ];\n          this.warn(\n            `Restricting playback to HDCP-LEVEL of \"${this.hls.maxHdcpLevel}\" or lower`\n          );\n        }\n      }\n      // eslint-disable-next-line no-fallthrough\n      case ErrorDetails.FRAG_PARSING_ERROR:\n      case ErrorDetails.KEY_SYSTEM_NO_SESSION:\n        levelIndex =\n          data.frag?.type === PlaylistLevelType.MAIN\n            ? data.frag.level\n            : this.currentLevelIndex;\n        // Do not retry level. Escalate to fatal if switching levels fails.\n        data.levelRetry = false;\n        break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        // Do not perform level switch if an error occurred using delivery directives\n        // Attempt to reload level without directives first\n        if (context) {\n          if (context.deliveryDirectives) {\n            levelSwitch = false;\n          }\n          levelIndex = context.level;\n        }\n        levelError = true;\n        break;\n      case ErrorDetails.REMUX_ALLOC_ERROR:\n        levelIndex = data.level ?? this.currentLevelIndex;\n        levelError = true;\n        break;\n    }\n\n    if (levelIndex !== undefined) {\n      this.recoverLevel(data, levelIndex, levelError, levelSwitch);\n    }\n  }\n\n  /**\n   * Switch to a redundant stream if any available.\n   * If redundant stream is not available, emergency switch down if ABR mode is enabled.\n   */\n  private recoverLevel(\n    errorEvent: ErrorData,\n    levelIndex: number,\n    levelError: boolean,\n    levelSwitch: boolean\n  ): void {\n    const { details: errorDetails } = errorEvent;\n    const level = this._levels[levelIndex];\n\n    level.loadError++;\n\n    if (levelError) {\n      const retrying = this.retryLoadingOrFail(errorEvent);\n      if (retrying) {\n        // boolean used to inform stream controller not to switch back to IDLE on non fatal error\n        errorEvent.levelRetry = true;\n      } else {\n        this.currentLevelIndex = -1;\n        return;\n      }\n    }\n\n    if (levelSwitch) {\n      const redundantLevels = level.url.length;\n      // Try redundant fail-over until level.loadError reaches redundantLevels\n      if (redundantLevels > 1 && level.loadError < redundantLevels) {\n        errorEvent.levelRetry = true;\n        this.redundantFailover(levelIndex);\n      } else if (this.manualLevelIndex === -1) {\n        // Search for next level to retry\n        let nextLevel = -1;\n        const levels = this._levels;\n        for (let i = levels.length; i--; ) {\n          const candidate = (i + this.currentLevelIndex) % levels.length;\n          if (\n            candidate !== this.currentLevelIndex &&\n            levels[candidate].loadError === 0\n          ) {\n            nextLevel = candidate;\n            break;\n          }\n        }\n        if (nextLevel > -1 && this.currentLevelIndex !== nextLevel) {\n          this.warn(`${errorDetails}: switch to ${nextLevel}`);\n          errorEvent.levelRetry = true;\n          this.hls.nextAutoLevel = nextLevel;\n        } else if (errorEvent.levelRetry === false) {\n          // No levels to switch to and no more retries\n          errorEvent.fatal = true;\n        }\n      }\n    }\n  }\n\n  private redundantFailover(levelIndex: number) {\n    const level = this._levels[levelIndex];\n    const redundantLevels = level.url.length;\n    if (redundantLevels > 1) {\n      // Update the url id of all levels so that we stay on the same set of variants when level switching\n      const newUrlId = (level.urlId + 1) % redundantLevels;\n      this.warn(`Switching to redundant URL-id ${newUrlId}`);\n      this._levels.forEach((level) => {\n        level.urlId = newUrlId;\n      });\n      this.level = levelIndex;\n    }\n  }\n\n  // reset errors on the successful load of a fragment\n  protected onFragLoaded(event: Events.FRAG_LOADED, { frag }: FragLoadedData) {\n    if (frag !== undefined && frag.type === PlaylistLevelType.MAIN) {\n      const level = this._levels[frag.level];\n      if (level !== undefined) {\n        level.fragmentError = 0;\n        level.loadError = 0;\n      }\n    }\n  }\n\n  protected onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const { level, details } = data;\n    const curLevel = this._levels[level];\n\n    if (!curLevel) {\n      this.warn(`Invalid level index ${level}`);\n      if (data.deliveryDirectives?.skip) {\n        details.deltaUpdateFailed = true;\n      }\n      return;\n    }\n\n    // only process level loaded events matching with expected level\n    if (level === this.currentLevelIndex) {\n      // reset level load error counter on successful level loaded only if there is no issues with fragments\n      if (curLevel.fragmentError === 0) {\n        curLevel.loadError = 0;\n        this.retryCount = 0;\n      }\n      this.playlistLoaded(level, data, curLevel.details);\n    } else if (data.deliveryDirectives?.skip) {\n      // received a delta playlist update that cannot be merged\n      details.deltaUpdateFailed = true;\n    }\n  }\n\n  protected onAudioTrackSwitched(\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: TrackSwitchedData\n  ) {\n    const currentLevel = this.hls.levels[this.currentLevelIndex];\n    if (!currentLevel) {\n      return;\n    }\n\n    if (currentLevel.audioGroupIds) {\n      let urlId = -1;\n      const audioGroupId = this.hls.audioTracks[data.id].groupId;\n      for (let i = 0; i < currentLevel.audioGroupIds.length; i++) {\n        if (currentLevel.audioGroupIds[i] === audioGroupId) {\n          urlId = i;\n          break;\n        }\n      }\n\n      if (urlId !== currentLevel.urlId) {\n        currentLevel.urlId = urlId;\n        this.startLoad();\n      }\n    }\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters) {\n    super.loadPlaylist();\n    const level = this.currentLevelIndex;\n    const currentLevel = this._levels[level];\n\n    if (this.canLoad && currentLevel && currentLevel.url.length > 0) {\n      const id = currentLevel.urlId;\n      let url = currentLevel.url[id];\n      if (hlsUrlParameters) {\n        try {\n          url = hlsUrlParameters.addDirectives(url);\n        } catch (error) {\n          this.warn(\n            `Could not construct new URL with HLS Delivery Directives: ${error}`\n          );\n        }\n      }\n\n      this.log(\n        `Attempt loading level index ${level}${\n          hlsUrlParameters?.msn !== undefined\n            ? ' at sn ' +\n              hlsUrlParameters.msn +\n              ' part ' +\n              hlsUrlParameters.part\n            : ''\n        } with URL-id ${id} ${url}`\n      );\n\n      // console.log('Current audio track group ID:', this.hls.audioTracks[this.hls.audioTrack].groupId);\n      // console.log('New video quality level audio group id:', levelObject.attrs.AUDIO, level);\n      this.clearTimer();\n      this.hls.trigger(Events.LEVEL_LOADING, {\n        url,\n        level,\n        id,\n        deliveryDirectives: hlsUrlParameters || null,\n      });\n    }\n  }\n\n  get nextLoadLevel() {\n    if (this.manualLevelIndex !== -1) {\n      return this.manualLevelIndex;\n    } else {\n      return this.hls.nextAutoLevel;\n    }\n  }\n\n  set nextLoadLevel(nextLevel) {\n    this.level = nextLevel;\n    if (this.manualLevelIndex === -1) {\n      this.hls.nextAutoLevel = nextLevel;\n    }\n  }\n\n  removeLevel(levelIndex, urlId) {\n    const filterLevelAndGroupByIdIndex = (url, id) => id !== urlId;\n    const levels = this._levels\n      .filter((level, index) => {\n        if (index !== levelIndex) {\n          return true;\n        }\n\n        if (level.url.length > 1 && urlId !== undefined) {\n          level.url = level.url.filter(filterLevelAndGroupByIdIndex);\n          if (level.audioGroupIds) {\n            level.audioGroupIds = level.audioGroupIds.filter(\n              filterLevelAndGroupByIdIndex\n            );\n          }\n          if (level.textGroupIds) {\n            level.textGroupIds = level.textGroupIds.filter(\n              filterLevelAndGroupByIdIndex\n            );\n          }\n          level.urlId = 0;\n          return true;\n        }\n        return false;\n      })\n      .map((level, index) => {\n        const { details } = level;\n        if (details?.fragments) {\n          details.fragments.forEach((fragment) => {\n            fragment.level = index;\n          });\n        }\n        return level;\n      });\n    this._levels = levels;\n\n    this.hls.trigger(Events.LEVELS_UPDATED, { levels });\n  }\n}\n","/**\n * @module LevelHelper\n * Providing methods dealing with playlist sliding and drift\n * */\n\nimport { logger } from '../utils/logger';\nimport { Fragment, Part } from '../loader/fragment';\nimport { LevelDetails } from '../loader/level-details';\nimport type { Level } from '../types/level';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport { DateRange } from '../loader/date-range';\n\ntype FragmentIntersection = (oldFrag: Fragment, newFrag: Fragment) => void;\ntype PartIntersection = (oldPart: Part, newPart: Part) => void;\n\nexport function addGroupId(level: Level, type: string, id: string): void {\n  switch (type) {\n    case 'audio':\n      if (!level.audioGroupIds) {\n        level.audioGroupIds = [];\n      }\n      level.audioGroupIds.push(id);\n      break;\n    case 'text':\n      if (!level.textGroupIds) {\n        level.textGroupIds = [];\n      }\n      level.textGroupIds.push(id);\n      break;\n  }\n}\n\nexport function assignTrackIdsByGroup(tracks: MediaPlaylist[]): void {\n  const groups = {};\n  tracks.forEach((track) => {\n    const groupId = track.groupId || '';\n    track.id = groups[groupId] = groups[groupId] || 0;\n    groups[groupId]++;\n  });\n}\n\nexport function updatePTS(\n  fragments: Fragment[],\n  fromIdx: number,\n  toIdx: number\n): void {\n  const fragFrom = fragments[fromIdx];\n  const fragTo = fragments[toIdx];\n  updateFromToPTS(fragFrom, fragTo);\n}\n\nfunction updateFromToPTS(fragFrom: Fragment, fragTo: Fragment) {\n  const fragToPTS = fragTo.startPTS as number;\n  // if we know startPTS[toIdx]\n  if (Number.isFinite(fragToPTS)) {\n    // update fragment duration.\n    // it helps to fix drifts between playlist reported duration and fragment real duration\n    let duration: number = 0;\n    let frag: Fragment;\n    if (fragTo.sn > fragFrom.sn) {\n      duration = fragToPTS - fragFrom.start;\n      frag = fragFrom;\n    } else {\n      duration = fragFrom.start - fragToPTS;\n      frag = fragTo;\n    }\n    // TODO? Drift can go either way, or the playlist could be completely accurate\n    // console.assert(duration > 0,\n    //   `duration of ${duration} computed for frag ${frag.sn}, level ${frag.level}, there should be some duration drift between playlist and fragment!`);\n    if (frag.duration !== duration) {\n      frag.duration = duration;\n    }\n    // we dont know startPTS[toIdx]\n  } else if (fragTo.sn > fragFrom.sn) {\n    const contiguous = fragFrom.cc === fragTo.cc;\n    // TODO: With part-loading end/durations we need to confirm the whole fragment is loaded before using (or setting) minEndPTS\n    if (contiguous && fragFrom.minEndPTS) {\n      fragTo.start = fragFrom.start + (fragFrom.minEndPTS - fragFrom.start);\n    } else {\n      fragTo.start = fragFrom.start + fragFrom.duration;\n    }\n  } else {\n    fragTo.start = Math.max(fragFrom.start - fragTo.duration, 0);\n  }\n}\n\nexport function updateFragPTSDTS(\n  details: LevelDetails | undefined,\n  frag: Fragment,\n  startPTS: number,\n  endPTS: number,\n  startDTS: number,\n  endDTS: number\n): number {\n  const parsedMediaDuration = endPTS - startPTS;\n  if (parsedMediaDuration <= 0) {\n    logger.warn('Fragment should have a positive duration', frag);\n    endPTS = startPTS + frag.duration;\n    endDTS = startDTS + frag.duration;\n  }\n  let maxStartPTS = startPTS;\n  let minEndPTS = endPTS;\n  const fragStartPts = frag.startPTS as number;\n  const fragEndPts = frag.endPTS as number;\n  if (Number.isFinite(fragStartPts)) {\n    // delta PTS between audio and video\n    const deltaPTS = Math.abs(fragStartPts - startPTS);\n    if (!Number.isFinite(frag.deltaPTS as number)) {\n      frag.deltaPTS = deltaPTS;\n    } else {\n      frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS as number);\n    }\n\n    maxStartPTS = Math.max(startPTS, fragStartPts);\n    startPTS = Math.min(startPTS, fragStartPts);\n    startDTS = Math.min(startDTS, frag.startDTS);\n\n    minEndPTS = Math.min(endPTS, fragEndPts);\n    endPTS = Math.max(endPTS, fragEndPts);\n    endDTS = Math.max(endDTS, frag.endDTS);\n  }\n  frag.duration = endPTS - startPTS;\n\n  const drift = startPTS - frag.start;\n  frag.start = frag.startPTS = startPTS;\n  frag.maxStartPTS = maxStartPTS;\n  frag.startDTS = startDTS;\n  frag.endPTS = endPTS;\n  frag.minEndPTS = minEndPTS;\n  frag.endDTS = endDTS;\n\n  const sn = frag.sn as number; // 'initSegment'\n  // exit if sn out of range\n  if (!details || sn < details.startSN || sn > details.endSN) {\n    return 0;\n  }\n  let i;\n  const fragIdx = sn - details.startSN;\n  const fragments = details.fragments;\n  // update frag reference in fragments array\n  // rationale is that fragments array might not contain this frag object.\n  // this will happen if playlist has been refreshed between frag loading and call to updateFragPTSDTS()\n  // if we don't update frag, we won't be able to propagate PTS info on the playlist\n  // resulting in invalid sliding computation\n  fragments[fragIdx] = frag;\n  // adjust fragment PTS/duration from seqnum-1 to frag 0\n  for (i = fragIdx; i > 0; i--) {\n    updateFromToPTS(fragments[i], fragments[i - 1]);\n  }\n\n  // adjust fragment PTS/duration from seqnum to last frag\n  for (i = fragIdx; i < fragments.length - 1; i++) {\n    updateFromToPTS(fragments[i], fragments[i + 1]);\n  }\n  if (details.fragmentHint) {\n    updateFromToPTS(fragments[fragments.length - 1], details.fragmentHint);\n  }\n\n  details.PTSKnown = details.alignedSliding = true;\n  return drift;\n}\n\nexport function mergeDetails(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails\n): void {\n  // Track the last initSegment processed. Initialize it to the last one on the timeline.\n  let currentInitSegment: Fragment | null = null;\n  const oldFragments = oldDetails.fragments;\n  for (let i = oldFragments.length - 1; i >= 0; i--) {\n    const oldInit = oldFragments[i].initSegment;\n    if (oldInit) {\n      currentInitSegment = oldInit;\n      break;\n    }\n  }\n\n  if (oldDetails.fragmentHint) {\n    // prevent PTS and duration from being adjusted on the next hint\n    delete oldDetails.fragmentHint.endPTS;\n  }\n  // check if old/new playlists have fragments in common\n  // loop through overlapping SN and update startPTS , cc, and duration if any found\n  let ccOffset = 0;\n  let PTSFrag;\n  mapFragmentIntersection(\n    oldDetails,\n    newDetails,\n    (oldFrag: Fragment, newFrag: Fragment) => {\n      if (oldFrag.relurl) {\n        // Do not compare CC if the old fragment has no url. This is a level.fragmentHint used by LL-HLS parts.\n        // It maybe be off by 1 if it was created before any parts or discontinuity tags were appended to the end\n        // of the playlist.\n        ccOffset = oldFrag.cc - newFrag.cc;\n      }\n      if (\n        Number.isFinite(oldFrag.startPTS) &&\n        Number.isFinite(oldFrag.endPTS)\n      ) {\n        newFrag.start = newFrag.startPTS = oldFrag.startPTS as number;\n        newFrag.startDTS = oldFrag.startDTS;\n        newFrag.appendedPTS = oldFrag.appendedPTS;\n        newFrag.maxStartPTS = oldFrag.maxStartPTS;\n\n        newFrag.endPTS = oldFrag.endPTS;\n        newFrag.endDTS = oldFrag.endDTS;\n        newFrag.minEndPTS = oldFrag.minEndPTS;\n        newFrag.duration =\n          (oldFrag.endPTS as number) - (oldFrag.startPTS as number);\n\n        if (newFrag.duration) {\n          PTSFrag = newFrag;\n        }\n\n        // PTS is known when any segment has startPTS and endPTS\n        newDetails.PTSKnown = newDetails.alignedSliding = true;\n      }\n      newFrag.elementaryStreams = oldFrag.elementaryStreams;\n      newFrag.loader = oldFrag.loader;\n      newFrag.stats = oldFrag.stats;\n      newFrag.urlId = oldFrag.urlId;\n      if (oldFrag.initSegment) {\n        newFrag.initSegment = oldFrag.initSegment;\n        currentInitSegment = oldFrag.initSegment;\n      }\n    }\n  );\n\n  if (currentInitSegment) {\n    const fragmentsToCheck = newDetails.fragmentHint\n      ? newDetails.fragments.concat(newDetails.fragmentHint)\n      : newDetails.fragments;\n    fragmentsToCheck.forEach((frag) => {\n      if (\n        !frag.initSegment ||\n        frag.initSegment.relurl === currentInitSegment?.relurl\n      ) {\n        frag.initSegment = currentInitSegment;\n      }\n    });\n  }\n\n  if (newDetails.skippedSegments) {\n    newDetails.deltaUpdateFailed = newDetails.fragments.some((frag) => !frag);\n    if (newDetails.deltaUpdateFailed) {\n      logger.warn(\n        '[level-helper] Previous playlist missing segments skipped in delta playlist'\n      );\n      for (let i = newDetails.skippedSegments; i--; ) {\n        newDetails.fragments.shift();\n      }\n      newDetails.startSN = newDetails.fragments[0].sn as number;\n      newDetails.startCC = newDetails.fragments[0].cc;\n    } else if (newDetails.canSkipDateRanges) {\n      newDetails.dateRanges = mergeDateRanges(\n        oldDetails.dateRanges,\n        newDetails.dateRanges,\n        newDetails.recentlyRemovedDateranges\n      );\n    }\n  }\n\n  const newFragments = newDetails.fragments;\n  if (ccOffset) {\n    logger.warn('discontinuity sliding from playlist, take drift into account');\n    for (let i = 0; i < newFragments.length; i++) {\n      newFragments[i].cc += ccOffset;\n    }\n  }\n  if (newDetails.skippedSegments) {\n    newDetails.startCC = newDetails.fragments[0].cc;\n  }\n\n  // Merge parts\n  mapPartIntersection(\n    oldDetails.partList,\n    newDetails.partList,\n    (oldPart: Part, newPart: Part) => {\n      newPart.elementaryStreams = oldPart.elementaryStreams;\n      newPart.stats = oldPart.stats;\n    }\n  );\n\n  // if at least one fragment contains PTS info, recompute PTS information for all fragments\n  if (PTSFrag) {\n    updateFragPTSDTS(\n      newDetails,\n      PTSFrag,\n      PTSFrag.startPTS,\n      PTSFrag.endPTS,\n      PTSFrag.startDTS,\n      PTSFrag.endDTS\n    );\n  } else {\n    // ensure that delta is within oldFragments range\n    // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])\n    // in that case we also need to adjust start offset of all fragments\n    adjustSliding(oldDetails, newDetails);\n  }\n\n  if (newFragments.length) {\n    newDetails.totalduration = newDetails.edge - newFragments[0].start;\n  }\n\n  newDetails.driftStartTime = oldDetails.driftStartTime;\n  newDetails.driftStart = oldDetails.driftStart;\n  const advancedDateTime = newDetails.advancedDateTime;\n  if (newDetails.advanced && advancedDateTime) {\n    const edge = newDetails.edge;\n    if (!newDetails.driftStart) {\n      newDetails.driftStartTime = advancedDateTime;\n      newDetails.driftStart = edge;\n    }\n    newDetails.driftEndTime = advancedDateTime;\n    newDetails.driftEnd = edge;\n  } else {\n    newDetails.driftEndTime = oldDetails.driftEndTime;\n    newDetails.driftEnd = oldDetails.driftEnd;\n    newDetails.advancedDateTime = oldDetails.advancedDateTime;\n  }\n}\n\nfunction mergeDateRanges(\n  oldDateRanges: Record<string, DateRange>,\n  deltaDateRanges: Record<string, DateRange>,\n  recentlyRemovedDateranges: string[] | undefined\n): Record<string, DateRange> {\n  const dateRanges = Object.assign({}, oldDateRanges);\n  if (recentlyRemovedDateranges) {\n    recentlyRemovedDateranges.forEach((id) => {\n      delete dateRanges[id];\n    });\n  }\n  Object.keys(deltaDateRanges).forEach((id) => {\n    const dateRange = new DateRange(deltaDateRanges[id].attr, dateRanges[id]);\n    if (dateRange.isValid) {\n      dateRanges[id] = dateRange;\n    } else {\n      logger.warn(\n        `Ignoring invalid Playlist Delta Update DATERANGE tag: \"${JSON.stringify(\n          deltaDateRanges[id].attr\n        )}\"`\n      );\n    }\n  });\n  return dateRanges;\n}\n\nexport function mapPartIntersection(\n  oldParts: Part[] | null,\n  newParts: Part[] | null,\n  intersectionFn: PartIntersection\n) {\n  if (oldParts && newParts) {\n    let delta = 0;\n    for (let i = 0, len = oldParts.length; i <= len; i++) {\n      const oldPart = oldParts[i];\n      const newPart = newParts[i + delta];\n      if (\n        oldPart &&\n        newPart &&\n        oldPart.index === newPart.index &&\n        oldPart.fragment.sn === newPart.fragment.sn\n      ) {\n        intersectionFn(oldPart, newPart);\n      } else {\n        delta--;\n      }\n    }\n  }\n}\n\nexport function mapFragmentIntersection(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails,\n  intersectionFn: FragmentIntersection\n): void {\n  const skippedSegments = newDetails.skippedSegments;\n  const start =\n    Math.max(oldDetails.startSN, newDetails.startSN) - newDetails.startSN;\n  const end =\n    (oldDetails.fragmentHint ? 1 : 0) +\n    (skippedSegments\n      ? newDetails.endSN\n      : Math.min(oldDetails.endSN, newDetails.endSN)) -\n    newDetails.startSN;\n  const delta = newDetails.startSN - oldDetails.startSN;\n  const newFrags = newDetails.fragmentHint\n    ? newDetails.fragments.concat(newDetails.fragmentHint)\n    : newDetails.fragments;\n  const oldFrags = oldDetails.fragmentHint\n    ? oldDetails.fragments.concat(oldDetails.fragmentHint)\n    : oldDetails.fragments;\n\n  for (let i = start; i <= end; i++) {\n    const oldFrag = oldFrags[delta + i];\n    let newFrag = newFrags[i];\n    if (skippedSegments && !newFrag && i < skippedSegments) {\n      // Fill in skipped segments in delta playlist\n      newFrag = newDetails.fragments[i] = oldFrag;\n    }\n    if (oldFrag && newFrag) {\n      intersectionFn(oldFrag, newFrag);\n    }\n  }\n}\n\nexport function adjustSliding(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails\n): void {\n  const delta =\n    newDetails.startSN + newDetails.skippedSegments - oldDetails.startSN;\n  const oldFragments = oldDetails.fragments;\n  if (delta < 0 || delta >= oldFragments.length) {\n    return;\n  }\n  addSliding(newDetails, oldFragments[delta].start);\n}\n\nexport function addSliding(details: LevelDetails, start: number) {\n  if (start) {\n    const fragments = details.fragments;\n    for (let i = details.skippedSegments; i < fragments.length; i++) {\n      fragments[i].start += start;\n    }\n    if (details.fragmentHint) {\n      details.fragmentHint.start += start;\n    }\n  }\n}\n\nexport function computeReloadInterval(\n  newDetails: LevelDetails,\n  distanceToLiveEdgeMs: number = Infinity\n): number {\n  let reloadInterval = 1000 * newDetails.targetduration;\n\n  if (newDetails.updated) {\n    // Use last segment duration when shorter than target duration and near live edge\n    const fragments = newDetails.fragments;\n    const liveEdgeMaxTargetDurations = 4;\n    if (\n      fragments.length &&\n      reloadInterval * liveEdgeMaxTargetDurations > distanceToLiveEdgeMs\n    ) {\n      const lastSegmentDuration =\n        fragments[fragments.length - 1].duration * 1000;\n      if (lastSegmentDuration < reloadInterval) {\n        reloadInterval = lastSegmentDuration;\n      }\n    }\n  } else {\n    // estimate = 'miss half average';\n    // follow HLS Spec, If the client reloads a Playlist file and finds that it has not\n    // changed then it MUST wait for a period of one-half the target\n    // duration before retrying.\n    reloadInterval /= 2;\n  }\n\n  return Math.round(reloadInterval);\n}\n\nexport function getFragmentWithSN(\n  level: Level,\n  sn: number,\n  fragCurrent: Fragment | null\n): Fragment | null {\n  if (!level || !level.details) {\n    return null;\n  }\n  const levelDetails = level.details;\n  let fragment: Fragment | undefined =\n    levelDetails.fragments[sn - levelDetails.startSN];\n  if (fragment) {\n    return fragment;\n  }\n  fragment = levelDetails.fragmentHint;\n  if (fragment && fragment.sn === sn) {\n    return fragment;\n  }\n  if (sn < levelDetails.startSN && fragCurrent && fragCurrent.sn === sn) {\n    return fragCurrent;\n  }\n  return null;\n}\n\nexport function getPartWith(\n  level: Level,\n  sn: number,\n  partIndex: number\n): Part | null {\n  if (!level || !level.details) {\n    return null;\n  }\n  const partList = level.details.partList;\n  if (partList) {\n    for (let i = partList.length; i--; ) {\n      const part = partList[i];\n      if (part.index === partIndex && part.fragment.sn === sn) {\n        return part;\n      }\n    }\n  }\n  return null;\n}\n","import BaseStreamController, { State } from './base-stream-controller';\nimport { changeTypeSupported } from '../is-supported';\nimport { Events } from '../events';\nimport { BufferHelper, BufferInfo } from '../utils/buffer-helper';\nimport { FragmentState } from './fragment-tracker';\nimport { PlaylistLevelType } from '../types/loader';\nimport { ElementaryStreamTypes, Fragment } from '../loader/fragment';\nimport TransmuxerInterface from '../demux/transmuxer-interface';\nimport { ChunkMetadata } from '../types/transmuxer';\nimport GapController from './gap-controller';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { Level } from '../types/level';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type KeyLoader from '../loader/key-loader';\nimport type { TransmuxerResult } from '../types/transmuxer';\nimport type { TrackSet } from '../types/track';\nimport type { SourceBufferName } from '../types/buffer';\nimport type {\n  AudioTrackSwitchedData,\n  AudioTrackSwitchingData,\n  BufferCreatedData,\n  BufferEOSData,\n  BufferFlushedData,\n  ErrorData,\n  FragBufferedData,\n  FragLoadedData,\n  FragParsingMetadataData,\n  FragParsingUserdataData,\n  LevelLoadedData,\n  LevelLoadingData,\n  LevelsUpdatedData,\n  ManifestParsedData,\n  MediaAttachedData,\n} from '../types/events';\n\nconst TICK_INTERVAL = 100; // how often to tick in ms\n\nexport default class StreamController\n  extends BaseStreamController\n  implements NetworkComponentAPI\n{\n  private audioCodecSwap: boolean = false;\n  private gapController: GapController | null = null;\n  private level: number = -1;\n  private _forceStartLoad: boolean = false;\n  private altAudio: boolean = false;\n  private audioOnly: boolean = false;\n  private fragPlaying: Fragment | null = null;\n  private onvplaying: EventListener | null = null;\n  private onvseeked: EventListener | null = null;\n  private fragLastKbps: number = 0;\n  private couldBacktrack: boolean = false;\n  private backtrackFragment: Fragment | null = null;\n  private audioCodecSwitch: boolean = false;\n  private videoBuffer: any | null = null;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader\n  ) {\n    super(hls, fragmentTracker, keyLoader, '[stream-controller]');\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(\n      Events.FRAG_LOAD_EMERGENCY_ABORTED,\n      this.onFragLoadEmergencyAborted,\n      this\n    );\n    hls.on(Events.ERROR, this.onError, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.on(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.on(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.on(Events.LEVELS_UPDATED, this.onLevelsUpdated, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  protected _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(\n      Events.FRAG_LOAD_EMERGENCY_ABORTED,\n      this.onFragLoadEmergencyAborted,\n      this\n    );\n    hls.off(Events.ERROR, this.onError, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.off(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.off(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.off(Events.LEVELS_UPDATED, this.onLevelsUpdated, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  protected onHandlerDestroying() {\n    this._unregisterListeners();\n    this.onMediaDetaching();\n  }\n\n  public startLoad(startPosition: number): void {\n    if (this.levels) {\n      const { lastCurrentTime, hls } = this;\n      this.stopLoad();\n      this.setInterval(TICK_INTERVAL);\n      this.level = -1;\n      this.fragLoadError = 0;\n      if (!this.startFragRequested) {\n        // determine load level\n        let startLevel = hls.startLevel;\n        if (startLevel === -1) {\n          if (hls.config.testBandwidth && this.levels.length > 1) {\n            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\n            startLevel = 0;\n            this.bitrateTest = true;\n          } else {\n            startLevel = hls.nextAutoLevel;\n          }\n        }\n        // set new level to playlist loader : this will trigger start level load\n        // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded\n        this.level = hls.nextLoadLevel = startLevel;\n        this.loadedmetadata = false;\n      }\n      // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime\n      if (lastCurrentTime > 0 && startPosition === -1) {\n        this.log(\n          `Override startPosition with lastCurrentTime @${lastCurrentTime.toFixed(\n            3\n          )}`\n        );\n        startPosition = lastCurrentTime;\n      }\n      this.state = State.IDLE;\n      this.nextLoadPosition =\n        this.startPosition =\n        this.lastCurrentTime =\n          startPosition;\n      this.tick();\n    } else {\n      this._forceStartLoad = true;\n      this.state = State.STOPPED;\n    }\n  }\n\n  public stopLoad() {\n    this._forceStartLoad = false;\n    super.stopLoad();\n  }\n\n  protected doTick() {\n    switch (this.state) {\n      case State.IDLE:\n        this.doTickIdle();\n        break;\n      case State.WAITING_LEVEL: {\n        const { levels, level } = this;\n        const details = levels?.[level]?.details;\n        if (details && (!details.live || this.levelLastLoaded === this.level)) {\n          if (this.waitForCdnTuneIn(details)) {\n            break;\n          }\n          this.state = State.IDLE;\n          break;\n        }\n        break;\n      }\n      case State.FRAG_LOADING_WAITING_RETRY:\n        {\n          const now = self.performance.now();\n          const retryDate = this.retryDate;\n          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n          if (!retryDate || now >= retryDate || this.media?.seeking) {\n            this.log('retryDate reached, switch back to IDLE state');\n            this.resetStartWhenNotLoaded(this.level);\n            this.state = State.IDLE;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    // check buffer\n    // check/update current fragment\n    this.onTickEnd();\n  }\n\n  protected onTickEnd() {\n    super.onTickEnd();\n    this.checkBuffer();\n    this.checkFragmentChanged();\n  }\n\n  private doTickIdle() {\n    const { hls, levelLastLoaded, levels, media } = this;\n    const { config, nextLoadLevel: level } = hls;\n\n    // if start level not parsed yet OR\n    // if video not attached AND start fragment already requested OR start frag prefetch not enabled\n    // exit loop, as we either need more info (level not parsed) or we need media to be attached to load new fragment\n    if (\n      levelLastLoaded === null ||\n      (!media && (this.startFragRequested || !config.startFragPrefetch))\n    ) {\n      return;\n    }\n\n    // If the \"main\" level is audio-only but we are loading an alternate track in the same group, do not load anything\n    if (this.altAudio && this.audioOnly) {\n      return;\n    }\n\n    if (!levels || !levels[level]) {\n      return;\n    }\n\n    const levelInfo = levels[level];\n\n    // if buffer length is less than maxBufLen try to load a new fragment\n\n    const bufferInfo = this.getMainFwdBufferInfo();\n    if (bufferInfo === null) {\n      return;\n    }\n\n    const lastDetails = this.getLevelDetails();\n    if (lastDetails && this._streamEnded(bufferInfo, lastDetails)) {\n      const data: BufferEOSData = {};\n      if (this.altAudio) {\n        data.type = 'video';\n      }\n\n      this.hls.trigger(Events.BUFFER_EOS, data);\n      this.state = State.ENDED;\n      return;\n    }\n\n    // set next load level : this will trigger a playlist load if needed\n    this.level = hls.nextLoadLevel = level;\n\n    const levelDetails = levelInfo.details;\n    // if level info not retrieved yet, switch state and wait for level retrieval\n    // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\n    // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\n    if (\n      !levelDetails ||\n      this.state === State.WAITING_LEVEL ||\n      (levelDetails.live && this.levelLastLoaded !== level)\n    ) {\n      this.level = level;\n      this.state = State.WAITING_LEVEL;\n      return;\n    }\n\n    const bufferLen = bufferInfo.len;\n\n    // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\n    const maxBufLen = this.getMaxBufferLength(levelInfo.maxBitrate);\n\n    // Stay idle if we are still with buffer margins\n    if (bufferLen >= maxBufLen) {\n      return;\n    }\n\n    if (\n      this.backtrackFragment &&\n      this.backtrackFragment.start > bufferInfo.end\n    ) {\n      this.backtrackFragment = null;\n    }\n    const targetBufferTime = this.backtrackFragment\n      ? this.backtrackFragment.start\n      : bufferInfo.end;\n    let frag = this.getNextFragment(targetBufferTime, levelDetails);\n    // Avoid backtracking by loading an earlier segment in streams with segments that do not start with a key frame (flagged by `couldBacktrack`)\n    if (\n      this.couldBacktrack &&\n      !this.fragPrevious &&\n      frag &&\n      frag.sn !== 'initSegment' &&\n      this.fragmentTracker.getState(frag) !== FragmentState.OK\n    ) {\n      const backtrackSn = (this.backtrackFragment ?? frag).sn as number;\n      const fragIdx = backtrackSn - levelDetails.startSN;\n      const backtrackFrag = levelDetails.fragments[fragIdx - 1];\n      if (backtrackFrag && frag.cc === backtrackFrag.cc) {\n        frag = backtrackFrag;\n        this.fragmentTracker.removeFragment(backtrackFrag);\n      }\n    } else if (this.backtrackFragment && bufferInfo.len) {\n      this.backtrackFragment = null;\n    }\n    // Avoid loop loading by using nextLoadPosition set for backtracking\n    if (\n      frag &&\n      this.fragmentTracker.getState(frag) === FragmentState.OK &&\n      this.nextLoadPosition > targetBufferTime\n    ) {\n      // Cleanup the fragment tracker before trying to find the next unbuffered fragment\n      const type =\n        this.audioOnly && !this.altAudio\n          ? ElementaryStreamTypes.AUDIO\n          : ElementaryStreamTypes.VIDEO;\n      const mediaBuffer =\n        (type === ElementaryStreamTypes.VIDEO\n          ? this.videoBuffer\n          : this.mediaBuffer) || this.media;\n      if (mediaBuffer) {\n        this.afterBufferFlushed(mediaBuffer, type, PlaylistLevelType.MAIN);\n      }\n      frag = this.getNextFragment(this.nextLoadPosition, levelDetails);\n    }\n    if (!frag) {\n      return;\n    }\n    if (frag.initSegment && !frag.initSegment.data && !this.bitrateTest) {\n      frag = frag.initSegment;\n    }\n\n    this.loadFragment(frag, levelDetails, targetBufferTime);\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    // Check if fragment is not loaded\n    const fragState = this.fragmentTracker.getState(frag);\n    this.fragCurrent = frag;\n    if (fragState === FragmentState.NOT_LOADED) {\n      if (frag.sn === 'initSegment') {\n        this._loadInitSegment(frag, levelDetails);\n      } else if (this.bitrateTest) {\n        this.log(\n          `Fragment ${frag.sn} of level ${frag.level} is being downloaded to test bitrate and will not be buffered`\n        );\n        this._loadBitrateTestFrag(frag, levelDetails);\n      } else {\n        this.startFragRequested = true;\n        super.loadFragment(frag, levelDetails, targetBufferTime);\n      }\n    } else if (fragState === FragmentState.APPENDING) {\n      // Lower the buffer size and try again\n      if (this.reduceMaxBufferLength(frag.duration)) {\n        this.fragmentTracker.removeFragment(frag);\n      }\n    } else if (this.media?.buffered.length === 0) {\n      // Stop gap for bad tracker / buffer flush behavior\n      this.fragmentTracker.removeAllFragments();\n    }\n  }\n\n  private getAppendedFrag(position): Fragment | null {\n    const fragOrPart = this.fragmentTracker.getAppendedFrag(\n      position,\n      PlaylistLevelType.MAIN\n    );\n    if (fragOrPart && 'fragment' in fragOrPart) {\n      return fragOrPart.fragment;\n    }\n    return fragOrPart;\n  }\n\n  private getBufferedFrag(position) {\n    return this.fragmentTracker.getBufferedFrag(\n      position,\n      PlaylistLevelType.MAIN\n    );\n  }\n\n  private followingBufferedFrag(frag: Fragment | null) {\n    if (frag) {\n      // try to get range of next fragment (500ms after this range)\n      return this.getBufferedFrag(frag.end + 0.5);\n    }\n    return null;\n  }\n\n  /*\n    on immediate level switch :\n     - pause playback if playing\n     - cancel any pending load request\n     - and trigger a buffer flush\n  */\n  public immediateLevelSwitch() {\n    this.abortCurrentFrag();\n    this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * try to switch ASAP without breaking video playback:\n   * in order to ensure smooth but quick level switching,\n   * we need to find the next flushable buffer range\n   * we should take into account new segment fetch time\n   */\n  public nextLevelSwitch() {\n    const { levels, media } = this;\n    // ensure that media is defined and that metadata are available (to retrieve currentTime)\n    if (media?.readyState) {\n      let fetchdelay;\n      const fragPlayingCurrent = this.getAppendedFrag(media.currentTime);\n      if (fragPlayingCurrent && fragPlayingCurrent.start > 1) {\n        // flush buffer preceding current fragment (flush until current fragment start offset)\n        // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\n        this.flushMainBuffer(0, fragPlayingCurrent.start - 1);\n      }\n      if (!media.paused && levels) {\n        // add a safety delay of 1s\n        const nextLevelId = this.hls.nextLoadLevel;\n        const nextLevel = levels[nextLevelId];\n        const fragLastKbps = this.fragLastKbps;\n        if (fragLastKbps && this.fragCurrent) {\n          fetchdelay =\n            (this.fragCurrent.duration * nextLevel.maxBitrate) /\n              (1000 * fragLastKbps) +\n            1;\n        } else {\n          fetchdelay = 0;\n        }\n      } else {\n        fetchdelay = 0;\n      }\n      // this.log('fetchdelay:'+fetchdelay);\n      // find buffer range that will be reached once new fragment will be fetched\n      const bufferedFrag = this.getBufferedFrag(media.currentTime + fetchdelay);\n      if (bufferedFrag) {\n        // we can flush buffer range following this one without stalling playback\n        const nextBufferedFrag = this.followingBufferedFrag(bufferedFrag);\n        if (nextBufferedFrag) {\n          // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\n          this.abortCurrentFrag();\n          // start flush position is in next buffered frag. Leave some padding for non-independent segments and smoother playback.\n          const maxStart = nextBufferedFrag.maxStartPTS\n            ? nextBufferedFrag.maxStartPTS\n            : nextBufferedFrag.start;\n          const fragDuration = nextBufferedFrag.duration;\n          const startPts = Math.max(\n            bufferedFrag.end,\n            maxStart +\n              Math.min(\n                Math.max(\n                  fragDuration - this.config.maxFragLookUpTolerance,\n                  fragDuration * 0.5\n                ),\n                fragDuration * 0.75\n              )\n          );\n          this.flushMainBuffer(startPts, Number.POSITIVE_INFINITY);\n        }\n      }\n    }\n  }\n\n  private abortCurrentFrag() {\n    const fragCurrent = this.fragCurrent;\n    this.fragCurrent = null;\n    this.backtrackFragment = null;\n    if (fragCurrent) {\n      fragCurrent.abortRequests();\n    }\n    switch (this.state) {\n      case State.KEY_LOADING:\n      case State.FRAG_LOADING:\n      case State.FRAG_LOADING_WAITING_RETRY:\n      case State.PARSING:\n      case State.PARSED:\n        this.state = State.IDLE;\n        break;\n    }\n    this.nextLoadPosition = this.getLoadPosition();\n  }\n\n  protected flushMainBuffer(startOffset: number, endOffset: number) {\n    super.flushMainBuffer(\n      startOffset,\n      endOffset,\n      this.altAudio ? 'video' : null\n    );\n  }\n\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) {\n    super.onMediaAttached(event, data);\n    const media = data.media;\n    this.onvplaying = this.onMediaPlaying.bind(this);\n    this.onvseeked = this.onMediaSeeked.bind(this);\n    media.addEventListener('playing', this.onvplaying as EventListener);\n    media.addEventListener('seeked', this.onvseeked as EventListener);\n    this.gapController = new GapController(\n      this.config,\n      media,\n      this.fragmentTracker,\n      this.hls\n    );\n  }\n\n  protected onMediaDetaching() {\n    const { media } = this;\n    if (media && this.onvplaying && this.onvseeked) {\n      media.removeEventListener('playing', this.onvplaying);\n      media.removeEventListener('seeked', this.onvseeked);\n      this.onvplaying = this.onvseeked = null;\n      this.videoBuffer = null;\n    }\n    this.fragPlaying = null;\n    if (this.gapController) {\n      this.gapController.destroy();\n      this.gapController = null;\n    }\n    super.onMediaDetaching();\n  }\n\n  private onMediaPlaying() {\n    // tick to speed up FRAG_CHANGED triggering\n    this.tick();\n  }\n\n  private onMediaSeeked() {\n    const media = this.media;\n    const currentTime = media ? media.currentTime : null;\n    if (Number.isFinite(currentTime)) {\n      this.log(`Media seeked to ${(currentTime as number).toFixed(3)}`);\n    }\n\n    // tick to speed up FRAG_CHANGED triggering\n    this.tick();\n  }\n\n  private onManifestLoading() {\n    // reset buffer on manifest loading\n    this.log('Trigger BUFFER_RESET');\n    this.hls.trigger(Events.BUFFER_RESET, undefined);\n    this.fragmentTracker.removeAllFragments();\n    this.couldBacktrack = false;\n    this.startPosition = this.lastCurrentTime = 0;\n    this.fragPlaying = null;\n    this.backtrackFragment = null;\n  }\n\n  private onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    let aac = false;\n    let heaac = false;\n    let codec;\n    data.levels.forEach((level) => {\n      // detect if we have different kind of audio codecs used amongst playlists\n      codec = level.audioCodec;\n      if (codec) {\n        if (codec.indexOf('mp4a.40.2') !== -1) {\n          aac = true;\n        }\n\n        if (codec.indexOf('mp4a.40.5') !== -1) {\n          heaac = true;\n        }\n      }\n    });\n    this.audioCodecSwitch = aac && heaac && !changeTypeSupported();\n    if (this.audioCodecSwitch) {\n      this.log(\n        'Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC'\n      );\n    }\n\n    this.levels = data.levels;\n    this.startFragRequested = false;\n  }\n\n  private onLevelLoading(event: Events.LEVEL_LOADING, data: LevelLoadingData) {\n    const { levels } = this;\n    if (!levels || this.state !== State.IDLE) {\n      return;\n    }\n    const level = levels[data.level];\n    if (\n      !level.details ||\n      (level.details.live && this.levelLastLoaded !== data.level) ||\n      this.waitForCdnTuneIn(level.details)\n    ) {\n      this.state = State.WAITING_LEVEL;\n    }\n  }\n\n  private onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const { levels } = this;\n    const newLevelId = data.level;\n    const newDetails = data.details;\n    const duration = newDetails.totalduration;\n\n    if (!levels) {\n      this.warn(`Levels were reset while loading level ${newLevelId}`);\n      return;\n    }\n    this.log(\n      `Level ${newLevelId} loaded [${newDetails.startSN},${newDetails.endSN}], cc [${newDetails.startCC}, ${newDetails.endCC}] duration:${duration}`\n    );\n\n    const fragCurrent = this.fragCurrent;\n    if (\n      fragCurrent &&\n      (this.state === State.FRAG_LOADING ||\n        this.state === State.FRAG_LOADING_WAITING_RETRY)\n    ) {\n      if (fragCurrent.level !== data.level && fragCurrent.loader) {\n        this.state = State.IDLE;\n        this.backtrackFragment = null;\n        fragCurrent.abortRequests();\n      }\n    }\n\n    const curLevel = levels[newLevelId];\n    let sliding = 0;\n    if (newDetails.live || curLevel.details?.live) {\n      if (!newDetails.fragments[0]) {\n        newDetails.deltaUpdateFailed = true;\n      }\n      if (newDetails.deltaUpdateFailed) {\n        return;\n      }\n      sliding = this.alignPlaylists(newDetails, curLevel.details);\n    }\n    // override level info\n    curLevel.details = newDetails;\n    this.levelLastLoaded = newLevelId;\n\n    this.hls.trigger(Events.LEVEL_UPDATED, {\n      details: newDetails,\n      level: newLevelId,\n    });\n\n    // only switch back to IDLE state if we were waiting for level to start downloading a new fragment\n    if (this.state === State.WAITING_LEVEL) {\n      if (this.waitForCdnTuneIn(newDetails)) {\n        // Wait for Low-Latency CDN Tune-in\n        return;\n      }\n      this.state = State.IDLE;\n    }\n\n    if (!this.startFragRequested) {\n      this.setStartPosition(newDetails, sliding);\n    } else if (newDetails.live) {\n      this.synchronizeToLiveEdge(newDetails);\n    }\n\n    // trigger handler right now\n    this.tick();\n  }\n\n  protected _handleFragmentLoadProgress(data: FragLoadedData) {\n    const { frag, part, payload } = data;\n    const { levels } = this;\n    if (!levels) {\n      this.warn(\n        `Levels were reset while fragment load was in progress. Fragment ${frag.sn} of level ${frag.level} will not be buffered`\n      );\n      return;\n    }\n    const currentLevel = levels[frag.level];\n    const details = currentLevel.details as LevelDetails;\n    if (!details) {\n      this.warn(\n        `Dropping fragment ${frag.sn} of level ${frag.level} after level details were reset`\n      );\n      return;\n    }\n    const videoCodec = currentLevel.videoCodec;\n\n    // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n    const accurateTimeOffset = details.PTSKnown || !details.live;\n    const initSegmentData = frag.initSegment?.data;\n    const audioCodec = this._getAudioCodec(currentLevel);\n\n    // transmux the MPEG-TS data to ISO-BMFF segments\n    // this.log(`Transmuxing ${frag.sn} of [${details.startSN} ,${details.endSN}],level ${frag.level}, cc ${frag.cc}`);\n    const transmuxer = (this.transmuxer =\n      this.transmuxer ||\n      new TransmuxerInterface(\n        this.hls,\n        PlaylistLevelType.MAIN,\n        this._handleTransmuxComplete.bind(this),\n        this._handleTransmuxerFlush.bind(this)\n      ));\n    const partIndex = part ? part.index : -1;\n    const partial = partIndex !== -1;\n    const chunkMeta = new ChunkMetadata(\n      frag.level,\n      frag.sn as number,\n      frag.stats.chunkCount,\n      payload.byteLength,\n      partIndex,\n      partial\n    );\n    const initPTS = this.initPTS[frag.cc];\n\n    transmuxer.push(\n      payload,\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      frag,\n      part,\n      details.totalduration,\n      accurateTimeOffset,\n      chunkMeta,\n      initPTS\n    );\n  }\n\n  private onAudioTrackSwitching(\n    event: Events.AUDIO_TRACK_SWITCHING,\n    data: AudioTrackSwitchingData\n  ) {\n    // if any URL found on new audio track, it is an alternate audio track\n    const fromAltAudio = this.altAudio;\n    const altAudio = !!data.url;\n    const trackId = data.id;\n    // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered\n    // don't do anything if we switch to alt audio: audio stream controller is handling it.\n    // we will just have to change buffer scheduling on audioTrackSwitched\n    if (!altAudio) {\n      if (this.mediaBuffer !== this.media) {\n        this.log(\n          'Switching on main audio, use media.buffered to schedule main fragment loading'\n        );\n        this.mediaBuffer = this.media;\n        const fragCurrent = this.fragCurrent;\n        // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch\n        if (fragCurrent) {\n          this.log('Switching to main audio track, cancel main fragment load');\n          fragCurrent.abortRequests();\n        }\n        // destroy transmuxer to force init segment generation (following audio switch)\n        this.resetTransmuxer();\n        // switch to IDLE state to load new fragment\n        this.resetLoadingState();\n      } else if (this.audioOnly) {\n        // Reset audio transmuxer so when switching back to main audio we're not still appending where we left off\n        this.resetTransmuxer();\n      }\n      const hls = this.hls;\n      // If switching from alt to main audio, flush all audio and trigger track switched\n      if (fromAltAudio) {\n        hls.trigger(Events.BUFFER_FLUSHING, {\n          startOffset: 0,\n          endOffset: Number.POSITIVE_INFINITY,\n          type: 'audio',\n        });\n      }\n      hls.trigger(Events.AUDIO_TRACK_SWITCHED, {\n        id: trackId,\n      });\n    }\n  }\n\n  private onAudioTrackSwitched(\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: AudioTrackSwitchedData\n  ) {\n    const trackId = data.id;\n    const altAudio = !!this.hls.audioTracks[trackId].url;\n    if (altAudio) {\n      const videoBuffer = this.videoBuffer;\n      // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered\n      if (videoBuffer && this.mediaBuffer !== videoBuffer) {\n        this.log(\n          'Switching on alternate audio, use video.buffered to schedule main fragment loading'\n        );\n        this.mediaBuffer = videoBuffer;\n      }\n    }\n    this.altAudio = altAudio;\n    this.tick();\n  }\n\n  private onBufferCreated(\n    event: Events.BUFFER_CREATED,\n    data: BufferCreatedData\n  ) {\n    const tracks = data.tracks;\n    let mediaTrack;\n    let name;\n    let alternate = false;\n    for (const type in tracks) {\n      const track = tracks[type];\n      if (track.id === 'main') {\n        name = type;\n        mediaTrack = track;\n        // keep video source buffer reference\n        if (type === 'video') {\n          const videoTrack = tracks[type];\n          if (videoTrack) {\n            this.videoBuffer = videoTrack.buffer;\n          }\n        }\n      } else {\n        alternate = true;\n      }\n    }\n    if (alternate && mediaTrack) {\n      this.log(\n        `Alternate track found, use ${name}.buffered to schedule main fragment loading`\n      );\n      this.mediaBuffer = mediaTrack.buffer;\n    } else {\n      this.mediaBuffer = this.media;\n    }\n  }\n\n  private onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    const { frag, part } = data;\n    if (frag && frag.type !== PlaylistLevelType.MAIN) {\n      return;\n    }\n    if (this.fragContextChanged(frag)) {\n      // If a level switch was requested while a fragment was buffering, it will emit the FRAG_BUFFERED event upon completion\n      // Avoid setting state back to IDLE, since that will interfere with a level switch\n      this.warn(\n        `Fragment ${frag.sn}${part ? ' p: ' + part.index : ''} of level ${\n          frag.level\n        } finished buffering, but was aborted. state: ${this.state}`\n      );\n      if (this.state === State.PARSED) {\n        this.state = State.IDLE;\n      }\n      return;\n    }\n    const stats = part ? part.stats : frag.stats;\n    this.fragLastKbps = Math.round(\n      (8 * stats.total) / (stats.buffering.end - stats.loading.first)\n    );\n    if (frag.sn !== 'initSegment') {\n      this.fragPrevious = frag;\n    }\n    this.fragBufferedComplete(frag, part);\n  }\n\n  private onError(event: Events.ERROR, data: ErrorData) {\n    if (data.type === ErrorTypes.KEY_SYSTEM_ERROR) {\n      this.onFragmentOrKeyLoadError(PlaylistLevelType.MAIN, data);\n      return;\n    }\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.FRAG_PARSING_ERROR:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        this.onFragmentOrKeyLoadError(PlaylistLevelType.MAIN, data);\n        break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        if (this.state !== State.ERROR) {\n          if (data.fatal) {\n            // if fatal error, stop processing\n            this.warn(`${data.details}`);\n            this.state = State.ERROR;\n          } else {\n            // in case of non fatal error while loading level, if level controller is not retrying to load level , switch back to IDLE\n            if (!data.levelRetry && this.state === State.WAITING_LEVEL) {\n              this.state = State.IDLE;\n            }\n          }\n        }\n        break;\n      case ErrorDetails.BUFFER_FULL_ERROR:\n        // if in appending state\n        if (\n          data.parent === 'main' &&\n          (this.state === State.PARSING || this.state === State.PARSED)\n        ) {\n          let flushBuffer = true;\n          const bufferedInfo = this.getFwdBufferInfo(\n            this.media,\n            PlaylistLevelType.MAIN\n          );\n          // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n          // reduce max buf len if current position is buffered\n          if (bufferedInfo && bufferedInfo.len > 0.5) {\n            flushBuffer = !this.reduceMaxBufferLength(bufferedInfo.len);\n          }\n          if (flushBuffer) {\n            // current position is not buffered, but browser is still complaining about buffer full error\n            // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708\n            // in that case flush the whole buffer to recover\n            this.warn(\n              'buffer full error also media.currentTime is not buffered, flush main'\n            );\n            // flush main buffer\n            this.immediateLevelSwitch();\n          }\n          this.resetLoadingState();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Checks the health of the buffer and attempts to resolve playback stalls.\n  private checkBuffer() {\n    const { media, gapController } = this;\n    if (!media || !gapController || !media.readyState) {\n      // Exit early if we don't have media or if the media hasn't buffered anything yet (readyState 0)\n      return;\n    }\n\n    if (this.loadedmetadata || !BufferHelper.getBuffered(media).length) {\n      // Resolve gaps using the main buffer, whose ranges are the intersections of the A/V sourcebuffers\n      const activeFrag = this.state !== State.IDLE ? this.fragCurrent : null;\n      gapController.poll(this.lastCurrentTime, activeFrag);\n    }\n\n    this.lastCurrentTime = media.currentTime;\n  }\n\n  private onFragLoadEmergencyAborted() {\n    this.state = State.IDLE;\n    // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n    // in that case, reset startFragRequested flag\n    if (!this.loadedmetadata) {\n      this.startFragRequested = false;\n      this.nextLoadPosition = this.startPosition;\n    }\n    this.tickImmediate();\n  }\n\n  private onBufferFlushed(\n    event: Events.BUFFER_FLUSHED,\n    { type }: BufferFlushedData\n  ) {\n    if (\n      type !== ElementaryStreamTypes.AUDIO ||\n      (this.audioOnly && !this.altAudio)\n    ) {\n      const mediaBuffer =\n        (type === ElementaryStreamTypes.VIDEO\n          ? this.videoBuffer\n          : this.mediaBuffer) || this.media;\n      this.afterBufferFlushed(mediaBuffer, type, PlaylistLevelType.MAIN);\n    }\n  }\n\n  private onLevelsUpdated(\n    event: Events.LEVELS_UPDATED,\n    data: LevelsUpdatedData\n  ) {\n    this.levels = data.levels;\n  }\n\n  public swapAudioCodec() {\n    this.audioCodecSwap = !this.audioCodecSwap;\n  }\n\n  /**\n   * Seeks to the set startPosition if not equal to the mediaElement's current time.\n   */\n  protected seekToStartPos() {\n    const { media } = this;\n    if (!media) {\n      return;\n    }\n    const currentTime = media.currentTime;\n    let startPosition = this.startPosition;\n    // only adjust currentTime if different from startPosition or if startPosition not buffered\n    // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered\n    if (startPosition >= 0 && currentTime < startPosition) {\n      if (media.seeking) {\n        this.log(\n          `could not seek to ${startPosition}, already seeking at ${currentTime}`\n        );\n        return;\n      }\n      const buffered = BufferHelper.getBuffered(media);\n      const bufferStart = buffered.length ? buffered.start(0) : 0;\n      const delta = bufferStart - startPosition;\n      if (\n        delta > 0 &&\n        (delta < this.config.maxBufferHole ||\n          delta < this.config.maxFragLookUpTolerance)\n      ) {\n        this.log(`adjusting start position by ${delta} to match buffer start`);\n        startPosition += delta;\n        this.startPosition = startPosition;\n      }\n      this.log(\n        `seek to target start position ${startPosition} from current time ${currentTime}`\n      );\n      media.currentTime = startPosition;\n    }\n  }\n\n  private _getAudioCodec(currentLevel) {\n    let audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;\n    if (this.audioCodecSwap && audioCodec) {\n      this.log('Swapping audio codec');\n      if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n        audioCodec = 'mp4a.40.2';\n      } else {\n        audioCodec = 'mp4a.40.5';\n      }\n    }\n\n    return audioCodec;\n  }\n\n  private _loadBitrateTestFrag(frag: Fragment, levelDetails: LevelDetails) {\n    frag.bitrateTest = true;\n    this._doFragLoad(frag, levelDetails).then((data) => {\n      const { hls } = this;\n      if (!data || this.fragContextChanged(frag)) {\n        return;\n      }\n      this.fragLoadError = 0;\n      this.state = State.IDLE;\n      this.startFragRequested = false;\n      this.bitrateTest = false;\n      const stats = frag.stats;\n      // Bitrate tests fragments are neither parsed nor buffered\n      stats.parsing.start =\n        stats.parsing.end =\n        stats.buffering.start =\n        stats.buffering.end =\n          self.performance.now();\n      hls.trigger(Events.FRAG_LOADED, data as FragLoadedData);\n      frag.bitrateTest = false;\n    });\n  }\n\n  private _handleTransmuxComplete(transmuxResult: TransmuxerResult) {\n    const id = 'main';\n    const { hls } = this;\n    const { remuxResult, chunkMeta } = transmuxResult;\n\n    const context = this.getCurrentContext(chunkMeta);\n    if (!context) {\n      this.warn(\n        `The loading context changed while buffering fragment ${chunkMeta.sn} of level ${chunkMeta.level}. This chunk will not be buffered.`\n      );\n      this.resetStartWhenNotLoaded(chunkMeta.level);\n      return;\n    }\n    const { frag, part, level } = context;\n    const { video, text, id3, initSegment } = remuxResult;\n    const { details } = level;\n    // The audio-stream-controller handles audio buffering if Hls.js is playing an alternate audio track\n    const audio = this.altAudio ? undefined : remuxResult.audio;\n\n    // Check if the current fragment has been aborted. We check this by first seeing if we're still playing the current level.\n    // If we are, subsequently check if the currently loading fragment (fragCurrent) has changed.\n    if (this.fragContextChanged(frag)) {\n      return;\n    }\n\n    this.state = State.PARSING;\n\n    if (initSegment) {\n      if (initSegment.tracks) {\n        this._bufferInitSegment(level, initSegment.tracks, frag, chunkMeta);\n        hls.trigger(Events.FRAG_PARSING_INIT_SEGMENT, {\n          frag,\n          id,\n          tracks: initSegment.tracks,\n        });\n      }\n\n      // This would be nice if Number.isFinite acted as a typeguard, but it doesn't. See: https://github.com/Microsoft/TypeScript/issues/10038\n      const initPTS = initSegment.initPTS as number;\n      const timescale = initSegment.timescale as number;\n      if (Number.isFinite(initPTS)) {\n        this.initPTS[frag.cc] = initPTS;\n        hls.trigger(Events.INIT_PTS_FOUND, { frag, id, initPTS, timescale });\n      }\n    }\n\n    // Avoid buffering if backtracking this fragment\n    if (video && remuxResult.independent !== false) {\n      if (details) {\n        const { startPTS, endPTS, startDTS, endDTS } = video;\n        if (part) {\n          part.elementaryStreams[video.type] = {\n            startPTS,\n            endPTS,\n            startDTS,\n            endDTS,\n          };\n        } else {\n          if (video.firstKeyFrame && video.independent && chunkMeta.id === 1) {\n            this.couldBacktrack = true;\n          }\n          if (video.dropped && video.independent) {\n            // Backtrack if dropped frames create a gap after currentTime\n\n            const bufferInfo = this.getMainFwdBufferInfo();\n            const targetBufferTime =\n              (bufferInfo ? bufferInfo.end : this.getLoadPosition()) +\n              this.config.maxBufferHole;\n            const startTime = video.firstKeyFramePTS\n              ? video.firstKeyFramePTS\n              : startPTS;\n            if (targetBufferTime < startTime - this.config.maxBufferHole) {\n              this.backtrack(frag);\n              return;\n            }\n            // Set video stream start to fragment start so that truncated samples do not distort the timeline, and mark it partial\n            frag.setElementaryStreamInfo(\n              video.type as ElementaryStreamTypes,\n              frag.start,\n              endPTS,\n              frag.start,\n              endDTS,\n              true\n            );\n          }\n        }\n        frag.setElementaryStreamInfo(\n          video.type as ElementaryStreamTypes,\n          startPTS,\n          endPTS,\n          startDTS,\n          endDTS\n        );\n        if (this.backtrackFragment) {\n          this.backtrackFragment = frag;\n        }\n        this.bufferFragmentData(video, frag, part, chunkMeta);\n      }\n    } else if (remuxResult.independent === false) {\n      this.backtrack(frag);\n      return;\n    }\n\n    if (audio) {\n      const { startPTS, endPTS, startDTS, endDTS } = audio;\n      if (part) {\n        part.elementaryStreams[ElementaryStreamTypes.AUDIO] = {\n          startPTS,\n          endPTS,\n          startDTS,\n          endDTS,\n        };\n      }\n      frag.setElementaryStreamInfo(\n        ElementaryStreamTypes.AUDIO,\n        startPTS,\n        endPTS,\n        startDTS,\n        endDTS\n      );\n      this.bufferFragmentData(audio, frag, part, chunkMeta);\n    }\n\n    if (details && id3?.samples?.length) {\n      const emittedID3: FragParsingMetadataData = {\n        id,\n        frag,\n        details,\n        samples: id3.samples,\n      };\n      hls.trigger(Events.FRAG_PARSING_METADATA, emittedID3);\n    }\n    if (details && text) {\n      const emittedText: FragParsingUserdataData = {\n        id,\n        frag,\n        details,\n        samples: text.samples,\n      };\n      hls.trigger(Events.FRAG_PARSING_USERDATA, emittedText);\n    }\n  }\n\n  private _bufferInitSegment(\n    currentLevel: Level,\n    tracks: TrackSet,\n    frag: Fragment,\n    chunkMeta: ChunkMetadata\n  ) {\n    if (this.state !== State.PARSING) {\n      return;\n    }\n\n    this.audioOnly = !!tracks.audio && !tracks.video;\n\n    // if audio track is expected to come from audio stream controller, discard any coming from main\n    if (this.altAudio && !this.audioOnly) {\n      delete tracks.audio;\n    }\n    // include levelCodec in audio and video tracks\n    const { audio, video, audiovideo } = tracks;\n    if (audio) {\n      let audioCodec = currentLevel.audioCodec;\n      const ua = navigator.userAgent.toLowerCase();\n      if (this.audioCodecSwitch) {\n        if (audioCodec) {\n          if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n            audioCodec = 'mp4a.40.2';\n          } else {\n            audioCodec = 'mp4a.40.5';\n          }\n        }\n        // In the case that AAC and HE-AAC audio codecs are signalled in manifest,\n        // force HE-AAC, as it seems that most browsers prefers it.\n        // don't force HE-AAC if mono stream, or in Firefox\n        if (audio.metadata.channelCount !== 1 && ua.indexOf('firefox') === -1) {\n          audioCodec = 'mp4a.40.5';\n        }\n      }\n      // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise\n      if (ua.indexOf('android') !== -1 && audio.container !== 'audio/mpeg') {\n        // Exclude mpeg audio\n        audioCodec = 'mp4a.40.2';\n        this.log(`Android: force audio codec to ${audioCodec}`);\n      }\n      if (currentLevel.audioCodec && currentLevel.audioCodec !== audioCodec) {\n        this.log(\n          `Swapping manifest audio codec \"${currentLevel.audioCodec}\" for \"${audioCodec}\"`\n        );\n      }\n      audio.levelCodec = audioCodec;\n      audio.id = 'main';\n      this.log(\n        `Init audio buffer, container:${\n          audio.container\n        }, codecs[selected/level/parsed]=[${audioCodec || ''}/${\n          currentLevel.audioCodec || ''\n        }/${audio.codec}]`\n      );\n    }\n    if (video) {\n      video.levelCodec = currentLevel.videoCodec;\n      video.id = 'main';\n      this.log(\n        `Init video buffer, container:${\n          video.container\n        }, codecs[level/parsed]=[${currentLevel.videoCodec || ''}/${\n          video.codec\n        }]`\n      );\n    }\n    if (audiovideo) {\n      this.log(\n        `Init audiovideo buffer, container:${\n          audiovideo.container\n        }, codecs[level/parsed]=[${currentLevel.attrs.CODECS || ''}/${\n          audiovideo.codec\n        }]`\n      );\n    }\n    this.hls.trigger(Events.BUFFER_CODECS, tracks);\n    // loop through tracks that are going to be provided to bufferController\n    Object.keys(tracks).forEach((trackName) => {\n      const track = tracks[trackName];\n      const initSegment = track.initSegment;\n      if (initSegment?.byteLength) {\n        this.hls.trigger(Events.BUFFER_APPENDING, {\n          type: trackName as SourceBufferName,\n          data: initSegment,\n          frag,\n          part: null,\n          chunkMeta,\n          parent: frag.type,\n        });\n      }\n    });\n    // trigger handler right now\n    this.tick();\n  }\n\n  public getMainFwdBufferInfo(): BufferInfo | null {\n    return this.getFwdBufferInfo(\n      this.mediaBuffer ? this.mediaBuffer : this.media,\n      PlaylistLevelType.MAIN\n    );\n  }\n\n  private backtrack(frag: Fragment) {\n    this.couldBacktrack = true;\n    // Causes findFragments to backtrack through fragments to find the keyframe\n    this.backtrackFragment = frag;\n    this.resetTransmuxer();\n    this.flushBufferGap(frag);\n    this.fragmentTracker.removeFragment(frag);\n    this.fragPrevious = null;\n    this.nextLoadPosition = frag.start;\n    this.state = State.IDLE;\n  }\n\n  private checkFragmentChanged() {\n    const video = this.media;\n    let fragPlayingCurrent: Fragment | null = null;\n    if (video && video.readyState > 1 && video.seeking === false) {\n      const currentTime = video.currentTime;\n      /* if video element is in seeked state, currentTime can only increase.\n        (assuming that playback rate is positive ...)\n        As sometimes currentTime jumps back to zero after a\n        media decode error, check this, to avoid seeking back to\n        wrong position after a media decode error\n      */\n\n      if (BufferHelper.isBuffered(video, currentTime)) {\n        fragPlayingCurrent = this.getAppendedFrag(currentTime);\n      } else if (BufferHelper.isBuffered(video, currentTime + 0.1)) {\n        /* ensure that FRAG_CHANGED event is triggered at startup,\n          when first video frame is displayed and playback is paused.\n          add a tolerance of 100ms, in case current position is not buffered,\n          check if current pos+100ms is buffered and use that buffer range\n          for FRAG_CHANGED event reporting */\n        fragPlayingCurrent = this.getAppendedFrag(currentTime + 0.1);\n      }\n      if (fragPlayingCurrent) {\n        this.backtrackFragment = null;\n        const fragPlaying = this.fragPlaying;\n        const fragCurrentLevel = fragPlayingCurrent.level;\n        if (\n          !fragPlaying ||\n          fragPlayingCurrent.sn !== fragPlaying.sn ||\n          fragPlaying.level !== fragCurrentLevel ||\n          fragPlayingCurrent.urlId !== fragPlaying.urlId\n        ) {\n          this.fragPlaying = fragPlayingCurrent;\n          this.hls.trigger(Events.FRAG_CHANGED, { frag: fragPlayingCurrent });\n          if (!fragPlaying || fragPlaying.level !== fragCurrentLevel) {\n            this.hls.trigger(Events.LEVEL_SWITCHED, {\n              level: fragCurrentLevel,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  get nextLevel(): number {\n    const frag = this.nextBufferedFrag;\n    if (frag) {\n      return frag.level;\n    }\n    return -1;\n  }\n\n  get currentFrag(): Fragment | null {\n    const media = this.media;\n    if (media) {\n      return this.fragPlaying || this.getAppendedFrag(media.currentTime);\n    }\n    return null;\n  }\n\n  get currentProgramDateTime(): Date | null {\n    const media = this.media;\n    if (media) {\n      const currentTime = media.currentTime;\n      const frag = this.currentFrag;\n      if (\n        frag &&\n        Number.isFinite(currentTime) &&\n        Number.isFinite(frag.programDateTime)\n      ) {\n        const epocMs =\n          (frag.programDateTime as number) + (currentTime - frag.start) * 1000;\n        return new Date(epocMs);\n      }\n    }\n    return null;\n  }\n\n  get currentLevel(): number {\n    const frag = this.currentFrag;\n    if (frag) {\n      return frag.level;\n    }\n    return -1;\n  }\n\n  get nextBufferedFrag() {\n    const frag = this.currentFrag;\n    if (frag) {\n      return this.followingBufferedFrag(frag);\n    }\n    return null;\n  }\n\n  get forceStartLoad() {\n    return this._forceStartLoad;\n  }\n}\n","export default class AESCrypto {\n  private subtle: SubtleCrypto;\n  private aesIV: Uint8Array;\n\n  constructor(subtle: SubtleCrypto, iv: Uint8Array) {\n    this.subtle = subtle;\n    this.aesIV = iv;\n  }\n\n  decrypt(data: ArrayBuffer, key: CryptoKey) {\n    return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);\n  }\n}\n","import { sliceUint8 } from '../utils/typed-array';\n\n// PKCS7\nexport function removePadding(array: Uint8Array): Uint8Array {\n  const outputBytes = array.byteLength;\n  const paddingBytes =\n    outputBytes && new DataView(array.buffer).getUint8(outputBytes - 1);\n  if (paddingBytes) {\n    return sliceUint8(array, 0, outputBytes - paddingBytes);\n  }\n  return array;\n}\n\nexport default class AESDecryptor {\n  private rcon: Array<number> = [\n    0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36,\n  ];\n  private subMix: Array<Uint32Array> = [\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n  ];\n  private invSubMix: Array<Uint32Array> = [\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n  ];\n  private sBox: Uint32Array = new Uint32Array(256);\n  private invSBox: Uint32Array = new Uint32Array(256);\n  private key: Uint32Array = new Uint32Array(0);\n\n  private ksRows: number = 0;\n  private keySize: number = 0;\n  private keySchedule!: Uint32Array;\n  private invKeySchedule!: Uint32Array;\n\n  constructor() {\n    this.initTable();\n  }\n\n  // Using view.getUint32() also swaps the byte order.\n  uint8ArrayToUint32Array_(arrayBuffer) {\n    const view = new DataView(arrayBuffer);\n    const newArray = new Uint32Array(4);\n    for (let i = 0; i < 4; i++) {\n      newArray[i] = view.getUint32(i * 4);\n    }\n\n    return newArray;\n  }\n\n  initTable() {\n    const sBox = this.sBox;\n    const invSBox = this.invSBox;\n    const subMix = this.subMix;\n    const subMix0 = subMix[0];\n    const subMix1 = subMix[1];\n    const subMix2 = subMix[2];\n    const subMix3 = subMix[3];\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    const d = new Uint32Array(256);\n    let x = 0;\n    let xi = 0;\n    let i = 0;\n    for (i = 0; i < 256; i++) {\n      if (i < 128) {\n        d[i] = i << 1;\n      } else {\n        d[i] = (i << 1) ^ 0x11b;\n      }\n    }\n\n    for (i = 0; i < 256; i++) {\n      let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n      sBox[x] = sx;\n      invSBox[sx] = x;\n\n      // Compute multiplication\n      const x2 = d[x];\n      const x4 = d[x2];\n      const x8 = d[x4];\n\n      // Compute sub/invSub bytes, mix columns tables\n      let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n      subMix0[x] = (t << 24) | (t >>> 8);\n      subMix1[x] = (t << 16) | (t >>> 16);\n      subMix2[x] = (t << 8) | (t >>> 24);\n      subMix3[x] = t;\n\n      // Compute inv sub bytes, inv mix columns tables\n      t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n      invSubMix0[sx] = (t << 24) | (t >>> 8);\n      invSubMix1[sx] = (t << 16) | (t >>> 16);\n      invSubMix2[sx] = (t << 8) | (t >>> 24);\n      invSubMix3[sx] = t;\n\n      // Compute next counter\n      if (!x) {\n        x = xi = 1;\n      } else {\n        x = x2 ^ d[d[d[x8 ^ x2]]];\n        xi ^= d[d[xi]];\n      }\n    }\n  }\n\n  expandKey(keyBuffer: ArrayBuffer) {\n    // convert keyBuffer to Uint32Array\n    const key = this.uint8ArrayToUint32Array_(keyBuffer);\n    let sameKey = true;\n    let offset = 0;\n\n    while (offset < key.length && sameKey) {\n      sameKey = key[offset] === this.key[offset];\n      offset++;\n    }\n\n    if (sameKey) {\n      return;\n    }\n\n    this.key = key;\n    const keySize = (this.keySize = key.length);\n\n    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n      throw new Error('Invalid aes key size=' + keySize);\n    }\n\n    const ksRows = (this.ksRows = (keySize + 6 + 1) * 4);\n    let ksRow;\n    let invKsRow;\n\n    const keySchedule = (this.keySchedule = new Uint32Array(ksRows));\n    const invKeySchedule = (this.invKeySchedule = new Uint32Array(ksRows));\n    const sbox = this.sBox;\n    const rcon = this.rcon;\n\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    let prev;\n    let t;\n\n    for (ksRow = 0; ksRow < ksRows; ksRow++) {\n      if (ksRow < keySize) {\n        prev = keySchedule[ksRow] = key[ksRow];\n        continue;\n      }\n      t = prev;\n\n      if (ksRow % keySize === 0) {\n        // Rot word\n        t = (t << 8) | (t >>> 24);\n\n        // Sub word\n        t =\n          (sbox[t >>> 24] << 24) |\n          (sbox[(t >>> 16) & 0xff] << 16) |\n          (sbox[(t >>> 8) & 0xff] << 8) |\n          sbox[t & 0xff];\n\n        // Mix Rcon\n        t ^= rcon[(ksRow / keySize) | 0] << 24;\n      } else if (keySize > 6 && ksRow % keySize === 4) {\n        // Sub word\n        t =\n          (sbox[t >>> 24] << 24) |\n          (sbox[(t >>> 16) & 0xff] << 16) |\n          (sbox[(t >>> 8) & 0xff] << 8) |\n          sbox[t & 0xff];\n      }\n\n      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n    }\n\n    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n      ksRow = ksRows - invKsRow;\n      if (invKsRow & 3) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] =\n          invSubMix0[sbox[t >>> 24]] ^\n          invSubMix1[sbox[(t >>> 16) & 0xff]] ^\n          invSubMix2[sbox[(t >>> 8) & 0xff]] ^\n          invSubMix3[sbox[t & 0xff]];\n      }\n\n      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n    }\n  }\n\n  // Adding this as a method greatly improves performance.\n  networkToHostOrderSwap(word) {\n    return (\n      (word << 24) |\n      ((word & 0xff00) << 8) |\n      ((word & 0xff0000) >> 8) |\n      (word >>> 24)\n    );\n  }\n\n  decrypt(inputArrayBuffer: ArrayBuffer, offset: number, aesIV: ArrayBuffer) {\n    const nRounds = this.keySize + 6;\n    const invKeySchedule = this.invKeySchedule;\n    const invSBOX = this.invSBox;\n\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    const initVector = this.uint8ArrayToUint32Array_(aesIV);\n    let initVector0 = initVector[0];\n    let initVector1 = initVector[1];\n    let initVector2 = initVector[2];\n    let initVector3 = initVector[3];\n\n    const inputInt32 = new Int32Array(inputArrayBuffer);\n    const outputInt32 = new Int32Array(inputInt32.length);\n\n    let t0, t1, t2, t3;\n    let s0, s1, s2, s3;\n    let inputWords0, inputWords1, inputWords2, inputWords3;\n\n    let ksRow, i;\n    const swapWord = this.networkToHostOrderSwap;\n\n    while (offset < inputInt32.length) {\n      inputWords0 = swapWord(inputInt32[offset]);\n      inputWords1 = swapWord(inputInt32[offset + 1]);\n      inputWords2 = swapWord(inputInt32[offset + 2]);\n      inputWords3 = swapWord(inputInt32[offset + 3]);\n\n      s0 = inputWords0 ^ invKeySchedule[0];\n      s1 = inputWords3 ^ invKeySchedule[1];\n      s2 = inputWords2 ^ invKeySchedule[2];\n      s3 = inputWords1 ^ invKeySchedule[3];\n\n      ksRow = 4;\n\n      // Iterate through the rounds of decryption\n      for (i = 1; i < nRounds; i++) {\n        t0 =\n          invSubMix0[s0 >>> 24] ^\n          invSubMix1[(s1 >> 16) & 0xff] ^\n          invSubMix2[(s2 >> 8) & 0xff] ^\n          invSubMix3[s3 & 0xff] ^\n          invKeySchedule[ksRow];\n        t1 =\n          invSubMix0[s1 >>> 24] ^\n          invSubMix1[(s2 >> 16) & 0xff] ^\n          invSubMix2[(s3 >> 8) & 0xff] ^\n          invSubMix3[s0 & 0xff] ^\n          invKeySchedule[ksRow + 1];\n        t2 =\n          invSubMix0[s2 >>> 24] ^\n          invSubMix1[(s3 >> 16) & 0xff] ^\n          invSubMix2[(s0 >> 8) & 0xff] ^\n          invSubMix3[s1 & 0xff] ^\n          invKeySchedule[ksRow + 2];\n        t3 =\n          invSubMix0[s3 >>> 24] ^\n          invSubMix1[(s0 >> 16) & 0xff] ^\n          invSubMix2[(s1 >> 8) & 0xff] ^\n          invSubMix3[s2 & 0xff] ^\n          invKeySchedule[ksRow + 3];\n        // Update state\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n\n        ksRow = ksRow + 4;\n      }\n\n      // Shift rows, sub bytes, add round key\n      t0 =\n        (invSBOX[s0 >>> 24] << 24) ^\n        (invSBOX[(s1 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s2 >> 8) & 0xff] << 8) ^\n        invSBOX[s3 & 0xff] ^\n        invKeySchedule[ksRow];\n      t1 =\n        (invSBOX[s1 >>> 24] << 24) ^\n        (invSBOX[(s2 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s3 >> 8) & 0xff] << 8) ^\n        invSBOX[s0 & 0xff] ^\n        invKeySchedule[ksRow + 1];\n      t2 =\n        (invSBOX[s2 >>> 24] << 24) ^\n        (invSBOX[(s3 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s0 >> 8) & 0xff] << 8) ^\n        invSBOX[s1 & 0xff] ^\n        invKeySchedule[ksRow + 2];\n      t3 =\n        (invSBOX[s3 >>> 24] << 24) ^\n        (invSBOX[(s0 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s1 >> 8) & 0xff] << 8) ^\n        invSBOX[s2 & 0xff] ^\n        invKeySchedule[ksRow + 3];\n\n      // Write\n      outputInt32[offset] = swapWord(t0 ^ initVector0);\n      outputInt32[offset + 1] = swapWord(t3 ^ initVector1);\n      outputInt32[offset + 2] = swapWord(t2 ^ initVector2);\n      outputInt32[offset + 3] = swapWord(t1 ^ initVector3);\n\n      // reset initVector to last 4 unsigned int\n      initVector0 = inputWords0;\n      initVector1 = inputWords1;\n      initVector2 = inputWords2;\n      initVector3 = inputWords3;\n\n      offset = offset + 4;\n    }\n\n    return outputInt32.buffer;\n  }\n}\n","import AESCrypto from './aes-crypto';\nimport FastAESKey from './fast-aes-key';\nimport AESDecryptor, { removePadding } from './aes-decryptor';\nimport { logger } from '../utils/logger';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { sliceUint8 } from '../utils/typed-array';\nimport type { HlsConfig } from '../config';\n\nconst CHUNK_SIZE = 16; // 16 bytes, 128 bits\n\nexport default class Decrypter {\n  private logEnabled: boolean = true;\n  private removePKCS7Padding: boolean;\n  private subtle: SubtleCrypto | null = null;\n  private softwareDecrypter: AESDecryptor | null = null;\n  private key: ArrayBuffer | null = null;\n  private fastAesKey: FastAESKey | null = null;\n  private remainderData: Uint8Array | null = null;\n  private currentIV: ArrayBuffer | null = null;\n  private currentResult: ArrayBuffer | null = null;\n  private useSoftware: boolean;\n\n  constructor(config: HlsConfig, { removePKCS7Padding = true } = {}) {\n    this.useSoftware = config.enableSoftwareAES;\n    this.removePKCS7Padding = removePKCS7Padding;\n    // built in decryptor expects PKCS7 padding\n    if (removePKCS7Padding) {\n      try {\n        const browserCrypto = self.crypto;\n        if (browserCrypto) {\n          this.subtle =\n            browserCrypto.subtle ||\n            ((browserCrypto as any).webkitSubtle as SubtleCrypto);\n        }\n      } catch (e) {\n        /* no-op */\n      }\n    }\n    if (this.subtle === null) {\n      this.useSoftware = true;\n    }\n  }\n\n  destroy() {\n    this.subtle = null;\n    this.softwareDecrypter = null;\n    this.key = null;\n    this.fastAesKey = null;\n    this.remainderData = null;\n    this.currentIV = null;\n    this.currentResult = null;\n  }\n\n  public isSync() {\n    return this.useSoftware;\n  }\n\n  public flush(): Uint8Array | null {\n    const { currentResult, remainderData } = this;\n    if (!currentResult || remainderData) {\n      this.reset();\n      return null;\n    }\n    const data = new Uint8Array(currentResult);\n    this.reset();\n    if (this.removePKCS7Padding) {\n      return removePadding(data);\n    }\n    return data;\n  }\n\n  public reset() {\n    this.currentResult = null;\n    this.currentIV = null;\n    this.remainderData = null;\n    if (this.softwareDecrypter) {\n      this.softwareDecrypter = null;\n    }\n  }\n\n  public decrypt(\n    data: Uint8Array | ArrayBuffer,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): Promise<ArrayBuffer> {\n    if (this.useSoftware) {\n      return new Promise((resolve, reject) => {\n        this.softwareDecrypt(new Uint8Array(data), key, iv);\n        const decryptResult = this.flush();\n        if (decryptResult) {\n          resolve(decryptResult.buffer);\n        } else {\n          reject(new Error('[softwareDecrypt] Failed to decrypt data'));\n        }\n      });\n    }\n    return this.webCryptoDecrypt(new Uint8Array(data), key, iv);\n  }\n\n  // Software decryption is progressive. Progressive decryption may not return a result on each call. Any cached\n  // data is handled in the flush() call\n  public softwareDecrypt(\n    data: Uint8Array,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): ArrayBuffer | null {\n    const { currentIV, currentResult, remainderData } = this;\n    this.logOnce('JS AES decrypt');\n    // The output is staggered during progressive parsing - the current result is cached, and emitted on the next call\n    // This is done in order to strip PKCS7 padding, which is found at the end of each segment. We only know we've reached\n    // the end on flush(), but by that time we have already received all bytes for the segment.\n    // Progressive decryption does not work with WebCrypto\n\n    if (remainderData) {\n      data = appendUint8Array(remainderData, data);\n      this.remainderData = null;\n    }\n\n    // Byte length must be a multiple of 16 (AES-128 = 128 bit blocks = 16 bytes)\n    const currentChunk = this.getValidChunk(data);\n    if (!currentChunk.length) {\n      return null;\n    }\n\n    if (currentIV) {\n      iv = currentIV;\n    }\n\n    let softwareDecrypter = this.softwareDecrypter;\n    if (!softwareDecrypter) {\n      softwareDecrypter = this.softwareDecrypter = new AESDecryptor();\n    }\n    softwareDecrypter.expandKey(key);\n\n    const result = currentResult;\n\n    this.currentResult = softwareDecrypter.decrypt(currentChunk.buffer, 0, iv);\n    this.currentIV = sliceUint8(currentChunk, -16).buffer;\n\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  public webCryptoDecrypt(\n    data: Uint8Array,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): Promise<ArrayBuffer> {\n    const subtle = this.subtle;\n    if (this.key !== key || !this.fastAesKey) {\n      this.key = key;\n      this.fastAesKey = new FastAESKey(subtle, key);\n    }\n    return this.fastAesKey\n      .expandKey()\n      .then((aesKey) => {\n        // decrypt using web crypto\n        if (!subtle) {\n          return Promise.reject(new Error('web crypto not initialized'));\n        }\n        this.logOnce('WebCrypto AES decrypt');\n        const crypto = new AESCrypto(subtle, new Uint8Array(iv));\n        return crypto.decrypt(data.buffer, aesKey);\n      })\n      .catch((err) => {\n        logger.warn(\n          `[decrypter]: WebCrypto Error, disable WebCrypto API, ${err.name}: ${err.message}`\n        );\n\n        return this.onWebCryptoError(data, key, iv);\n      });\n  }\n\n  private onWebCryptoError(data, key, iv): ArrayBuffer | never {\n    this.useSoftware = true;\n    this.logEnabled = true;\n    this.softwareDecrypt(data, key, iv);\n    const decryptResult = this.flush();\n    if (decryptResult) {\n      return decryptResult.buffer;\n    }\n    throw new Error('WebCrypto and softwareDecrypt: failed to decrypt data');\n  }\n\n  private getValidChunk(data: Uint8Array): Uint8Array {\n    let currentChunk = data;\n    const splitPoint = data.length - (data.length % CHUNK_SIZE);\n    if (splitPoint !== data.length) {\n      currentChunk = sliceUint8(data, 0, splitPoint);\n      this.remainderData = sliceUint8(data, splitPoint);\n    }\n    return currentChunk;\n  }\n\n  private logOnce(msg: string) {\n    if (!this.logEnabled) {\n      return;\n    }\n    logger.log(`[decrypter]: ${msg}`);\n    this.logEnabled = false;\n  }\n}\n","export default class FastAESKey {\n  private subtle: any;\n  private key: ArrayBuffer;\n\n  constructor(subtle, key) {\n    this.subtle = subtle;\n    this.key = key;\n  }\n\n  expandKey() {\n    return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, [\n      'encrypt',\n      'decrypt',\n    ]);\n  }\n}\n","/**\n * AAC demuxer\n */\nimport BaseAudioDemuxer from './base-audio-demuxer';\nimport * as ADTS from './adts';\nimport { logger } from '../utils/logger';\nimport * as ID3 from '../demux/id3';\nimport type { HlsEventEmitter } from '../events';\nimport type { HlsConfig } from '../config';\n\nclass AACDemuxer extends BaseAudioDemuxer {\n  private readonly observer: HlsEventEmitter;\n  private readonly config: HlsConfig;\n\n  constructor(observer, config) {\n    super();\n    this.observer = observer;\n    this.config = config;\n  }\n\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    super.resetInitSegment(initSegment, audioCodec, videoCodec, trackDuration);\n    this._audioTrack = {\n      container: 'audio/adts',\n      type: 'audio',\n      id: 2,\n      pid: -1,\n      sequenceNumber: 0,\n      segmentCodec: 'aac',\n      samples: [],\n      manifestCodec: audioCodec,\n      duration: trackDuration,\n      inputTimeScale: 90000,\n      dropped: 0,\n    };\n  }\n\n  // Source for probe info - https://wiki.multimedia.cx/index.php?title=ADTS\n  static probe(data): boolean {\n    if (!data) {\n      return false;\n    }\n\n    // Check for the ADTS sync word\n    // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n    // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n    // More info https://wiki.multimedia.cx/index.php?title=ADTS\n    const id3Data = ID3.getID3Data(data, 0) || [];\n    let offset = id3Data.length;\n\n    for (let length = data.length; offset < length; offset++) {\n      if (ADTS.probe(data, offset)) {\n        logger.log('ADTS sync word found !');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canParse(data, offset) {\n    return ADTS.canParse(data, offset);\n  }\n\n  appendFrame(track, data, offset) {\n    ADTS.initTrackConfig(\n      track,\n      this.observer,\n      data,\n      offset,\n      track.manifestCodec\n    );\n    const frame = ADTS.appendFrame(\n      track,\n      data,\n      offset,\n      this.basePTS as number,\n      this.frameIndex\n    );\n    if (frame && frame.missing === 0) {\n      return frame;\n    }\n  }\n}\n\nexport default AACDemuxer;\n","/**\n * ADTS parser helper\n * @link https://wiki.multimedia.cx/index.php?title=ADTS\n */\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport type {\n  DemuxedAudioTrack,\n  AudioFrame,\n  AudioSample,\n} from '../types/demuxer';\n\ntype AudioConfig = {\n  config: number[];\n  samplerate: number;\n  channelCount: number;\n  codec: string;\n  manifestCodec: string;\n};\n\ntype FrameHeader = {\n  headerLength: number;\n  frameLength: number;\n};\n\nexport function getAudioConfig(\n  observer,\n  data: Uint8Array,\n  offset: number,\n  audioCodec: string\n): AudioConfig | void {\n  let adtsObjectType: number;\n  let adtsExtensionSamplingIndex: number;\n  let adtsChannelConfig: number;\n  let config: number[];\n  const userAgent = navigator.userAgent.toLowerCase();\n  const manifestCodec = audioCodec;\n  const adtsSamplingRates = [\n    96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025,\n    8000, 7350,\n  ];\n  // byte 2\n  adtsObjectType = ((data[offset + 2] & 0xc0) >>> 6) + 1;\n  const adtsSamplingIndex = (data[offset + 2] & 0x3c) >>> 2;\n  if (adtsSamplingIndex > adtsSamplingRates.length - 1) {\n    observer.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.FRAG_PARSING_ERROR,\n      fatal: true,\n      reason: `invalid ADTS sampling index:${adtsSamplingIndex}`,\n    });\n    return;\n  }\n  adtsChannelConfig = (data[offset + 2] & 0x01) << 2;\n  // byte 3\n  adtsChannelConfig |= (data[offset + 3] & 0xc0) >>> 6;\n  logger.log(\n    `manifest codec:${audioCodec}, ADTS type:${adtsObjectType}, samplingIndex:${adtsSamplingIndex}`\n  );\n  // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n  if (/firefox/i.test(userAgent)) {\n    if (adtsSamplingIndex >= 6) {\n      adtsObjectType = 5;\n      config = new Array(4);\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSamplingIndex = adtsSamplingIndex - 3;\n    } else {\n      adtsObjectType = 2;\n      config = new Array(2);\n      adtsExtensionSamplingIndex = adtsSamplingIndex;\n    }\n    // Android : always use AAC\n  } else if (userAgent.indexOf('android') !== -1) {\n    adtsObjectType = 2;\n    config = new Array(2);\n    adtsExtensionSamplingIndex = adtsSamplingIndex;\n  } else {\n    /*  for other browsers (Chrome/Vivaldi/Opera ...)\n        always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n    */\n    adtsObjectType = 5;\n    config = new Array(4);\n    // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n    if (\n      (audioCodec &&\n        (audioCodec.indexOf('mp4a.40.29') !== -1 ||\n          audioCodec.indexOf('mp4a.40.5') !== -1)) ||\n      (!audioCodec && adtsSamplingIndex >= 6)\n    ) {\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSamplingIndex = adtsSamplingIndex - 3;\n    } else {\n      // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n      // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n      if (\n        (audioCodec &&\n          audioCodec.indexOf('mp4a.40.2') !== -1 &&\n          ((adtsSamplingIndex >= 6 && adtsChannelConfig === 1) ||\n            /vivaldi/i.test(userAgent))) ||\n        (!audioCodec && adtsChannelConfig === 1)\n      ) {\n        adtsObjectType = 2;\n        config = new Array(2);\n      }\n      adtsExtensionSamplingIndex = adtsSamplingIndex;\n    }\n  }\n  /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n      ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n    Audio Profile / Audio Object Type\n    0: Null\n    1: AAC Main\n    2: AAC LC (Low Complexity)\n    3: AAC SSR (Scalable Sample Rate)\n    4: AAC LTP (Long Term Prediction)\n    5: SBR (Spectral Band Replication)\n    6: AAC Scalable\n   sampling freq\n    0: 96000 Hz\n    1: 88200 Hz\n    2: 64000 Hz\n    3: 48000 Hz\n    4: 44100 Hz\n    5: 32000 Hz\n    6: 24000 Hz\n    7: 22050 Hz\n    8: 16000 Hz\n    9: 12000 Hz\n    10: 11025 Hz\n    11: 8000 Hz\n    12: 7350 Hz\n    13: Reserved\n    14: Reserved\n    15: frequency is written explictly\n    Channel Configurations\n    These are the channel configurations:\n    0: Defined in AOT Specifc Config\n    1: 1 channel: front-center\n    2: 2 channels: front-left, front-right\n  */\n  // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n  config[0] = adtsObjectType << 3;\n  // samplingFrequencyIndex\n  config[0] |= (adtsSamplingIndex & 0x0e) >> 1;\n  config[1] |= (adtsSamplingIndex & 0x01) << 7;\n  // channelConfiguration\n  config[1] |= adtsChannelConfig << 3;\n  if (adtsObjectType === 5) {\n    // adtsExtensionSamplingIndex\n    config[1] |= (adtsExtensionSamplingIndex & 0x0e) >> 1;\n    config[2] = (adtsExtensionSamplingIndex & 0x01) << 7;\n    // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n    //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n    config[2] |= 2 << 2;\n    config[3] = 0;\n  }\n  return {\n    config,\n    samplerate: adtsSamplingRates[adtsSamplingIndex],\n    channelCount: adtsChannelConfig,\n    codec: 'mp4a.40.' + adtsObjectType,\n    manifestCodec,\n  };\n}\n\nexport function isHeaderPattern(data: Uint8Array, offset: number): boolean {\n  return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;\n}\n\nexport function getHeaderLength(data: Uint8Array, offset: number): number {\n  return data[offset + 1] & 0x01 ? 7 : 9;\n}\n\nexport function getFullFrameLength(data: Uint8Array, offset: number): number {\n  return (\n    ((data[offset + 3] & 0x03) << 11) |\n    (data[offset + 4] << 3) |\n    ((data[offset + 5] & 0xe0) >>> 5)\n  );\n}\n\nexport function canGetFrameLength(data: Uint8Array, offset: number): boolean {\n  return offset + 5 < data.length;\n}\n\nexport function isHeader(data: Uint8Array, offset: number): boolean {\n  // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n  // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n  // More info https://wiki.multimedia.cx/index.php?title=ADTS\n  return offset + 1 < data.length && isHeaderPattern(data, offset);\n}\n\nexport function canParse(data: Uint8Array, offset: number): boolean {\n  return (\n    canGetFrameLength(data, offset) &&\n    isHeaderPattern(data, offset) &&\n    getFullFrameLength(data, offset) <= data.length - offset\n  );\n}\n\nexport function probe(data: Uint8Array, offset: number): boolean {\n  // same as isHeader but we also check that ADTS frame follows last ADTS frame\n  // or end of data is reached\n  if (isHeader(data, offset)) {\n    // ADTS header Length\n    const headerLength = getHeaderLength(data, offset);\n    if (offset + headerLength >= data.length) {\n      return false;\n    }\n    // ADTS frame Length\n    const frameLength = getFullFrameLength(data, offset);\n    if (frameLength <= headerLength) {\n      return false;\n    }\n\n    const newOffset = offset + frameLength;\n    return newOffset === data.length || isHeader(data, newOffset);\n  }\n  return false;\n}\n\nexport function initTrackConfig(\n  track: DemuxedAudioTrack,\n  observer: HlsEventEmitter,\n  data: Uint8Array,\n  offset: number,\n  audioCodec: string\n) {\n  if (!track.samplerate) {\n    const config = getAudioConfig(observer, data, offset, audioCodec);\n    if (!config) {\n      return;\n    }\n    track.config = config.config;\n    track.samplerate = config.samplerate;\n    track.channelCount = config.channelCount;\n    track.codec = config.codec;\n    track.manifestCodec = config.manifestCodec;\n    logger.log(\n      `parsed codec:${track.codec}, rate:${config.samplerate}, channels:${config.channelCount}`\n    );\n  }\n}\n\nexport function getFrameDuration(samplerate: number): number {\n  return (1024 * 90000) / samplerate;\n}\n\nexport function parseFrameHeader(\n  data: Uint8Array,\n  offset: number\n): FrameHeader | void {\n  // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n  const headerLength = getHeaderLength(data, offset);\n  if (offset + headerLength <= data.length) {\n    // retrieve frame size\n    const frameLength = getFullFrameLength(data, offset) - headerLength;\n    if (frameLength > 0) {\n      // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}`);\n      return { headerLength, frameLength };\n    }\n  }\n}\n\nexport function appendFrame(\n  track: DemuxedAudioTrack,\n  data: Uint8Array,\n  offset: number,\n  pts: number,\n  frameIndex: number\n): AudioFrame {\n  const frameDuration = getFrameDuration(track.samplerate as number);\n  const stamp = pts + frameIndex * frameDuration;\n  const header = parseFrameHeader(data, offset);\n  let unit: Uint8Array;\n  if (header) {\n    const { frameLength, headerLength } = header;\n    const length = headerLength + frameLength;\n    const missing = Math.max(0, offset + length - data.length);\n    // logger.log(`AAC frame ${frameIndex}, pts:${stamp} length@offset/total: ${frameLength}@${offset+headerLength}/${data.byteLength} missing: ${missing}`);\n    if (missing) {\n      unit = new Uint8Array(length - headerLength);\n      unit.set(data.subarray(offset + headerLength, data.length), 0);\n    } else {\n      unit = data.subarray(offset + headerLength, offset + length);\n    }\n\n    const sample: AudioSample = {\n      unit,\n      pts: stamp,\n    };\n    if (!missing) {\n      track.samples.push(sample as AudioSample);\n    }\n\n    return { sample, length, missing };\n  }\n  // overflow incomplete header\n  const length = data.length - offset;\n  unit = new Uint8Array(length);\n  unit.set(data.subarray(offset, data.length), 0);\n  const sample: AudioSample = {\n    unit,\n    pts: stamp,\n  };\n  return { sample, length, missing: -1 };\n}\n","import * as ID3 from '../demux/id3';\nimport {\n  DemuxerResult,\n  Demuxer,\n  DemuxedAudioTrack,\n  AudioFrame,\n  DemuxedMetadataTrack,\n  DemuxedVideoTrack,\n  DemuxedUserdataTrack,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport { dummyTrack } from './dummy-demuxed-track';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { sliceUint8 } from '../utils/typed-array';\n\nclass BaseAudioDemuxer implements Demuxer {\n  protected _audioTrack!: DemuxedAudioTrack;\n  protected _id3Track!: DemuxedMetadataTrack;\n  protected frameIndex: number = 0;\n  protected cachedData: Uint8Array | null = null;\n  protected basePTS: number | null = null;\n  protected initPTS: number | null = null;\n  protected lastPTS: number | null = null;\n\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    this._id3Track = {\n      type: 'id3',\n      id: 3,\n      pid: -1,\n      inputTimeScale: 90000,\n      sequenceNumber: 0,\n      samples: [],\n      dropped: 0,\n    };\n  }\n\n  resetTimeStamp(deaultTimestamp) {\n    this.initPTS = deaultTimestamp;\n    this.resetContiguity();\n  }\n\n  resetContiguity(): void {\n    this.basePTS = null;\n    this.lastPTS = null;\n    this.frameIndex = 0;\n  }\n\n  canParse(data: Uint8Array, offset: number): boolean {\n    return false;\n  }\n\n  appendFrame(\n    track: DemuxedAudioTrack,\n    data: Uint8Array,\n    offset: number\n  ): AudioFrame | void {}\n\n  // feed incoming data to the front of the parsing pipeline\n  demux(data: Uint8Array, timeOffset: number): DemuxerResult {\n    if (this.cachedData) {\n      data = appendUint8Array(this.cachedData, data);\n      this.cachedData = null;\n    }\n\n    let id3Data: Uint8Array | undefined = ID3.getID3Data(data, 0);\n    let offset = id3Data ? id3Data.length : 0;\n    let lastDataIndex;\n    const track = this._audioTrack;\n    const id3Track = this._id3Track;\n    const timestamp = id3Data ? ID3.getTimeStamp(id3Data) : undefined;\n    const length = data.length;\n\n    if (\n      this.basePTS === null ||\n      (this.frameIndex === 0 && Number.isFinite(timestamp))\n    ) {\n      this.basePTS = initPTSFn(timestamp, timeOffset, this.initPTS);\n      this.lastPTS = this.basePTS;\n    }\n\n    if (this.lastPTS === null) {\n      this.lastPTS = this.basePTS;\n    }\n\n    // more expressive than alternative: id3Data?.length\n    if (id3Data && id3Data.length > 0) {\n      id3Track.samples.push({\n        pts: this.lastPTS,\n        dts: this.lastPTS,\n        data: id3Data,\n        type: MetadataSchema.audioId3,\n        duration: Number.POSITIVE_INFINITY,\n      });\n    }\n\n    while (offset < length) {\n      if (this.canParse(data, offset)) {\n        const frame = this.appendFrame(track, data, offset);\n        if (frame) {\n          this.frameIndex++;\n          this.lastPTS = frame.sample.pts;\n          offset += frame.length;\n          lastDataIndex = offset;\n        } else {\n          offset = length;\n        }\n      } else if (ID3.canParse(data, offset)) {\n        // after a ID3.canParse, a call to ID3.getID3Data *should* always returns some data\n        id3Data = ID3.getID3Data(data, offset)!;\n        id3Track.samples.push({\n          pts: this.lastPTS,\n          dts: this.lastPTS,\n          data: id3Data,\n          type: MetadataSchema.audioId3,\n          duration: Number.POSITIVE_INFINITY,\n        });\n        offset += id3Data.length;\n        lastDataIndex = offset;\n      } else {\n        offset++;\n      }\n      if (offset === length && lastDataIndex !== length) {\n        const partialData = sliceUint8(data, lastDataIndex);\n        if (this.cachedData) {\n          this.cachedData = appendUint8Array(this.cachedData, partialData);\n        } else {\n          this.cachedData = partialData;\n        }\n      }\n    }\n\n    return {\n      audioTrack: track,\n      videoTrack: dummyTrack() as DemuxedVideoTrack,\n      id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    return Promise.reject(\n      new Error(`[${this}] This demuxer does not support Sample-AES decryption`)\n    );\n  }\n\n  flush(timeOffset: number): DemuxerResult {\n    // Parse cache in case of remaining frames.\n    const cachedData = this.cachedData;\n    if (cachedData) {\n      this.cachedData = null;\n      this.demux(cachedData, 0);\n    }\n\n    return {\n      audioTrack: this._audioTrack,\n      videoTrack: dummyTrack() as DemuxedVideoTrack,\n      id3Track: this._id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  destroy() {}\n}\n\n/**\n * Initialize PTS\n * <p>\n *    use timestamp unless it is undefined, NaN or Infinity\n * </p>\n */\nexport const initPTSFn = (\n  timestamp: number | undefined,\n  timeOffset: number,\n  initPTS: number | null\n): number => {\n  if (Number.isFinite(timestamp as number)) {\n    return timestamp! * 90;\n  }\n  return timeOffset * 90000 + (initPTS || 0);\n};\nexport default BaseAudioDemuxer;\n","export default class ChunkCache {\n  private chunks: Array<Uint8Array> = [];\n  public dataLength: number = 0;\n\n  push(chunk: Uint8Array) {\n    this.chunks.push(chunk);\n    this.dataLength += chunk.length;\n  }\n\n  flush(): Uint8Array {\n    const { chunks, dataLength } = this;\n    let result;\n    if (!chunks.length) {\n      return new Uint8Array(0);\n    } else if (chunks.length === 1) {\n      result = chunks[0];\n    } else {\n      result = concatUint8Arrays(chunks, dataLength);\n    }\n    this.reset();\n    return result;\n  }\n\n  reset() {\n    this.chunks.length = 0;\n    this.dataLength = 0;\n  }\n}\n\nfunction concatUint8Arrays(\n  chunks: Array<Uint8Array>,\n  dataLength: number\n): Uint8Array {\n  const result = new Uint8Array(dataLength);\n  let offset = 0;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i];\n    result.set(chunk, offset);\n    offset += chunk.length;\n  }\n  return result;\n}\n","import type { DemuxedTrack } from '../types/demuxer';\n\nexport function dummyTrack(type = '', inputTimeScale = 90000): DemuxedTrack {\n  return {\n    type,\n    id: -1,\n    pid: -1,\n    inputTimeScale,\n    sequenceNumber: -1,\n    samples: [],\n    dropped: 0,\n  };\n}\n","/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n */\n\nimport { logger } from '../utils/logger';\n\nclass ExpGolomb {\n  private data: Uint8Array;\n  public bytesAvailable: number;\n  private word: number;\n  private bitsAvailable: number;\n\n  constructor(data: Uint8Array) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n  loadWord(): void {\n    const data = this.data;\n    const bytesAvailable = this.bytesAvailable;\n    const position = data.byteLength - bytesAvailable;\n    const workingBytes = new Uint8Array(4);\n    const availableBytes = Math.min(4, bytesAvailable);\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  // (count:int):void\n  skipBits(count: number): void {\n    let skipBytes; // :int\n    count = Math.min(count, this.bytesAvailable * 8 + this.bitsAvailable);\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= skipBytes << 3;\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // (size:int):uint\n  readBits(size: number): number {\n    let bits = Math.min(this.bitsAvailable, size); // :uint\n    const valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) {\n      logger.error('Cannot read more than 32 bits at a time');\n    }\n\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    } else {\n      throw new Error('no bits available');\n    }\n\n    bits = size - bits;\n    if (bits > 0 && this.bitsAvailable) {\n      return (valu << bits) | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  skipLZ(): number {\n    let leadingZeroCount; // :uint\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this.bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this.word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG(): void {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG(): void {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():uint\n  readUEG(): number {\n    const clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG(): number {\n    const valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean(): boolean {\n    return this.readBits(1) === 1;\n  }\n\n  // ():int\n  readUByte(): number {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort(): number {\n    return this.readBits(16);\n  }\n\n  // ():int\n  readUInt(): number {\n    return this.readBits(32);\n  }\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count the number of entries in this scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList(count: number): void {\n    let lastScale = 8;\n    let nextScale = 8;\n    let deltaScale;\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  }\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSPS(): {\n    width: number;\n    height: number;\n    pixelRatio: [number, number];\n  } {\n    let frameCropLeftOffset = 0;\n    let frameCropRightOffset = 0;\n    let frameCropTopOffset = 0;\n    let frameCropBottomOffset = 0;\n    let numRefFramesInPicOrderCntCycle;\n    let scalingListCount;\n    let i;\n    const readUByte = this.readUByte.bind(this);\n    const readBits = this.readBits.bind(this);\n    const readUEG = this.readUEG.bind(this);\n    const readBoolean = this.readBoolean.bind(this);\n    const skipBits = this.skipBits.bind(this);\n    const skipEG = this.skipEG.bind(this);\n    const skipUEG = this.skipUEG.bind(this);\n    const skipScalingList = this.skipScalingList.bind(this);\n\n    readUByte();\n    const profileIdc = readUByte(); // profile_idc\n    readBits(5); // profileCompat constraint_set[0-4]_flag, u(5)\n    skipBits(3); // reserved_zero_3bits u(3),\n    readUByte(); // level_idc u(8)\n    skipUEG(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128\n    ) {\n      const chromaFormatIdc = readUEG();\n      if (chromaFormatIdc === 3) {\n        skipBits(1);\n      } // separate_colour_plane_flag\n\n      skipUEG(); // bit_depth_luma_minus8\n      skipUEG(); // bit_depth_chroma_minus8\n      skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16);\n            } else {\n              skipScalingList(64);\n            }\n          }\n        }\n      }\n    }\n    skipUEG(); // log2_max_frame_num_minus4\n    const picOrderCntType = readUEG();\n    if (picOrderCntType === 0) {\n      readUEG(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      skipBits(1); // delta_pic_order_always_zero_flag\n      skipEG(); // offset_for_non_ref_pic\n      skipEG(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = readUEG();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        skipEG();\n      } // offset_for_ref_frame[ i ]\n    }\n    skipUEG(); // max_num_ref_frames\n    skipBits(1); // gaps_in_frame_num_value_allowed_flag\n    const picWidthInMbsMinus1 = readUEG();\n    const picHeightInMapUnitsMinus1 = readUEG();\n    const frameMbsOnlyFlag = readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      skipBits(1);\n    } // mb_adaptive_frame_field_flag\n\n    skipBits(1); // direct_8x8_inference_flag\n    if (readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = readUEG();\n      frameCropRightOffset = readUEG();\n      frameCropTopOffset = readUEG();\n      frameCropBottomOffset = readUEG();\n    }\n    let pixelRatio: [number, number] = [1, 1];\n    if (readBoolean()) {\n      // vui_parameters_present_flag\n      if (readBoolean()) {\n        // aspect_ratio_info_present_flag\n        const aspectRatioIdc = readUByte();\n        switch (aspectRatioIdc) {\n          case 1:\n            pixelRatio = [1, 1];\n            break;\n          case 2:\n            pixelRatio = [12, 11];\n            break;\n          case 3:\n            pixelRatio = [10, 11];\n            break;\n          case 4:\n            pixelRatio = [16, 11];\n            break;\n          case 5:\n            pixelRatio = [40, 33];\n            break;\n          case 6:\n            pixelRatio = [24, 11];\n            break;\n          case 7:\n            pixelRatio = [20, 11];\n            break;\n          case 8:\n            pixelRatio = [32, 11];\n            break;\n          case 9:\n            pixelRatio = [80, 33];\n            break;\n          case 10:\n            pixelRatio = [18, 11];\n            break;\n          case 11:\n            pixelRatio = [15, 11];\n            break;\n          case 12:\n            pixelRatio = [64, 33];\n            break;\n          case 13:\n            pixelRatio = [160, 99];\n            break;\n          case 14:\n            pixelRatio = [4, 3];\n            break;\n          case 15:\n            pixelRatio = [3, 2];\n            break;\n          case 16:\n            pixelRatio = [2, 1];\n            break;\n          case 255: {\n            pixelRatio = [\n              (readUByte() << 8) | readUByte(),\n              (readUByte() << 8) | readUByte(),\n            ];\n            break;\n          }\n        }\n      }\n    }\n    return {\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          frameCropLeftOffset * 2 -\n          frameCropRightOffset * 2\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      pixelRatio: pixelRatio,\n    };\n  }\n\n  readSliceType() {\n    // skip NALu type\n    this.readUByte();\n    // discard first_mb_in_slice\n    this.readUEG();\n    // return slice_type\n    return this.readUEG();\n  }\n}\n\nexport default ExpGolomb;\n","type RawFrame = { type: string; size: number; data: Uint8Array };\n\n// breaking up those two types in order to clarify what is happening in the decoding path.\ntype DecodedFrame<T> = { key: string; data: T; info?: any };\nexport type Frame = DecodedFrame<ArrayBuffer | string>;\n\n/**\n * Returns true if an ID3 header can be found at offset in data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {boolean} - True if an ID3 header is found\n */\nexport const isHeader = (data: Uint8Array, offset: number): boolean => {\n  /*\n   * http://id3.org/id3v2.3.0\n   * [0]     = 'I'\n   * [1]     = 'D'\n   * [2]     = '3'\n   * [3,4]   = {Version}\n   * [5]     = {Flags}\n   * [6-9]   = {ID3 Size}\n   *\n   * An ID3v2 tag can be detected with the following pattern:\n   *  $49 44 33 yy yy xx zz zz zz zz\n   * Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80\n   */\n  if (offset + 10 <= data.length) {\n    // look for 'ID3' identifier\n    if (\n      data[offset] === 0x49 &&\n      data[offset + 1] === 0x44 &&\n      data[offset + 2] === 0x33\n    ) {\n      // check version is within range\n      if (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n        // check size is within range\n        if (\n          data[offset + 6] < 0x80 &&\n          data[offset + 7] < 0x80 &&\n          data[offset + 8] < 0x80 &&\n          data[offset + 9] < 0x80\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns true if an ID3 footer can be found at offset in data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {boolean} - True if an ID3 footer is found\n */\nexport const isFooter = (data: Uint8Array, offset: number): boolean => {\n  /*\n   * The footer is a copy of the header, but with a different identifier\n   */\n  if (offset + 10 <= data.length) {\n    // look for '3DI' identifier\n    if (\n      data[offset] === 0x33 &&\n      data[offset + 1] === 0x44 &&\n      data[offset + 2] === 0x49\n    ) {\n      // check version is within range\n      if (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n        // check size is within range\n        if (\n          data[offset + 6] < 0x80 &&\n          data[offset + 7] < 0x80 &&\n          data[offset + 8] < 0x80 &&\n          data[offset + 9] < 0x80\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns any adjacent ID3 tags found in data starting at offset, as one block of data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {Uint8Array | undefined} - The block of data containing any ID3 tags found\n * or *undefined* if no header is found at the starting offset\n */\nexport const getID3Data = (\n  data: Uint8Array,\n  offset: number\n): Uint8Array | undefined => {\n  const front = offset;\n  let length = 0;\n\n  while (isHeader(data, offset)) {\n    // ID3 header is 10 bytes\n    length += 10;\n\n    const size = readSize(data, offset + 6);\n    length += size;\n\n    if (isFooter(data, offset + 10)) {\n      // ID3 footer is 10 bytes\n      length += 10;\n    }\n\n    offset += length;\n  }\n\n  if (length > 0) {\n    return data.subarray(front, front + length);\n  }\n\n  return undefined;\n};\n\nconst readSize = (data: Uint8Array, offset: number): number => {\n  let size = 0;\n  size = (data[offset] & 0x7f) << 21;\n  size |= (data[offset + 1] & 0x7f) << 14;\n  size |= (data[offset + 2] & 0x7f) << 7;\n  size |= data[offset + 3] & 0x7f;\n  return size;\n};\n\nexport const canParse = (data: Uint8Array, offset: number): boolean => {\n  return (\n    isHeader(data, offset) &&\n    readSize(data, offset + 6) + 10 <= data.length - offset\n  );\n};\n\n/**\n * Searches for the Elementary Stream timestamp found in the ID3 data chunk\n * @param {Uint8Array} data - Block of data containing one or more ID3 tags\n * @return {number | undefined} - The timestamp\n */\nexport const getTimeStamp = (data: Uint8Array): number | undefined => {\n  const frames: Frame[] = getID3Frames(data);\n\n  for (let i = 0; i < frames.length; i++) {\n    const frame = frames[i];\n\n    if (isTimeStampFrame(frame)) {\n      return readTimeStamp(frame as DecodedFrame<ArrayBuffer>);\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Returns true if the ID3 frame is an Elementary Stream timestamp frame\n * @param {ID3 frame} frame\n */\nexport const isTimeStampFrame = (frame: Frame): boolean => {\n  return (\n    frame &&\n    frame.key === 'PRIV' &&\n    frame.info === 'com.apple.streaming.transportStreamTimestamp'\n  );\n};\n\nconst getFrameData = (data: Uint8Array): RawFrame => {\n  /*\n  Frame ID       $xx xx xx xx (four characters)\n  Size           $xx xx xx xx\n  Flags          $xx xx\n  */\n  const type: string = String.fromCharCode(data[0], data[1], data[2], data[3]);\n  const size: number = readSize(data, 4);\n\n  // skip frame id, size, and flags\n  const offset = 10;\n\n  return { type, size, data: data.subarray(offset, offset + size) };\n};\n\n/**\n * Returns an array of ID3 frames found in all the ID3 tags in the id3Data\n * @param {Uint8Array} id3Data - The ID3 data containing one or more ID3 tags\n * @return {ID3.Frame[]} - Array of ID3 frame objects\n */\nexport const getID3Frames = (id3Data: Uint8Array): Frame[] => {\n  let offset = 0;\n  const frames: Frame[] = [];\n\n  while (isHeader(id3Data, offset)) {\n    const size = readSize(id3Data, offset + 6);\n    // skip past ID3 header\n    offset += 10;\n    const end = offset + size;\n    // loop through frames in the ID3 tag\n    while (offset + 8 < end) {\n      const frameData: RawFrame = getFrameData(id3Data.subarray(offset));\n      const frame: Frame | undefined = decodeFrame(frameData);\n      if (frame) {\n        frames.push(frame);\n      }\n\n      // skip frame header and frame data\n      offset += frameData.size + 10;\n    }\n\n    if (isFooter(id3Data, offset)) {\n      offset += 10;\n    }\n  }\n\n  return frames;\n};\n\nexport const decodeFrame = (frame: RawFrame): Frame | undefined => {\n  if (frame.type === 'PRIV') {\n    return decodePrivFrame(frame);\n  } else if (frame.type[0] === 'W') {\n    return decodeURLFrame(frame);\n  }\n\n  return decodeTextFrame(frame);\n};\n\nconst decodePrivFrame = (\n  frame: RawFrame\n): DecodedFrame<ArrayBuffer> | undefined => {\n  /*\n  Format: <text string>\\0<binary data>\n  */\n  if (frame.size < 2) {\n    return undefined;\n  }\n\n  const owner = utf8ArrayToStr(frame.data, true);\n  const privateData = new Uint8Array(frame.data.subarray(owner.length + 1));\n\n  return { key: frame.type, info: owner, data: privateData.buffer };\n};\n\nconst decodeTextFrame = (frame: RawFrame): DecodedFrame<string> | undefined => {\n  if (frame.size < 2) {\n    return undefined;\n  }\n\n  if (frame.type === 'TXXX') {\n    /*\n    Format:\n    [0]   = {Text Encoding}\n    [1-?] = {Description}\\0{Value}\n    */\n    let index = 1;\n    const description = utf8ArrayToStr(frame.data.subarray(index), true);\n\n    index += description.length + 1;\n    const value = utf8ArrayToStr(frame.data.subarray(index));\n\n    return { key: frame.type, info: description, data: value };\n  }\n  /*\n  Format:\n  [0]   = {Text Encoding}\n  [1-?] = {Value}\n  */\n  const text = utf8ArrayToStr(frame.data.subarray(1));\n  return { key: frame.type, data: text };\n};\n\nconst decodeURLFrame = (frame: RawFrame): DecodedFrame<string> | undefined => {\n  if (frame.type === 'WXXX') {\n    /*\n    Format:\n    [0]   = {Text Encoding}\n    [1-?] = {Description}\\0{URL}\n    */\n    if (frame.size < 2) {\n      return undefined;\n    }\n\n    let index = 1;\n    const description: string = utf8ArrayToStr(\n      frame.data.subarray(index),\n      true\n    );\n\n    index += description.length + 1;\n    const value: string = utf8ArrayToStr(frame.data.subarray(index));\n\n    return { key: frame.type, info: description, data: value };\n  }\n  /*\n  Format:\n  [0-?] = {URL}\n  */\n  const url: string = utf8ArrayToStr(frame.data);\n  return { key: frame.type, data: url };\n};\n\nconst readTimeStamp = (\n  timeStampFrame: DecodedFrame<ArrayBuffer>\n): number | undefined => {\n  if (timeStampFrame.data.byteLength === 8) {\n    const data = new Uint8Array(timeStampFrame.data);\n    // timestamp is 33 bit expressed as a big-endian eight-octet number,\n    // with the upper 31 bits set to zero.\n    const pts33Bit = data[3] & 0x1;\n    let timestamp =\n      (data[4] << 23) + (data[5] << 15) + (data[6] << 7) + data[7];\n    timestamp /= 45;\n\n    if (pts33Bit) {\n      timestamp += 47721858.84;\n    } // 2^32 / 90\n\n    return Math.round(timestamp);\n  }\n\n  return undefined;\n};\n\n// http://stackoverflow.com/questions/8936984/uint8array-to-string-in-javascript/22373197\n// http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\n/* utf.js - UTF-8 <=> UTF-16 convertion\n *\n * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0\n * LastModified: Dec 25 1999\n * This library is free.  You can redistribute it and/or modify it.\n */\nexport const utf8ArrayToStr = (\n  array: Uint8Array,\n  exitOnNull: boolean = false\n): string => {\n  const decoder = getTextDecoder();\n  if (decoder) {\n    const decoded = decoder.decode(array);\n\n    if (exitOnNull) {\n      // grab up to the first null\n      const idx = decoded.indexOf('\\0');\n      return idx !== -1 ? decoded.substring(0, idx) : decoded;\n    }\n\n    // remove any null characters\n    return decoded.replace(/\\0/g, '');\n  }\n\n  const len = array.length;\n  let c;\n  let char2;\n  let char3;\n  let out = '';\n  let i = 0;\n  while (i < len) {\n    c = array[i++];\n    if (c === 0x00 && exitOnNull) {\n      return out;\n    } else if (c === 0x00 || c === 0x03) {\n      // If the character is 3 (END_OF_TEXT) or 0 (NULL) then skip it\n      continue;\n    }\n    switch (c >> 4) {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n        // 0xxxxxxx\n        out += String.fromCharCode(c);\n        break;\n      case 12:\n      case 13:\n        // 110x xxxx   10xx xxxx\n        char2 = array[i++];\n        out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\n        break;\n      case 14:\n        // 1110 xxxx  10xx xxxx  10xx xxxx\n        char2 = array[i++];\n        char3 = array[i++];\n        out += String.fromCharCode(\n          ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\n        );\n        break;\n      default:\n    }\n  }\n  return out;\n};\n\nexport const testables = {\n  decodeTextFrame: decodeTextFrame,\n};\n\nlet decoder: TextDecoder;\n\nfunction getTextDecoder() {\n  if (!decoder && typeof self.TextDecoder !== 'undefined') {\n    decoder = new self.TextDecoder('utf-8');\n  }\n\n  return decoder;\n}\n","/**\n * MP3 demuxer\n */\nimport BaseAudioDemuxer from './base-audio-demuxer';\nimport * as ID3 from '../demux/id3';\nimport { logger } from '../utils/logger';\nimport * as MpegAudio from './mpegaudio';\n\nclass MP3Demuxer extends BaseAudioDemuxer {\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    super.resetInitSegment(initSegment, audioCodec, videoCodec, trackDuration);\n    this._audioTrack = {\n      container: 'audio/mpeg',\n      type: 'audio',\n      id: 2,\n      pid: -1,\n      sequenceNumber: 0,\n      segmentCodec: 'mp3',\n      samples: [],\n      manifestCodec: audioCodec,\n      duration: trackDuration,\n      inputTimeScale: 90000,\n      dropped: 0,\n    };\n  }\n\n  static probe(data): boolean {\n    if (!data) {\n      return false;\n    }\n\n    // check if data contains ID3 timestamp and MPEG sync word\n    // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1\n    // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)\n    // More info http://www.mp3-tech.org/programmer/frame_header.html\n    const id3Data = ID3.getID3Data(data, 0) || [];\n    let offset = id3Data.length;\n\n    for (let length = data.length; offset < length; offset++) {\n      if (MpegAudio.probe(data, offset)) {\n        logger.log('MPEG Audio sync word found !');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canParse(data, offset) {\n    return MpegAudio.canParse(data, offset);\n  }\n\n  appendFrame(track, data, offset) {\n    if (this.basePTS === null) {\n      return;\n    }\n    return MpegAudio.appendFrame(\n      track,\n      data,\n      offset,\n      this.basePTS,\n      this.frameIndex\n    );\n  }\n}\n\nexport default MP3Demuxer;\n","/**\n * MP4 demuxer\n */\nimport {\n  Demuxer,\n  DemuxerResult,\n  PassthroughTrack,\n  DemuxedAudioTrack,\n  DemuxedUserdataTrack,\n  DemuxedMetadataTrack,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport {\n  findBox,\n  segmentValidRange,\n  appendUint8Array,\n  parseEmsg,\n  parseSamples,\n  parseInitSegment,\n  RemuxerTrackIdConfig,\n} from '../utils/mp4-tools';\nimport { dummyTrack } from './dummy-demuxed-track';\nimport type { HlsEventEmitter } from '../events';\nimport type { HlsConfig } from '../config';\n\nconst emsgSchemePattern = /\\/emsg[-/]ID3/i;\n\nclass MP4Demuxer implements Demuxer {\n  private remainderData: Uint8Array | null = null;\n  private timeOffset: number = 0;\n  private config: HlsConfig;\n  private videoTrack?: PassthroughTrack;\n  private audioTrack?: DemuxedAudioTrack;\n  private id3Track?: DemuxedMetadataTrack;\n  private txtTrack?: DemuxedUserdataTrack;\n\n  constructor(observer: HlsEventEmitter, config: HlsConfig) {\n    this.config = config;\n  }\n\n  public resetTimeStamp() {}\n\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    const videoTrack = (this.videoTrack = dummyTrack(\n      'video',\n      1\n    ) as PassthroughTrack);\n    const audioTrack = (this.audioTrack = dummyTrack(\n      'audio',\n      1\n    ) as DemuxedAudioTrack);\n    const captionTrack = (this.txtTrack = dummyTrack(\n      'text',\n      1\n    ) as DemuxedUserdataTrack);\n\n    this.id3Track = dummyTrack('id3', 1) as DemuxedMetadataTrack;\n    this.timeOffset = 0;\n\n    if (!initSegment || !initSegment.byteLength) {\n      return;\n    }\n    const initData = parseInitSegment(initSegment);\n\n    if (initData.video) {\n      const { id, timescale, codec } = initData.video;\n      videoTrack.id = id;\n      videoTrack.timescale = captionTrack.timescale = timescale;\n      videoTrack.codec = codec;\n    }\n\n    if (initData.audio) {\n      const { id, timescale, codec } = initData.audio;\n      audioTrack.id = id;\n      audioTrack.timescale = timescale;\n      audioTrack.codec = codec;\n    }\n\n    captionTrack.id = RemuxerTrackIdConfig.text;\n    videoTrack.sampleDuration = 0;\n    videoTrack.duration = audioTrack.duration = trackDuration;\n  }\n\n  public resetContiguity(): void {}\n\n  static probe(data: Uint8Array) {\n    // ensure we find a moof box in the first 16 kB\n    data = data.length > 16384 ? data.subarray(0, 16384) : data;\n    return findBox(data, ['moof']).length > 0;\n  }\n\n  public demux(data: Uint8Array, timeOffset: number): DemuxerResult {\n    this.timeOffset = timeOffset;\n    // Load all data into the avc track. The CMAF remuxer will look for the data in the samples object; the rest of the fields do not matter\n    let videoSamples = data;\n    const videoTrack = this.videoTrack as PassthroughTrack;\n    const textTrack = this.txtTrack as DemuxedUserdataTrack;\n    if (this.config.progressive) {\n      // Split the bytestream into two ranges: one encompassing all data up until the start of the last moof, and everything else.\n      // This is done to guarantee that we're sending valid data to MSE - when demuxing progressively, we have no guarantee\n      // that the fetch loader gives us flush moof+mdat pairs. If we push jagged data to MSE, it will throw an exception.\n      if (this.remainderData) {\n        videoSamples = appendUint8Array(this.remainderData, data);\n      }\n      const segmentedData = segmentValidRange(videoSamples);\n      this.remainderData = segmentedData.remainder;\n      videoTrack.samples = segmentedData.valid || new Uint8Array();\n    } else {\n      videoTrack.samples = videoSamples;\n    }\n\n    const id3Track = this.extractID3Track(videoTrack, timeOffset);\n    textTrack.samples = parseSamples(timeOffset, videoTrack);\n\n    return {\n      videoTrack,\n      audioTrack: this.audioTrack as DemuxedAudioTrack,\n      id3Track,\n      textTrack: this.txtTrack as DemuxedUserdataTrack,\n    };\n  }\n\n  public flush() {\n    const timeOffset = this.timeOffset;\n    const videoTrack = this.videoTrack as PassthroughTrack;\n    const textTrack = this.txtTrack as DemuxedUserdataTrack;\n    videoTrack.samples = this.remainderData || new Uint8Array();\n    this.remainderData = null;\n\n    const id3Track = this.extractID3Track(videoTrack, this.timeOffset);\n    textTrack.samples = parseSamples(timeOffset, videoTrack);\n\n    return {\n      videoTrack,\n      audioTrack: dummyTrack() as DemuxedAudioTrack,\n      id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  private extractID3Track(\n    videoTrack: PassthroughTrack,\n    timeOffset: number\n  ): DemuxedMetadataTrack {\n    const id3Track = this.id3Track as DemuxedMetadataTrack;\n    if (videoTrack.samples.length) {\n      const emsgs = findBox(videoTrack.samples, ['emsg']);\n      if (emsgs) {\n        emsgs.forEach((data: Uint8Array) => {\n          const emsgInfo = parseEmsg(data);\n          if (emsgSchemePattern.test(emsgInfo.schemeIdUri)) {\n            const pts = Number.isFinite(emsgInfo.presentationTime)\n              ? emsgInfo.presentationTime! / emsgInfo.timeScale\n              : timeOffset +\n                emsgInfo.presentationTimeDelta! / emsgInfo.timeScale;\n            let duration =\n              emsgInfo.eventDuration === 0xffffffff\n                ? Number.POSITIVE_INFINITY\n                : emsgInfo.eventDuration / emsgInfo.timeScale;\n            // Safari takes anything <= 0.001 seconds and maps it to Infinity\n            if (duration <= 0.001) {\n              duration = Number.POSITIVE_INFINITY;\n            }\n            const payload = emsgInfo.payload;\n            id3Track.samples.push({\n              data: payload,\n              len: payload.byteLength,\n              dts: pts,\n              pts: pts,\n              type: MetadataSchema.emsg,\n              duration: duration,\n            });\n          }\n        });\n      }\n    }\n    return id3Track;\n  }\n\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    return Promise.reject(\n      new Error('The MP4 demuxer does not support SAMPLE-AES decryption')\n    );\n  }\n\n  destroy() {}\n}\n\nexport default MP4Demuxer;\n","/**\n *  MPEG parser helper\n */\nimport { DemuxedAudioTrack } from '../types/demuxer';\n\nlet chromeVersion: number | null = null;\n\nconst BitratesMap = [\n  32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56,\n  64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80,\n  96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144,\n  160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144,\n  160,\n];\n\nconst SamplingRateMap = [\n  44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000,\n];\n\nconst SamplesCoefficients = [\n  // MPEG 2.5\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n  // Reserved\n  [\n    0, // Reserved\n    0, // Layer3\n    0, // Layer2\n    0, // Layer1\n  ],\n  // MPEG 2\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n  // MPEG 1\n  [\n    0, // Reserved\n    144, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n];\n\nconst BytesInSlot = [\n  0, // Reserved\n  1, // Layer3\n  1, // Layer2\n  4, // Layer1\n];\n\nexport function appendFrame(\n  track: DemuxedAudioTrack,\n  data: Uint8Array,\n  offset: number,\n  pts: number,\n  frameIndex: number\n) {\n  // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference\n  if (offset + 24 > data.length) {\n    return;\n  }\n\n  const header = parseHeader(data, offset);\n  if (header && offset + header.frameLength <= data.length) {\n    const frameDuration = (header.samplesPerFrame * 90000) / header.sampleRate;\n    const stamp = pts + frameIndex * frameDuration;\n    const sample = {\n      unit: data.subarray(offset, offset + header.frameLength),\n      pts: stamp,\n      dts: stamp,\n    };\n\n    track.config = [];\n    track.channelCount = header.channelCount;\n    track.samplerate = header.sampleRate;\n    track.samples.push(sample);\n\n    return { sample, length: header.frameLength, missing: 0 };\n  }\n}\n\nexport function parseHeader(data: Uint8Array, offset: number) {\n  const mpegVersion = (data[offset + 1] >> 3) & 3;\n  const mpegLayer = (data[offset + 1] >> 1) & 3;\n  const bitRateIndex = (data[offset + 2] >> 4) & 15;\n  const sampleRateIndex = (data[offset + 2] >> 2) & 3;\n  if (\n    mpegVersion !== 1 &&\n    bitRateIndex !== 0 &&\n    bitRateIndex !== 15 &&\n    sampleRateIndex !== 3\n  ) {\n    const paddingBit = (data[offset + 2] >> 1) & 1;\n    const channelMode = data[offset + 3] >> 6;\n    const columnInBitrates =\n      mpegVersion === 3 ? 3 - mpegLayer : mpegLayer === 3 ? 3 : 4;\n    const bitRate =\n      BitratesMap[columnInBitrates * 14 + bitRateIndex - 1] * 1000;\n    const columnInSampleRates =\n      mpegVersion === 3 ? 0 : mpegVersion === 2 ? 1 : 2;\n    const sampleRate =\n      SamplingRateMap[columnInSampleRates * 3 + sampleRateIndex];\n    const channelCount = channelMode === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)\n    const sampleCoefficient = SamplesCoefficients[mpegVersion][mpegLayer];\n    const bytesInSlot = BytesInSlot[mpegLayer];\n    const samplesPerFrame = sampleCoefficient * 8 * bytesInSlot;\n    const frameLength =\n      Math.floor((sampleCoefficient * bitRate) / sampleRate + paddingBit) *\n      bytesInSlot;\n\n    if (chromeVersion === null) {\n      const userAgent = navigator.userAgent || '';\n      const result = userAgent.match(/Chrome\\/(\\d+)/i);\n      chromeVersion = result ? parseInt(result[1]) : 0;\n    }\n    const needChromeFix = !!chromeVersion && chromeVersion <= 87;\n\n    if (\n      needChromeFix &&\n      mpegLayer === 2 &&\n      bitRate >= 224000 &&\n      channelMode === 0\n    ) {\n      // Work around bug in Chromium by setting channelMode to dual-channel (01) instead of stereo (00)\n      data[offset + 3] = data[offset + 3] | 0x80;\n    }\n\n    return { sampleRate, channelCount, frameLength, samplesPerFrame };\n  }\n}\n\nexport function isHeaderPattern(data: Uint8Array, offset: number): boolean {\n  return (\n    data[offset] === 0xff &&\n    (data[offset + 1] & 0xe0) === 0xe0 &&\n    (data[offset + 1] & 0x06) !== 0x00\n  );\n}\n\nexport function isHeader(data: Uint8Array, offset: number): boolean {\n  // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1\n  // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)\n  // More info http://www.mp3-tech.org/programmer/frame_header.html\n  return offset + 1 < data.length && isHeaderPattern(data, offset);\n}\n\nexport function canParse(data: Uint8Array, offset: number): boolean {\n  const headerSize = 4;\n\n  return isHeaderPattern(data, offset) && headerSize <= data.length - offset;\n}\n\nexport function probe(data: Uint8Array, offset: number): boolean {\n  // same as isHeader but we also check that MPEG frame follows last MPEG frame\n  // or end of data is reached\n  if (offset + 1 < data.length && isHeaderPattern(data, offset)) {\n    // MPEG header Length\n    const headerLength = 4;\n    // MPEG frame Length\n    const header = parseHeader(data, offset);\n    let frameLength = headerLength;\n    if (header?.frameLength) {\n      frameLength = header.frameLength;\n    }\n\n    const newOffset = offset + frameLength;\n    return newOffset === data.length || isHeader(data, newOffset);\n  }\n  return false;\n}\n","/**\n * SAMPLE-AES decrypter\n */\n\nimport { HlsConfig } from '../config';\nimport Decrypter from '../crypt/decrypter';\nimport { HlsEventEmitter } from '../events';\nimport type {\n  AudioSample,\n  AvcSample,\n  AvcSampleUnit,\n  DemuxedVideoTrack,\n  KeyData,\n} from '../types/demuxer';\nimport { discardEPB } from '../utils/mp4-tools';\n\nclass SampleAesDecrypter {\n  private keyData: KeyData;\n  private decrypter: Decrypter;\n\n  constructor(observer: HlsEventEmitter, config: HlsConfig, keyData: KeyData) {\n    this.keyData = keyData;\n    this.decrypter = new Decrypter(config, {\n      removePKCS7Padding: false,\n    });\n  }\n\n  decryptBuffer(encryptedData: Uint8Array | ArrayBuffer): Promise<ArrayBuffer> {\n    return this.decrypter.decrypt(\n      encryptedData,\n      this.keyData.key.buffer,\n      this.keyData.iv.buffer\n    );\n  }\n\n  // AAC - encrypt all full 16 bytes blocks starting from offset 16\n  private decryptAacSample(\n    samples: AudioSample[],\n    sampleIndex: number,\n    callback: () => void\n  ) {\n    const curUnit = samples[sampleIndex].unit;\n    if (curUnit.length <= 16) {\n      // No encrypted portion in this sample (first 16 bytes is not\n      // encrypted, see https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/HLS_Sample_Encryption/Encryption/Encryption.html),\n      return;\n    }\n    const encryptedData = curUnit.subarray(\n      16,\n      curUnit.length - (curUnit.length % 16)\n    );\n    const encryptedBuffer = encryptedData.buffer.slice(\n      encryptedData.byteOffset,\n      encryptedData.byteOffset + encryptedData.length\n    );\n\n    this.decryptBuffer(encryptedBuffer).then((decryptedBuffer: ArrayBuffer) => {\n      const decryptedData = new Uint8Array(decryptedBuffer);\n      curUnit.set(decryptedData, 16);\n\n      if (!this.decrypter.isSync()) {\n        this.decryptAacSamples(samples, sampleIndex + 1, callback);\n      }\n    });\n  }\n\n  decryptAacSamples(\n    samples: AudioSample[],\n    sampleIndex: number,\n    callback: () => void\n  ) {\n    for (; ; sampleIndex++) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      if (samples[sampleIndex].unit.length < 32) {\n        continue;\n      }\n\n      this.decryptAacSample(samples, sampleIndex, callback);\n\n      if (!this.decrypter.isSync()) {\n        return;\n      }\n    }\n  }\n\n  // AVC - encrypt one 16 bytes block out of ten, starting from offset 32\n  getAvcEncryptedData(decodedData: Uint8Array) {\n    const encryptedDataLen =\n      Math.floor((decodedData.length - 48) / 160) * 16 + 16;\n    const encryptedData = new Int8Array(encryptedDataLen);\n    let outputPos = 0;\n    for (\n      let inputPos = 32;\n      inputPos < decodedData.length - 16;\n      inputPos += 160, outputPos += 16\n    ) {\n      encryptedData.set(\n        decodedData.subarray(inputPos, inputPos + 16),\n        outputPos\n      );\n    }\n\n    return encryptedData;\n  }\n\n  getAvcDecryptedUnit(\n    decodedData: Uint8Array,\n    decryptedData: ArrayLike<number> | ArrayBuffer | SharedArrayBuffer\n  ) {\n    const uint8DecryptedData = new Uint8Array(decryptedData);\n    let inputPos = 0;\n    for (\n      let outputPos = 32;\n      outputPos < decodedData.length - 16;\n      outputPos += 160, inputPos += 16\n    ) {\n      decodedData.set(\n        uint8DecryptedData.subarray(inputPos, inputPos + 16),\n        outputPos\n      );\n    }\n\n    return decodedData;\n  }\n\n  decryptAvcSample(\n    samples: AvcSample[],\n    sampleIndex: number,\n    unitIndex: number,\n    callback: () => void,\n    curUnit: AvcSampleUnit\n  ) {\n    const decodedData = discardEPB(curUnit.data);\n    const encryptedData = this.getAvcEncryptedData(decodedData);\n\n    this.decryptBuffer(encryptedData.buffer).then(\n      (decryptedBuffer: ArrayBuffer) => {\n        curUnit.data = this.getAvcDecryptedUnit(decodedData, decryptedBuffer);\n\n        if (!this.decrypter.isSync()) {\n          this.decryptAvcSamples(samples, sampleIndex, unitIndex + 1, callback);\n        }\n      }\n    );\n  }\n\n  decryptAvcSamples(\n    samples: DemuxedVideoTrack['samples'],\n    sampleIndex: number,\n    unitIndex: number,\n    callback: () => void\n  ) {\n    if (samples instanceof Uint8Array) {\n      throw new Error('Cannot decrypt samples of type Uint8Array');\n    }\n\n    for (; ; sampleIndex++, unitIndex = 0) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      const curUnits = samples[sampleIndex].units;\n      for (; ; unitIndex++) {\n        if (unitIndex >= curUnits.length) {\n          break;\n        }\n\n        const curUnit = curUnits[unitIndex];\n        if (\n          curUnit.data.length <= 48 ||\n          (curUnit.type !== 1 && curUnit.type !== 5)\n        ) {\n          continue;\n        }\n\n        this.decryptAvcSample(\n          samples,\n          sampleIndex,\n          unitIndex,\n          callback,\n          curUnit\n        );\n\n        if (!this.decrypter.isSync()) {\n          return;\n        }\n      }\n    }\n  }\n}\n\nexport default SampleAesDecrypter;\n","import work from './webworkify-webpack';\nimport { Events } from '../events';\nimport Transmuxer, {\n  TransmuxConfig,\n  TransmuxState,\n  isPromise,\n} from '../demux/transmuxer';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { getMediaSource } from '../utils/mediasource-helper';\nimport { EventEmitter } from 'eventemitter3';\nimport { Fragment, Part } from '../loader/fragment';\nimport type { ChunkMetadata, TransmuxerResult } from '../types/transmuxer';\nimport type Hls from '../hls';\nimport type { HlsEventEmitter } from '../events';\nimport type { PlaylistLevelType } from '../types/loader';\nimport type { TypeSupported } from './tsdemuxer';\n\nconst MediaSource = getMediaSource() || { isTypeSupported: () => false };\n\nexport default class TransmuxerInterface {\n  private hls: Hls;\n  private id: PlaylistLevelType;\n  private observer: HlsEventEmitter;\n  private frag: Fragment | null = null;\n  private part: Part | null = null;\n  private useWorker: boolean;\n  private worker: any;\n  private onwmsg?: Function;\n  private transmuxer: Transmuxer | null = null;\n  private onTransmuxComplete: (transmuxResult: TransmuxerResult) => void;\n  private onFlush: (chunkMeta: ChunkMetadata) => void;\n\n  constructor(\n    hls: Hls,\n    id: PlaylistLevelType,\n    onTransmuxComplete: (transmuxResult: TransmuxerResult) => void,\n    onFlush: (chunkMeta: ChunkMetadata) => void\n  ) {\n    const config = hls.config;\n    this.hls = hls;\n    this.id = id;\n    this.useWorker = !!config.enableWorker;\n    this.onTransmuxComplete = onTransmuxComplete;\n    this.onFlush = onFlush;\n\n    const forwardMessage = (ev, data) => {\n      data = data || {};\n      data.frag = this.frag;\n      data.id = this.id;\n      this.hls.trigger(ev, data);\n    };\n\n    // forward events to main thread\n    this.observer = new EventEmitter() as HlsEventEmitter;\n    this.observer.on(Events.FRAG_DECRYPTED, forwardMessage);\n    this.observer.on(Events.ERROR, forwardMessage);\n\n    const typeSupported: TypeSupported = {\n      mp4: MediaSource.isTypeSupported('video/mp4'),\n      mpeg: MediaSource.isTypeSupported('audio/mpeg'),\n      mp3: MediaSource.isTypeSupported('audio/mp4; codecs=\"mp3\"'),\n    };\n    // navigator.vendor is not always available in Web Worker\n    // refer to https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator\n    const vendor = navigator.vendor;\n    if (this.useWorker && typeof Worker !== 'undefined') {\n      logger.log('demuxing in webworker');\n      let worker;\n      try {\n        worker = this.worker = work(\n          require.resolve('../demux/transmuxer-worker.ts')\n        );\n        this.onwmsg = this.onWorkerMessage.bind(this);\n        worker.addEventListener('message', this.onwmsg);\n        worker.onerror = (event) => {\n          this.useWorker = false;\n          logger.warn('Exception in webworker, fallback to inline');\n          this.hls.trigger(Events.ERROR, {\n            type: ErrorTypes.OTHER_ERROR,\n            details: ErrorDetails.INTERNAL_EXCEPTION,\n            fatal: false,\n            event: 'demuxerWorker',\n            error: new Error(\n              `${event.message}  (${event.filename}:${event.lineno})`\n            ),\n          });\n        };\n        worker.postMessage({\n          cmd: 'init',\n          typeSupported: typeSupported,\n          vendor: vendor,\n          id: id,\n          config: JSON.stringify(config),\n        });\n      } catch (err) {\n        logger.warn('Error in worker:', err);\n        logger.error(\n          'Error while initializing DemuxerWorker, fallback to inline'\n        );\n        if (worker) {\n          // revoke the Object URL that was used to create transmuxer worker, so as not to leak it\n          self.URL.revokeObjectURL(worker.objectURL);\n        }\n        this.transmuxer = new Transmuxer(\n          this.observer,\n          typeSupported,\n          config,\n          vendor,\n          id\n        );\n        this.worker = null;\n      }\n    } else {\n      this.transmuxer = new Transmuxer(\n        this.observer,\n        typeSupported,\n        config,\n        vendor,\n        id\n      );\n    }\n  }\n\n  destroy(): void {\n    const w = this.worker;\n    if (w) {\n      w.removeEventListener('message', this.onwmsg);\n      w.terminate();\n      this.worker = null;\n      this.onwmsg = undefined;\n    } else {\n      const transmuxer = this.transmuxer;\n      if (transmuxer) {\n        transmuxer.destroy();\n        this.transmuxer = null;\n      }\n    }\n    const observer = this.observer;\n    if (observer) {\n      observer.removeAllListeners();\n    }\n    this.frag = null;\n    // @ts-ignore\n    this.observer = null;\n    // @ts-ignore\n    this.hls = null;\n  }\n\n  push(\n    data: ArrayBuffer,\n    initSegmentData: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    frag: Fragment,\n    part: Part | null,\n    duration: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata,\n    defaultInitPTS?: number\n  ): void {\n    chunkMeta.transmuxing.start = self.performance.now();\n    const { transmuxer, worker } = this;\n    const timeOffset = part ? part.start : frag.start;\n    // TODO: push \"clear-lead\" decrypt data for unencrypted fragments in streams with encrypted ones\n    const decryptdata = frag.decryptdata;\n    const lastFrag = this.frag;\n\n    const discontinuity = !(lastFrag && frag.cc === lastFrag.cc);\n    const trackSwitch = !(lastFrag && chunkMeta.level === lastFrag.level);\n    const snDiff = lastFrag ? chunkMeta.sn - (lastFrag.sn as number) : -1;\n    const partDiff = this.part ? chunkMeta.part - this.part.index : -1;\n    const progressive =\n      snDiff === 0 &&\n      chunkMeta.id > 1 &&\n      chunkMeta.id === lastFrag?.stats.chunkCount;\n    const contiguous =\n      !trackSwitch &&\n      (snDiff === 1 ||\n        (snDiff === 0 && (partDiff === 1 || (progressive && partDiff <= 0))));\n    const now = self.performance.now();\n\n    if (trackSwitch || snDiff || frag.stats.parsing.start === 0) {\n      frag.stats.parsing.start = now;\n    }\n    if (part && (partDiff || !contiguous)) {\n      part.stats.parsing.start = now;\n    }\n    const initSegmentChange = !(\n      lastFrag && frag.initSegment?.url === lastFrag.initSegment?.url\n    );\n    const state = new TransmuxState(\n      discontinuity,\n      contiguous,\n      accurateTimeOffset,\n      trackSwitch,\n      timeOffset,\n      initSegmentChange\n    );\n    if (!contiguous || discontinuity || initSegmentChange) {\n      logger.log(`[transmuxer-interface, ${frag.type}]: Starting new transmux session for sn: ${chunkMeta.sn} p: ${chunkMeta.part} level: ${chunkMeta.level} id: ${chunkMeta.id}\n        discontinuity: ${discontinuity}\n        trackSwitch: ${trackSwitch}\n        contiguous: ${contiguous}\n        accurateTimeOffset: ${accurateTimeOffset}\n        timeOffset: ${timeOffset}\n        initSegmentChange: ${initSegmentChange}`);\n      const config = new TransmuxConfig(\n        audioCodec,\n        videoCodec,\n        initSegmentData,\n        duration,\n        defaultInitPTS\n      );\n      this.configureTransmuxer(config);\n    }\n\n    this.frag = frag;\n    this.part = part;\n\n    // Frags with sn of 'initSegment' are not transmuxed\n    if (worker) {\n      // post fragment payload as transferable objects for ArrayBuffer (no copy)\n      worker.postMessage(\n        {\n          cmd: 'demux',\n          data,\n          decryptdata,\n          chunkMeta,\n          state,\n        },\n        data instanceof ArrayBuffer ? [data] : []\n      );\n    } else if (transmuxer) {\n      const transmuxResult = transmuxer.push(\n        data,\n        decryptdata,\n        chunkMeta,\n        state\n      );\n      if (isPromise(transmuxResult)) {\n        transmuxer.async = true;\n        transmuxResult\n          .then((data) => {\n            this.handleTransmuxComplete(data);\n          })\n          .catch((error) => {\n            this.transmuxerError(\n              error,\n              chunkMeta,\n              'transmuxer-interface push error'\n            );\n          });\n      } else {\n        transmuxer.async = false;\n        this.handleTransmuxComplete(transmuxResult as TransmuxerResult);\n      }\n    }\n  }\n\n  flush(chunkMeta: ChunkMetadata) {\n    chunkMeta.transmuxing.start = self.performance.now();\n    const { transmuxer, worker } = this;\n    if (worker) {\n      1;\n      worker.postMessage({\n        cmd: 'flush',\n        chunkMeta,\n      });\n    } else if (transmuxer) {\n      let transmuxResult = transmuxer.flush(chunkMeta);\n      const asyncFlush = isPromise(transmuxResult);\n      if (asyncFlush || transmuxer.async) {\n        if (!isPromise(transmuxResult)) {\n          transmuxResult = Promise.resolve(transmuxResult);\n        }\n        transmuxResult\n          .then((data) => {\n            this.handleFlushResult(data, chunkMeta);\n          })\n          .catch((error) => {\n            this.transmuxerError(\n              error,\n              chunkMeta,\n              'transmuxer-interface flush error'\n            );\n          });\n      } else {\n        this.handleFlushResult(\n          transmuxResult as Array<TransmuxerResult>,\n          chunkMeta\n        );\n      }\n    }\n  }\n\n  private transmuxerError(\n    error: Error,\n    chunkMeta: ChunkMetadata,\n    reason: string\n  ) {\n    if (!this.hls) {\n      return;\n    }\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.FRAG_PARSING_ERROR,\n      chunkMeta,\n      fatal: false,\n      error,\n      err: error,\n      reason,\n    });\n  }\n\n  private handleFlushResult(\n    results: Array<TransmuxerResult>,\n    chunkMeta: ChunkMetadata\n  ) {\n    results.forEach((result) => {\n      this.handleTransmuxComplete(result);\n    });\n    this.onFlush(chunkMeta);\n  }\n\n  private onWorkerMessage(ev: any): void {\n    const data = ev.data;\n    const hls = this.hls;\n    switch (data.event) {\n      case 'init': {\n        // revoke the Object URL that was used to create transmuxer worker, so as not to leak it\n        self.URL.revokeObjectURL(this.worker.objectURL);\n        break;\n      }\n\n      case 'transmuxComplete': {\n        this.handleTransmuxComplete(data.data);\n        break;\n      }\n\n      case 'flush': {\n        this.onFlush(data.data);\n        break;\n      }\n\n      // pass logs from the worker thread to the main logger\n      case 'workerLog':\n        if (logger[data.data.logType]) {\n          logger[data.data.logType](data.data.message);\n        }\n        break;\n\n      default: {\n        data.data = data.data || {};\n        data.data.frag = this.frag;\n        data.data.id = this.id;\n        hls.trigger(data.event, data.data);\n        break;\n      }\n    }\n  }\n\n  private configureTransmuxer(config: TransmuxConfig) {\n    const { worker, transmuxer } = this;\n    if (worker) {\n      worker.postMessage({\n        cmd: 'configure',\n        config,\n      });\n    } else if (transmuxer) {\n      transmuxer.configure(config);\n    }\n  }\n\n  private handleTransmuxComplete(result: TransmuxerResult) {\n    result.chunkMeta.transmuxing.end = self.performance.now();\n    this.onTransmuxComplete(result);\n  }\n}\n","import Transmuxer, { isPromise } from '../demux/transmuxer';\nimport { Events } from '../events';\nimport { ILogFunction, enableLogs, logger } from '../utils/logger';\nimport { EventEmitter } from 'eventemitter3';\nimport type { RemuxedTrack, RemuxerResult } from '../types/remuxer';\nimport type { TransmuxerResult, ChunkMetadata } from '../types/transmuxer';\nimport { ErrorDetails, ErrorTypes } from '../errors';\n\nexport default function TransmuxerWorker(self) {\n  const observer = new EventEmitter();\n  const forwardMessage = (ev, data) => {\n    self.postMessage({ event: ev, data: data });\n  };\n\n  // forward events to main thread\n  observer.on(Events.FRAG_DECRYPTED, forwardMessage);\n  observer.on(Events.ERROR, forwardMessage);\n\n  // forward logger events to main thread\n  const forwardWorkerLogs = () => {\n    for (const logFn in logger) {\n      const func: ILogFunction = (message?) => {\n        forwardMessage('workerLog', {\n          logType: logFn,\n          message,\n        });\n      };\n\n      logger[logFn] = func;\n    }\n  };\n\n  self.addEventListener('message', (ev) => {\n    const data = ev.data;\n    switch (data.cmd) {\n      case 'init': {\n        const config = JSON.parse(data.config);\n        self.transmuxer = new Transmuxer(\n          observer,\n          data.typeSupported,\n          config,\n          data.vendor,\n          data.id\n        );\n        enableLogs(config.debug, data.id);\n        forwardWorkerLogs();\n        forwardMessage('init', null);\n        break;\n      }\n      case 'configure': {\n        self.transmuxer.configure(data.config);\n        break;\n      }\n      case 'demux': {\n        const transmuxResult: TransmuxerResult | Promise<TransmuxerResult> =\n          self.transmuxer.push(\n            data.data,\n            data.decryptdata,\n            data.chunkMeta,\n            data.state\n          );\n        if (isPromise(transmuxResult)) {\n          self.transmuxer.async = true;\n          transmuxResult\n            .then((data) => {\n              emitTransmuxComplete(self, data);\n            })\n            .catch((error) => {\n              forwardMessage(Events.ERROR, {\n                type: ErrorTypes.MEDIA_ERROR,\n                details: ErrorDetails.FRAG_PARSING_ERROR,\n                chunkMeta: data.chunkMeta,\n                fatal: false,\n                error,\n                err: error,\n                reason: `transmuxer-worker push error`,\n              });\n            });\n        } else {\n          self.transmuxer.async = false;\n          emitTransmuxComplete(self, transmuxResult);\n        }\n        break;\n      }\n      case 'flush': {\n        const id = data.chunkMeta;\n        let transmuxResult = self.transmuxer.flush(id);\n        const asyncFlush = isPromise(transmuxResult);\n        if (asyncFlush || self.transmuxer.async) {\n          if (!isPromise(transmuxResult)) {\n            transmuxResult = Promise.resolve(transmuxResult);\n          }\n          transmuxResult\n            .then((results: Array<TransmuxerResult>) => {\n              handleFlushResult(self, results as Array<TransmuxerResult>, id);\n            })\n            .catch((error) => {\n              forwardMessage(Events.ERROR, {\n                type: ErrorTypes.MEDIA_ERROR,\n                details: ErrorDetails.FRAG_PARSING_ERROR,\n                chunkMeta: data.chunkMeta,\n                fatal: false,\n                error,\n                err: error,\n                reason: `transmuxer-worker flush error`,\n              });\n            });\n        } else {\n          handleFlushResult(\n            self,\n            transmuxResult as Array<TransmuxerResult>,\n            id\n          );\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  });\n}\n\nfunction emitTransmuxComplete(\n  self: any,\n  transmuxResult: TransmuxerResult\n): boolean {\n  if (isEmptyResult(transmuxResult.remuxResult)) {\n    return false;\n  }\n  const transferable: Array<ArrayBuffer> = [];\n  const { audio, video } = transmuxResult.remuxResult;\n  if (audio) {\n    addToTransferable(transferable, audio);\n  }\n  if (video) {\n    addToTransferable(transferable, video);\n  }\n  self.postMessage(\n    { event: 'transmuxComplete', data: transmuxResult },\n    transferable\n  );\n  return true;\n}\n\n// Converts data to a transferable object https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast)\n// in order to minimize message passing overhead\nfunction addToTransferable(\n  transferable: Array<ArrayBuffer>,\n  track: RemuxedTrack\n) {\n  if (track.data1) {\n    transferable.push(track.data1.buffer);\n  }\n  if (track.data2) {\n    transferable.push(track.data2.buffer);\n  }\n}\n\nfunction handleFlushResult(\n  self: any,\n  results: Array<TransmuxerResult>,\n  chunkMeta: ChunkMetadata\n) {\n  const parsed = results.reduce(\n    (parsed, result) => emitTransmuxComplete(self, result) || parsed,\n    false\n  );\n  if (!parsed) {\n    // Emit at least one \"transmuxComplete\" message even if media is not found to update stream-controller state to PARSING\n    self.postMessage({ event: 'transmuxComplete', data: results[0] });\n  }\n  self.postMessage({ event: 'flush', data: chunkMeta });\n}\n\nfunction isEmptyResult(remuxResult: RemuxerResult) {\n  return (\n    !remuxResult.audio &&\n    !remuxResult.video &&\n    !remuxResult.text &&\n    !remuxResult.id3 &&\n    !remuxResult.initSegment\n  );\n}\n","import type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport Decrypter from '../crypt/decrypter';\nimport AACDemuxer from '../demux/aacdemuxer';\nimport MP4Demuxer from '../demux/mp4demuxer';\nimport TSDemuxer, { TypeSupported } from '../demux/tsdemuxer';\nimport MP3Demuxer from '../demux/mp3demuxer';\nimport MP4Remuxer from '../remux/mp4-remuxer';\nimport PassThroughRemuxer from '../remux/passthrough-remuxer';\nimport { logger } from '../utils/logger';\nimport type { Demuxer, DemuxerResult, KeyData } from '../types/demuxer';\nimport type { Remuxer } from '../types/remuxer';\nimport type { TransmuxerResult, ChunkMetadata } from '../types/transmuxer';\nimport type { HlsConfig } from '../config';\nimport type { DecryptData } from '../loader/level-key';\nimport type { PlaylistLevelType } from '../types/loader';\n\nlet now;\n// performance.now() not available on WebWorker, at least on Safari Desktop\ntry {\n  now = self.performance.now.bind(self.performance);\n} catch (err) {\n  logger.debug('Unable to use Performance API on this environment');\n  now = self.Date.now;\n}\n\ntype MuxConfig =\n  | { demux: typeof MP4Demuxer; remux: typeof PassThroughRemuxer }\n  | { demux: typeof TSDemuxer; remux: typeof MP4Remuxer }\n  | { demux: typeof AACDemuxer; remux: typeof MP4Remuxer }\n  | { demux: typeof MP3Demuxer; remux: typeof MP4Remuxer };\n\nconst muxConfig: MuxConfig[] = [\n  { demux: MP4Demuxer, remux: PassThroughRemuxer },\n  { demux: TSDemuxer, remux: MP4Remuxer },\n  { demux: AACDemuxer, remux: MP4Remuxer },\n  { demux: MP3Demuxer, remux: MP4Remuxer },\n];\n\nexport default class Transmuxer {\n  public async: boolean = false;\n  private observer: HlsEventEmitter;\n  private typeSupported: TypeSupported;\n  private config: HlsConfig;\n  private vendor: string;\n  private id: PlaylistLevelType;\n  private demuxer?: Demuxer;\n  private remuxer?: Remuxer;\n  private decrypter?: Decrypter;\n  private probe!: Function;\n  private decryptionPromise: Promise<TransmuxerResult> | null = null;\n  private transmuxConfig!: TransmuxConfig;\n  private currentTransmuxState!: TransmuxState;\n\n  constructor(\n    observer: HlsEventEmitter,\n    typeSupported: TypeSupported,\n    config: HlsConfig,\n    vendor: string,\n    id: PlaylistLevelType\n  ) {\n    this.observer = observer;\n    this.typeSupported = typeSupported;\n    this.config = config;\n    this.vendor = vendor;\n    this.id = id;\n  }\n\n  configure(transmuxConfig: TransmuxConfig) {\n    this.transmuxConfig = transmuxConfig;\n    if (this.decrypter) {\n      this.decrypter.reset();\n    }\n  }\n\n  push(\n    data: ArrayBuffer,\n    decryptdata: DecryptData | null,\n    chunkMeta: ChunkMetadata,\n    state?: TransmuxState\n  ): TransmuxerResult | Promise<TransmuxerResult> {\n    const stats = chunkMeta.transmuxing;\n    stats.executeStart = now();\n\n    let uintData: Uint8Array = new Uint8Array(data);\n    const { currentTransmuxState, transmuxConfig } = this;\n    if (state) {\n      this.currentTransmuxState = state;\n    }\n\n    const {\n      contiguous,\n      discontinuity,\n      trackSwitch,\n      accurateTimeOffset,\n      timeOffset,\n      initSegmentChange,\n    } = state || currentTransmuxState;\n    const {\n      audioCodec,\n      videoCodec,\n      defaultInitPts,\n      duration,\n      initSegmentData,\n    } = transmuxConfig;\n\n    const keyData = getEncryptionType(uintData, decryptdata);\n    if (keyData && keyData.method === 'AES-128') {\n      const decrypter = this.getDecrypter();\n      // Software decryption is synchronous; webCrypto is not\n      if (decrypter.isSync()) {\n        // Software decryption is progressive. Progressive decryption may not return a result on each call. Any cached\n        // data is handled in the flush() call\n        let decryptedData = decrypter.softwareDecrypt(\n          uintData,\n          keyData.key.buffer,\n          keyData.iv.buffer\n        );\n        // For Low-Latency HLS Parts, decrypt in place, since part parsing is expected on push progress\n        const loadingParts = chunkMeta.part > -1;\n        if (loadingParts) {\n          decryptedData = decrypter.flush();\n        }\n        if (!decryptedData) {\n          stats.executeEnd = now();\n          return emptyResult(chunkMeta);\n        }\n        uintData = new Uint8Array(decryptedData);\n      } else {\n        this.decryptionPromise = decrypter\n          .webCryptoDecrypt(uintData, keyData.key.buffer, keyData.iv.buffer)\n          .then((decryptedData): TransmuxerResult => {\n            // Calling push here is important; if flush() is called while this is still resolving, this ensures that\n            // the decrypted data has been transmuxed\n            const result = this.push(\n              decryptedData,\n              null,\n              chunkMeta\n            ) as TransmuxerResult;\n            this.decryptionPromise = null;\n            return result;\n          });\n        return this.decryptionPromise!;\n      }\n    }\n\n    const resetMuxers = this.needsProbing(discontinuity, trackSwitch);\n    if (resetMuxers) {\n      this.configureTransmuxer(uintData);\n    }\n\n    if (discontinuity || trackSwitch || initSegmentChange || resetMuxers) {\n      this.resetInitSegment(\n        initSegmentData,\n        audioCodec,\n        videoCodec,\n        duration,\n        decryptdata\n      );\n    }\n\n    if (discontinuity || initSegmentChange || resetMuxers) {\n      this.resetInitialTimestamp(defaultInitPts);\n    }\n\n    if (!contiguous) {\n      this.resetContiguity();\n    }\n\n    const result = this.transmux(\n      uintData,\n      keyData,\n      timeOffset,\n      accurateTimeOffset,\n      chunkMeta\n    );\n    const currentState = this.currentTransmuxState;\n\n    currentState.contiguous = true;\n    currentState.discontinuity = false;\n    currentState.trackSwitch = false;\n\n    stats.executeEnd = now();\n    return result;\n  }\n\n  // Due to data caching, flush calls can produce more than one TransmuxerResult (hence the Array type)\n  flush(\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult[] | Promise<TransmuxerResult[]> {\n    const stats = chunkMeta.transmuxing;\n    stats.executeStart = now();\n\n    const { decrypter, currentTransmuxState, decryptionPromise } = this;\n\n    if (decryptionPromise) {\n      // Upon resolution, the decryption promise calls push() and returns its TransmuxerResult up the stack. Therefore\n      // only flushing is required for async decryption\n      return decryptionPromise.then(() => {\n        return this.flush(chunkMeta);\n      });\n    }\n\n    const transmuxResults: TransmuxerResult[] = [];\n    const { timeOffset } = currentTransmuxState;\n    if (decrypter) {\n      // The decrypter may have data cached, which needs to be demuxed. In this case we'll have two TransmuxResults\n      // This happens in the case that we receive only 1 push call for a segment (either for non-progressive downloads,\n      // or for progressive downloads with small segments)\n      const decryptedData = decrypter.flush();\n      if (decryptedData) {\n        // Push always returns a TransmuxerResult if decryptdata is null\n        transmuxResults.push(\n          this.push(decryptedData, null, chunkMeta) as TransmuxerResult\n        );\n      }\n    }\n\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      // If probing failed, then Hls.js has been given content its not able to handle\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal: true,\n        reason: 'no demux matching with content found',\n      });\n      stats.executeEnd = now();\n      return [emptyResult(chunkMeta)];\n    }\n\n    const demuxResultOrPromise = demuxer.flush(timeOffset);\n    if (isPromise(demuxResultOrPromise)) {\n      // Decrypt final SAMPLE-AES samples\n      return demuxResultOrPromise.then((demuxResult) => {\n        this.flushRemux(transmuxResults, demuxResult, chunkMeta);\n        return transmuxResults;\n      });\n    }\n\n    this.flushRemux(transmuxResults, demuxResultOrPromise, chunkMeta);\n    return transmuxResults;\n  }\n\n  private flushRemux(\n    transmuxResults: TransmuxerResult[],\n    demuxResult: DemuxerResult,\n    chunkMeta: ChunkMetadata\n  ) {\n    const { audioTrack, videoTrack, id3Track, textTrack } = demuxResult;\n    const { accurateTimeOffset, timeOffset } = this.currentTransmuxState;\n    logger.log(\n      `[transmuxer.ts]: Flushed fragment ${chunkMeta.sn}${\n        chunkMeta.part > -1 ? ' p: ' + chunkMeta.part : ''\n      } of level ${chunkMeta.level}`\n    );\n    const remuxResult = this.remuxer!.remux(\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n      timeOffset,\n      accurateTimeOffset,\n      true,\n      this.id\n    );\n    transmuxResults.push({\n      remuxResult,\n      chunkMeta,\n    });\n\n    chunkMeta.transmuxing.executeEnd = now();\n  }\n\n  resetInitialTimestamp(defaultInitPts: number | undefined) {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetTimeStamp(defaultInitPts);\n    remuxer.resetTimeStamp(defaultInitPts);\n  }\n\n  resetContiguity() {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetContiguity();\n    remuxer.resetNextTimestamp();\n  }\n\n  resetInitSegment(\n    initSegmentData: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number,\n    decryptdata: DecryptData | null\n  ) {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetInitSegment(\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      trackDuration\n    );\n    remuxer.resetInitSegment(\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      decryptdata\n    );\n  }\n\n  destroy(): void {\n    if (this.demuxer) {\n      this.demuxer.destroy();\n      this.demuxer = undefined;\n    }\n    if (this.remuxer) {\n      this.remuxer.destroy();\n      this.remuxer = undefined;\n    }\n  }\n\n  private transmux(\n    data: Uint8Array,\n    keyData: KeyData | null,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult | Promise<TransmuxerResult> {\n    let result: TransmuxerResult | Promise<TransmuxerResult>;\n    if (keyData && keyData.method === 'SAMPLE-AES') {\n      result = this.transmuxSampleAes(\n        data,\n        keyData,\n        timeOffset,\n        accurateTimeOffset,\n        chunkMeta\n      );\n    } else {\n      result = this.transmuxUnencrypted(\n        data,\n        timeOffset,\n        accurateTimeOffset,\n        chunkMeta\n      );\n    }\n    return result;\n  }\n\n  private transmuxUnencrypted(\n    data: Uint8Array,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult {\n    const { audioTrack, videoTrack, id3Track, textTrack } = (\n      this.demuxer as Demuxer\n    ).demux(data, timeOffset, false, !this.config.progressive);\n    const remuxResult = this.remuxer!.remux(\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n      timeOffset,\n      accurateTimeOffset,\n      false,\n      this.id\n    );\n    return {\n      remuxResult,\n      chunkMeta,\n    };\n  }\n\n  private transmuxSampleAes(\n    data: Uint8Array,\n    decryptData: KeyData,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): Promise<TransmuxerResult> {\n    return (this.demuxer as Demuxer)\n      .demuxSampleAes(data, decryptData, timeOffset)\n      .then((demuxResult) => {\n        const remuxResult = this.remuxer!.remux(\n          demuxResult.audioTrack,\n          demuxResult.videoTrack,\n          demuxResult.id3Track,\n          demuxResult.textTrack,\n          timeOffset,\n          accurateTimeOffset,\n          false,\n          this.id\n        );\n        return {\n          remuxResult,\n          chunkMeta,\n        };\n      });\n  }\n\n  private configureTransmuxer(data: Uint8Array) {\n    const { config, observer, typeSupported, vendor } = this;\n    // probe for content type\n    let mux;\n    for (let i = 0, len = muxConfig.length; i < len; i++) {\n      if (muxConfig[i].demux.probe(data)) {\n        mux = muxConfig[i];\n        break;\n      }\n    }\n    if (!mux) {\n      // If probing previous configs fail, use mp4 passthrough\n      logger.warn(\n        'Failed to find demuxer by probing frag, treating as mp4 passthrough'\n      );\n      mux = { demux: MP4Demuxer, remux: PassThroughRemuxer };\n    }\n    // so let's check that current remuxer and demuxer are still valid\n    const demuxer = this.demuxer;\n    const remuxer = this.remuxer;\n    const Remuxer: MuxConfig['remux'] = mux.remux;\n    const Demuxer: MuxConfig['demux'] = mux.demux;\n    if (!remuxer || !(remuxer instanceof Remuxer)) {\n      this.remuxer = new Remuxer(observer, config, typeSupported, vendor);\n    }\n    if (!demuxer || !(demuxer instanceof Demuxer)) {\n      this.demuxer = new Demuxer(observer, config, typeSupported);\n      this.probe = Demuxer.probe;\n    }\n  }\n\n  private needsProbing(discontinuity: boolean, trackSwitch: boolean): boolean {\n    // in case of continuity change, or track switch\n    // we might switch from content type (AAC container to TS container, or TS to fmp4 for example)\n    return !this.demuxer || !this.remuxer || discontinuity || trackSwitch;\n  }\n\n  private getDecrypter(): Decrypter {\n    let decrypter = this.decrypter;\n    if (!decrypter) {\n      decrypter = this.decrypter = new Decrypter(this.config);\n    }\n    return decrypter;\n  }\n}\n\nfunction getEncryptionType(\n  data: Uint8Array,\n  decryptData: DecryptData | null\n): KeyData | null {\n  let encryptionType: KeyData | null = null;\n  if (\n    data.byteLength > 0 &&\n    decryptData != null &&\n    decryptData.key != null &&\n    decryptData.iv !== null &&\n    decryptData.method != null\n  ) {\n    encryptionType = decryptData as KeyData;\n  }\n  return encryptionType;\n}\n\nconst emptyResult = (chunkMeta): TransmuxerResult => ({\n  remuxResult: {},\n  chunkMeta,\n});\n\nexport function isPromise<T>(p: Promise<T> | any): p is Promise<T> {\n  return 'then' in p && p.then instanceof Function;\n}\n\nexport class TransmuxConfig {\n  public audioCodec?: string;\n  public videoCodec?: string;\n  public initSegmentData?: Uint8Array;\n  public duration: number;\n  public defaultInitPts?: number;\n\n  constructor(\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    initSegmentData: Uint8Array | undefined,\n    duration: number,\n    defaultInitPts?: number\n  ) {\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this.initSegmentData = initSegmentData;\n    this.duration = duration;\n    this.defaultInitPts = defaultInitPts;\n  }\n}\n\nexport class TransmuxState {\n  public discontinuity: boolean;\n  public contiguous: boolean;\n  public accurateTimeOffset: boolean;\n  public trackSwitch: boolean;\n  public timeOffset: number;\n  public initSegmentChange: boolean;\n\n  constructor(\n    discontinuity: boolean,\n    contiguous: boolean,\n    accurateTimeOffset: boolean,\n    trackSwitch: boolean,\n    timeOffset: number,\n    initSegmentChange: boolean\n  ) {\n    this.discontinuity = discontinuity;\n    this.contiguous = contiguous;\n    this.accurateTimeOffset = accurateTimeOffset;\n    this.trackSwitch = trackSwitch;\n    this.timeOffset = timeOffset;\n    this.initSegmentChange = initSegmentChange;\n  }\n}\n","/**\n * highly optimized TS demuxer:\n * parse PAT, PMT\n * extract PES packet from audio and video PIDs\n * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet\n * trigger the remuxer upon parsing completion\n * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\n * it also controls the remuxing process :\n * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\n */\n\nimport * as ADTS from './adts';\nimport * as MpegAudio from './mpegaudio';\nimport ExpGolomb from './exp-golomb';\nimport SampleAesDecrypter from './sample-aes';\nimport { Events } from '../events';\nimport {\n  appendUint8Array,\n  parseSEIMessageFromNALu,\n  RemuxerTrackIdConfig,\n} from '../utils/mp4-tools';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport type { HlsConfig } from '../config';\nimport type { HlsEventEmitter } from '../events';\nimport {\n  DemuxedAvcTrack,\n  DemuxedAudioTrack,\n  DemuxedTrack,\n  Demuxer,\n  DemuxerResult,\n  AvcSample,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n  ElementaryStreamData,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport { AudioFrame } from '../types/demuxer';\n\ntype ParsedTimestamp = {\n  pts?: number;\n  dts?: number;\n};\n\ntype PES = ParsedTimestamp & {\n  data: Uint8Array;\n  len: number;\n};\n\ntype ParsedAvcSample = ParsedTimestamp & Omit<AvcSample, 'pts' | 'dts'>;\n\nexport interface TypeSupported {\n  mpeg: boolean;\n  mp3: boolean;\n  mp4: boolean;\n}\n\nconst PACKET_LENGTH = 188;\n\nclass TSDemuxer implements Demuxer {\n  private readonly observer: HlsEventEmitter;\n  private readonly config: HlsConfig;\n  private typeSupported: TypeSupported;\n\n  private sampleAes: SampleAesDecrypter | null = null;\n  private pmtParsed: boolean = false;\n  private audioCodec?: string;\n  private videoCodec?: string;\n  private _duration: number = 0;\n  private _pmtId: number = -1;\n\n  private _avcTrack?: DemuxedAvcTrack;\n  private _audioTrack?: DemuxedAudioTrack;\n  private _id3Track?: DemuxedMetadataTrack;\n  private _txtTrack?: DemuxedUserdataTrack;\n  private aacOverFlow: AudioFrame | null = null;\n  private avcSample: ParsedAvcSample | null = null;\n  private remainderData: Uint8Array | null = null;\n\n  constructor(\n    observer: HlsEventEmitter,\n    config: HlsConfig,\n    typeSupported: TypeSupported\n  ) {\n    this.observer = observer;\n    this.config = config;\n    this.typeSupported = typeSupported;\n  }\n\n  static probe(data: Uint8Array) {\n    const syncOffset = TSDemuxer.syncOffset(data);\n    if (syncOffset > 0) {\n      logger.warn(\n        `MPEG2-TS detected but first sync word found @ offset ${syncOffset}`\n      );\n    }\n    return syncOffset !== -1;\n  }\n\n  static syncOffset(data: Uint8Array): number {\n    const length = data.length;\n    const scanwindow =\n      Math.min(PACKET_LENGTH * 5, data.length - PACKET_LENGTH) + 1;\n    let i = 0;\n    while (i < scanwindow) {\n      // a TS init segment should contain at least 2 TS packets: PAT and PMT, each starting with 0x47\n      let foundPat = false;\n      for (let j = i; j < length; j += PACKET_LENGTH) {\n        if (data[j] === 0x47) {\n          if (!foundPat && parsePID(data, j) === 0) {\n            foundPat = true;\n          }\n          if (foundPat && j + PACKET_LENGTH > scanwindow) {\n            return i;\n          }\n        } else {\n          break;\n        }\n      }\n      i++;\n    }\n    return -1;\n  }\n\n  /**\n   * Creates a track model internal to demuxer used to drive remuxing input\n   *\n   * @param type 'audio' | 'video' | 'id3' | 'text'\n   * @param duration\n   * @return TSDemuxer's internal track model\n   */\n  static createTrack(\n    type: 'audio' | 'video' | 'id3' | 'text',\n    duration?: number\n  ): DemuxedTrack {\n    return {\n      container:\n        type === 'video' || type === 'audio' ? 'video/mp2t' : undefined,\n      type,\n      id: RemuxerTrackIdConfig[type],\n      pid: -1,\n      inputTimeScale: 90000,\n      sequenceNumber: 0,\n      samples: [],\n      dropped: 0,\n      duration: type === 'audio' ? duration : undefined,\n    };\n  }\n\n  /**\n   * Initializes a new init segment on the demuxer/remuxer interface. Needed for discontinuities/track-switches (or at stream start)\n   * Resets all internal track instances of the demuxer.\n   */\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string,\n    videoCodec: string,\n    trackDuration: number\n  ) {\n    this.pmtParsed = false;\n    this._pmtId = -1;\n\n    this._avcTrack = TSDemuxer.createTrack('video') as DemuxedAvcTrack;\n    this._audioTrack = TSDemuxer.createTrack(\n      'audio',\n      trackDuration\n    ) as DemuxedAudioTrack;\n    this._id3Track = TSDemuxer.createTrack('id3') as DemuxedMetadataTrack;\n    this._txtTrack = TSDemuxer.createTrack('text') as DemuxedUserdataTrack;\n    this._audioTrack.segmentCodec = 'aac';\n\n    // flush any partial content\n    this.aacOverFlow = null;\n    this.avcSample = null;\n    this.remainderData = null;\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this._duration = trackDuration;\n  }\n\n  public resetTimeStamp() {}\n\n  public resetContiguity(): void {\n    const { _audioTrack, _avcTrack, _id3Track } = this;\n    if (_audioTrack) {\n      _audioTrack.pesData = null;\n    }\n    if (_avcTrack) {\n      _avcTrack.pesData = null;\n    }\n    if (_id3Track) {\n      _id3Track.pesData = null;\n    }\n    this.aacOverFlow = null;\n    this.avcSample = null;\n    this.remainderData = null;\n  }\n\n  public demux(\n    data: Uint8Array,\n    timeOffset: number,\n    isSampleAes = false,\n    flush = false\n  ): DemuxerResult {\n    if (!isSampleAes) {\n      this.sampleAes = null;\n    }\n\n    let pes: PES | null;\n\n    const videoTrack = this._avcTrack as DemuxedAvcTrack;\n    const audioTrack = this._audioTrack as DemuxedAudioTrack;\n    const id3Track = this._id3Track as DemuxedMetadataTrack;\n    const textTrack = this._txtTrack as DemuxedUserdataTrack;\n\n    let avcId = videoTrack.pid;\n    let avcData = videoTrack.pesData;\n    let audioId = audioTrack.pid;\n    let id3Id = id3Track.pid;\n    let audioData = audioTrack.pesData;\n    let id3Data = id3Track.pesData;\n    let unknownPID: number | null = null;\n    let pmtParsed = this.pmtParsed;\n    let pmtId = this._pmtId;\n\n    let len = data.length;\n    if (this.remainderData) {\n      data = appendUint8Array(this.remainderData, data);\n      len = data.length;\n      this.remainderData = null;\n    }\n\n    if (len < PACKET_LENGTH && !flush) {\n      this.remainderData = data;\n      return {\n        audioTrack,\n        videoTrack,\n        id3Track,\n        textTrack,\n      };\n    }\n\n    const syncOffset = Math.max(0, TSDemuxer.syncOffset(data));\n    len -= (len - syncOffset) % PACKET_LENGTH;\n    if (len < data.byteLength && !flush) {\n      this.remainderData = new Uint8Array(\n        data.buffer,\n        len,\n        data.buffer.byteLength - len\n      );\n    }\n\n    // loop through TS packets\n    let tsPacketErrors = 0;\n    for (let start = syncOffset; start < len; start += PACKET_LENGTH) {\n      if (data[start] === 0x47) {\n        const stt = !!(data[start + 1] & 0x40);\n        const pid = parsePID(data, start);\n        const atf = (data[start + 3] & 0x30) >> 4;\n\n        // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n        let offset: number;\n        if (atf > 1) {\n          offset = start + 5 + data[start + 4];\n          // continue if there is only adaptation field\n          if (offset === start + PACKET_LENGTH) {\n            continue;\n          }\n        } else {\n          offset = start + 4;\n        }\n        switch (pid) {\n          case avcId:\n            if (stt) {\n              if (avcData && (pes = parsePES(avcData))) {\n                this.parseAVCPES(videoTrack, textTrack, pes, false);\n              }\n\n              avcData = { data: [], size: 0 };\n            }\n            if (avcData) {\n              avcData.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              avcData.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case audioId:\n            if (stt) {\n              if (audioData && (pes = parsePES(audioData))) {\n                switch (audioTrack.segmentCodec) {\n                  case 'aac':\n                    this.parseAACPES(audioTrack, pes);\n                    break;\n                  case 'mp3':\n                    this.parseMPEGPES(audioTrack, pes);\n                    break;\n                }\n              }\n              audioData = { data: [], size: 0 };\n            }\n            if (audioData) {\n              audioData.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              audioData.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case id3Id:\n            if (stt) {\n              if (id3Data && (pes = parsePES(id3Data))) {\n                this.parseID3PES(id3Track, pes);\n              }\n\n              id3Data = { data: [], size: 0 };\n            }\n            if (id3Data) {\n              id3Data.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              id3Data.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case 0:\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n\n            pmtId = this._pmtId = parsePAT(data, offset);\n            // logger.log('PMT PID:'  + this._pmtId);\n            break;\n          case pmtId: {\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n\n            const parsedPIDs = parsePMT(\n              data,\n              offset,\n              this.typeSupported,\n              isSampleAes\n            );\n\n            // only update track id if track PID found while parsing PMT\n            // this is to avoid resetting the PID to -1 in case\n            // track PID transiently disappears from the stream\n            // this could happen in case of transient missing audio samples for example\n            // NOTE this is only the PID of the track as found in TS,\n            // but we are not using this for MP4 track IDs.\n            avcId = parsedPIDs.avc;\n            if (avcId > 0) {\n              videoTrack.pid = avcId;\n            }\n\n            audioId = parsedPIDs.audio;\n            if (audioId > 0) {\n              audioTrack.pid = audioId;\n              audioTrack.segmentCodec = parsedPIDs.segmentCodec;\n            }\n            id3Id = parsedPIDs.id3;\n            if (id3Id > 0) {\n              id3Track.pid = id3Id;\n            }\n\n            if (unknownPID !== null && !pmtParsed) {\n              logger.warn(\n                `MPEG-TS PMT found at ${start} after unknown PID '${unknownPID}'. Backtracking to sync byte @${syncOffset} to parse all TS packets.`\n              );\n              unknownPID = null;\n              // we set it to -188, the += 188 in the for loop will reset start to 0\n              start = syncOffset - 188;\n            }\n            pmtParsed = this.pmtParsed = true;\n            break;\n          }\n          case 0x11:\n          case 0x1fff:\n            break;\n          default:\n            unknownPID = pid;\n            break;\n        }\n      } else {\n        tsPacketErrors++;\n      }\n    }\n\n    if (tsPacketErrors > 0) {\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal: false,\n        reason: `Found ${tsPacketErrors} TS packet/s that do not start with 0x47`,\n      });\n    }\n\n    videoTrack.pesData = avcData;\n    audioTrack.pesData = audioData;\n    id3Track.pesData = id3Data;\n\n    const demuxResult: DemuxerResult = {\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n    };\n\n    if (flush) {\n      this.extractRemainingSamples(demuxResult);\n    }\n\n    return demuxResult;\n  }\n\n  public flush(): DemuxerResult | Promise<DemuxerResult> {\n    const { remainderData } = this;\n    this.remainderData = null;\n    let result: DemuxerResult;\n    if (remainderData) {\n      result = this.demux(remainderData, -1, false, true);\n    } else {\n      result = {\n        videoTrack: this._avcTrack as DemuxedAvcTrack,\n        audioTrack: this._audioTrack as DemuxedAudioTrack,\n        id3Track: this._id3Track as DemuxedMetadataTrack,\n        textTrack: this._txtTrack as DemuxedUserdataTrack,\n      };\n    }\n    this.extractRemainingSamples(result);\n    if (this.sampleAes) {\n      return this.decrypt(result, this.sampleAes);\n    }\n    return result;\n  }\n\n  private extractRemainingSamples(demuxResult: DemuxerResult) {\n    const { audioTrack, videoTrack, id3Track, textTrack } = demuxResult;\n    const avcData = videoTrack.pesData;\n    const audioData = audioTrack.pesData;\n    const id3Data = id3Track.pesData;\n    // try to parse last PES packets\n    let pes: PES | null;\n    if (avcData && (pes = parsePES(avcData))) {\n      this.parseAVCPES(\n        videoTrack as DemuxedAvcTrack,\n        textTrack as DemuxedUserdataTrack,\n        pes,\n        true\n      );\n      videoTrack.pesData = null;\n    } else {\n      // either avcData null or PES truncated, keep it for next frag parsing\n      videoTrack.pesData = avcData;\n    }\n\n    if (audioData && (pes = parsePES(audioData))) {\n      switch (audioTrack.segmentCodec) {\n        case 'aac':\n          this.parseAACPES(audioTrack, pes);\n          break;\n        case 'mp3':\n          this.parseMPEGPES(audioTrack, pes);\n          break;\n      }\n      audioTrack.pesData = null;\n    } else {\n      if (audioData?.size) {\n        logger.log(\n          'last AAC PES packet truncated,might overlap between fragments'\n        );\n      }\n\n      // either audioData null or PES truncated, keep it for next frag parsing\n      audioTrack.pesData = audioData;\n    }\n\n    if (id3Data && (pes = parsePES(id3Data))) {\n      this.parseID3PES(id3Track, pes);\n      id3Track.pesData = null;\n    } else {\n      // either id3Data null or PES truncated, keep it for next frag parsing\n      id3Track.pesData = id3Data;\n    }\n  }\n\n  public demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    const demuxResult = this.demux(\n      data,\n      timeOffset,\n      true,\n      !this.config.progressive\n    );\n    const sampleAes = (this.sampleAes = new SampleAesDecrypter(\n      this.observer,\n      this.config,\n      keyData\n    ));\n    return this.decrypt(demuxResult, sampleAes);\n  }\n\n  private decrypt(\n    demuxResult: DemuxerResult,\n    sampleAes: SampleAesDecrypter\n  ): Promise<DemuxerResult> {\n    return new Promise((resolve) => {\n      const { audioTrack, videoTrack } = demuxResult;\n      if (audioTrack.samples && audioTrack.segmentCodec === 'aac') {\n        sampleAes.decryptAacSamples(audioTrack.samples, 0, () => {\n          if (videoTrack.samples) {\n            sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, () => {\n              resolve(demuxResult);\n            });\n          } else {\n            resolve(demuxResult);\n          }\n        });\n      } else if (videoTrack.samples) {\n        sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, () => {\n          resolve(demuxResult);\n        });\n      }\n    });\n  }\n\n  public destroy() {\n    this._duration = 0;\n  }\n\n  private parseAVCPES(\n    track: DemuxedAvcTrack,\n    textTrack: DemuxedUserdataTrack,\n    pes: PES,\n    last: boolean\n  ) {\n    const units = this.parseAVCNALu(track, pes.data);\n    const debug = false;\n    let avcSample = this.avcSample;\n    let push: boolean;\n    let spsfound = false;\n    // free pes.data to save up some memory\n    (pes as any).data = null;\n\n    // if new NAL units found and last sample still there, let's push ...\n    // this helps parsing streams with missing AUD (only do this if AUD never found)\n    if (avcSample && units.length && !track.audFound) {\n      pushAccessUnit(avcSample, track);\n      avcSample = this.avcSample = createAVCSample(false, pes.pts, pes.dts, '');\n    }\n\n    units.forEach((unit) => {\n      switch (unit.type) {\n        // NDR\n        case 1: {\n          push = true;\n          if (!avcSample) {\n            avcSample = this.avcSample = createAVCSample(\n              true,\n              pes.pts,\n              pes.dts,\n              ''\n            );\n          }\n\n          if (debug) {\n            avcSample.debug += 'NDR ';\n          }\n\n          avcSample.frame = true;\n          const data = unit.data;\n          // only check slice type to detect KF in case SPS found in same packet (any keyframe is preceded by SPS ...)\n          if (spsfound && data.length > 4) {\n            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR\n            const sliceType = new ExpGolomb(data).readSliceType();\n            // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice\n            // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.\n            // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.\n            // I slice: A slice that is not an SI slice that is decoded using intra prediction only.\n            // if (sliceType === 2 || sliceType === 7) {\n            if (\n              sliceType === 2 ||\n              sliceType === 4 ||\n              sliceType === 7 ||\n              sliceType === 9\n            ) {\n              avcSample.key = true;\n            }\n          }\n          break;\n          // IDR\n        }\n        case 5:\n          push = true;\n          // handle PES not starting with AUD\n          if (!avcSample) {\n            avcSample = this.avcSample = createAVCSample(\n              true,\n              pes.pts,\n              pes.dts,\n              ''\n            );\n          }\n\n          if (debug) {\n            avcSample.debug += 'IDR ';\n          }\n\n          avcSample.key = true;\n          avcSample.frame = true;\n          break;\n        // SEI\n        case 6: {\n          push = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'SEI ';\n          }\n          parseSEIMessageFromNALu(\n            unit.data,\n            1,\n            pes.pts as number,\n            textTrack.samples\n          );\n          break;\n          // SPS\n        }\n        case 7:\n          push = true;\n          spsfound = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'SPS ';\n          }\n\n          if (!track.sps) {\n            const expGolombDecoder = new ExpGolomb(unit.data);\n            const config = expGolombDecoder.readSPS();\n            track.width = config.width;\n            track.height = config.height;\n            track.pixelRatio = config.pixelRatio;\n            // TODO: `track.sps` is defined as a `number[]`, but we're setting it to a `Uint8Array[]`.\n            track.sps = [unit.data] as any;\n            track.duration = this._duration;\n            const codecarray = unit.data.subarray(1, 4);\n            let codecstring = 'avc1.';\n            for (let i = 0; i < 3; i++) {\n              let h = codecarray[i].toString(16);\n              if (h.length < 2) {\n                h = '0' + h;\n              }\n\n              codecstring += h;\n            }\n            track.codec = codecstring;\n          }\n          break;\n        // PPS\n        case 8:\n          push = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'PPS ';\n          }\n\n          if (!track.pps) {\n            // TODO: `track.pss` is defined as a `number[]`, but we're setting it to a `Uint8Array[]`.\n            track.pps = [unit.data] as any;\n          }\n\n          break;\n        // AUD\n        case 9:\n          push = false;\n          track.audFound = true;\n          if (avcSample) {\n            pushAccessUnit(avcSample, track);\n          }\n\n          avcSample = this.avcSample = createAVCSample(\n            false,\n            pes.pts,\n            pes.dts,\n            debug ? 'AUD ' : ''\n          );\n          break;\n        // Filler Data\n        case 12:\n          push = true;\n          break;\n        default:\n          push = false;\n          if (avcSample) {\n            avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n          }\n\n          break;\n      }\n      if (avcSample && push) {\n        const units = avcSample.units;\n        units.push(unit);\n      }\n    });\n    // if last PES packet, push samples\n    if (last && avcSample) {\n      pushAccessUnit(avcSample, track);\n      this.avcSample = null;\n    }\n  }\n\n  private getLastNalUnit(samples: AvcSample[]) {\n    let avcSample = this.avcSample;\n    let lastUnit;\n    // try to fallback to previous sample if current one is empty\n    if (!avcSample || avcSample.units.length === 0) {\n      avcSample = samples[samples.length - 1];\n    }\n    if (avcSample?.units) {\n      const units = avcSample.units;\n      lastUnit = units[units.length - 1];\n    }\n    return lastUnit;\n  }\n\n  private parseAVCNALu(\n    track: DemuxedAvcTrack,\n    array: Uint8Array\n  ): Array<{\n    data: Uint8Array;\n    type: number;\n    state?: number;\n  }> {\n    const len = array.byteLength;\n    let state = track.naluState || 0;\n    const lastState = state;\n    const units = [] as Array<{\n      data: Uint8Array;\n      type: number;\n      state?: number;\n    }>;\n    let i = 0;\n    let value;\n    let overflow;\n    let unitType;\n    let lastUnitStart = -1;\n    let lastUnitType: number = 0;\n    // logger.log('PES:' + Hex.hexDump(array));\n\n    if (state === -1) {\n      // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n      lastUnitStart = 0;\n      // NALu type is value read from offset 0\n      lastUnitType = array[0] & 0x1f;\n      state = 0;\n      i = 1;\n    }\n\n    while (i < len) {\n      value = array[i++];\n      // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case\n      if (!state) {\n        state = value ? 0 : 1;\n        continue;\n      }\n      if (state === 1) {\n        state = value ? 0 : 2;\n        continue;\n      }\n      // here we have state either equal to 2 or 3\n      if (!value) {\n        state = 3;\n      } else if (value === 1) {\n        if (lastUnitStart >= 0) {\n          const unit = {\n            data: array.subarray(lastUnitStart, i - state - 1),\n            type: lastUnitType,\n          };\n          // logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n          units.push(unit);\n        } else {\n          // lastUnitStart is undefined => this is the first start code found in this PES packet\n          // first check if start code delimiter is overlapping between 2 PES packets,\n          // ie it started in last packet (lastState not zero)\n          // and ended at the beginning of this PES packet (i <= 4 - lastState)\n          const lastUnit = this.getLastNalUnit(track.samples);\n          if (lastUnit) {\n            if (lastState && i <= 4 - lastState) {\n              // start delimiter overlapping between PES packets\n              // strip start delimiter bytes from the end of last NAL unit\n              // check if lastUnit had a state different from zero\n              if (lastUnit.state) {\n                // strip last bytes\n                lastUnit.data = lastUnit.data.subarray(\n                  0,\n                  lastUnit.data.byteLength - lastState\n                );\n              }\n            }\n            // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n            overflow = i - state - 1;\n            if (overflow > 0) {\n              // logger.log('first NALU found with overflow:' + overflow);\n              const tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n              tmp.set(lastUnit.data, 0);\n              tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n              lastUnit.data = tmp;\n              lastUnit.state = 0;\n            }\n          }\n        }\n        // check if we can read unit type\n        if (i < len) {\n          unitType = array[i] & 0x1f;\n          // logger.log('find NALU @ offset:' + i + ',type:' + unitType);\n          lastUnitStart = i;\n          lastUnitType = unitType;\n          state = 0;\n        } else {\n          // not enough byte to read unit type. let's read it on next PES parsing\n          state = -1;\n        }\n      } else {\n        state = 0;\n      }\n    }\n    if (lastUnitStart >= 0 && state >= 0) {\n      const unit = {\n        data: array.subarray(lastUnitStart, len),\n        type: lastUnitType,\n        state: state,\n      };\n      units.push(unit);\n      // logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n    }\n    // no NALu found\n    if (units.length === 0) {\n      // append pes.data to previous NAL unit\n      const lastUnit = this.getLastNalUnit(track.samples);\n      if (lastUnit) {\n        const tmp = new Uint8Array(lastUnit.data.byteLength + array.byteLength);\n        tmp.set(lastUnit.data, 0);\n        tmp.set(array, lastUnit.data.byteLength);\n        lastUnit.data = tmp;\n      }\n    }\n    track.naluState = state;\n    return units;\n  }\n\n  private parseAACPES(track: DemuxedAudioTrack, pes: PES) {\n    let startOffset = 0;\n    const aacOverFlow = this.aacOverFlow;\n    let data = pes.data;\n    if (aacOverFlow) {\n      this.aacOverFlow = null;\n      const frameMissingBytes = aacOverFlow.missing;\n      const sampleLength = aacOverFlow.sample.unit.byteLength;\n      // logger.log(`AAC: append overflowing ${sampleLength} bytes to beginning of new PES`);\n      if (frameMissingBytes === -1) {\n        const tmp = new Uint8Array(sampleLength + data.byteLength);\n        tmp.set(aacOverFlow.sample.unit, 0);\n        tmp.set(data, sampleLength);\n        data = tmp;\n      } else {\n        const frameOverflowBytes = sampleLength - frameMissingBytes;\n        aacOverFlow.sample.unit.set(\n          data.subarray(0, frameMissingBytes),\n          frameOverflowBytes\n        );\n        track.samples.push(aacOverFlow.sample);\n        startOffset = aacOverFlow.missing;\n      }\n    }\n    // look for ADTS header (0xFFFx)\n    let offset: number;\n    let len: number;\n    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n      if (ADTS.isHeader(data, offset)) {\n        break;\n      }\n    }\n    // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n    if (offset !== startOffset) {\n      let reason;\n      let fatal;\n      if (offset < len - 1) {\n        reason = `AAC PES did not start with ADTS header,offset:${offset}`;\n        fatal = false;\n      } else {\n        reason = 'no ADTS header found in AAC PES';\n        fatal = true;\n      }\n      logger.warn(`parsing error:${reason}`);\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal,\n        reason,\n      });\n      if (fatal) {\n        return;\n      }\n    }\n\n    ADTS.initTrackConfig(\n      track,\n      this.observer,\n      data,\n      offset,\n      this.audioCodec as string\n    );\n\n    let pts: number;\n    if (pes.pts !== undefined) {\n      pts = pes.pts;\n    } else if (aacOverFlow) {\n      // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n      // first sample PTS should be equal to last sample PTS + frameDuration\n      const frameDuration = ADTS.getFrameDuration(track.samplerate as number);\n      pts = aacOverFlow.sample.pts + frameDuration;\n    } else {\n      logger.warn('[tsdemuxer]: AAC PES unknown PTS');\n      return;\n    }\n\n    // scan for aac samples\n    let frameIndex = 0;\n    let frame;\n    while (offset < len) {\n      frame = ADTS.appendFrame(track, data, offset, pts, frameIndex);\n      offset += frame.length;\n      if (!frame.missing) {\n        frameIndex++;\n        for (; offset < len - 1; offset++) {\n          if (ADTS.isHeader(data, offset)) {\n            break;\n          }\n        }\n      } else {\n        this.aacOverFlow = frame;\n        break;\n      }\n    }\n  }\n\n  private parseMPEGPES(track: DemuxedAudioTrack, pes: PES) {\n    const data = pes.data;\n    const length = data.length;\n    let frameIndex = 0;\n    let offset = 0;\n    const pts = pes.pts;\n    if (pts === undefined) {\n      logger.warn('[tsdemuxer]: MPEG PES unknown PTS');\n      return;\n    }\n\n    while (offset < length) {\n      if (MpegAudio.isHeader(data, offset)) {\n        const frame = MpegAudio.appendFrame(\n          track,\n          data,\n          offset,\n          pts,\n          frameIndex\n        );\n        if (frame) {\n          offset += frame.length;\n          frameIndex++;\n        } else {\n          // logger.log('Unable to parse Mpeg audio frame');\n          break;\n        }\n      } else {\n        // nothing found, keep looking\n        offset++;\n      }\n    }\n  }\n\n  private parseID3PES(id3Track: DemuxedMetadataTrack, pes: PES) {\n    if (pes.pts === undefined) {\n      logger.warn('[tsdemuxer]: ID3 PES unknown PTS');\n      return;\n    }\n    const id3Sample = Object.assign({}, pes as Required<PES>, {\n      type: this._avcTrack ? MetadataSchema.emsg : MetadataSchema.audioId3,\n      duration: Number.POSITIVE_INFINITY,\n    });\n    id3Track.samples.push(id3Sample);\n  }\n}\n\nfunction createAVCSample(\n  key: boolean,\n  pts: number | undefined,\n  dts: number | undefined,\n  debug: string\n): ParsedAvcSample {\n  return {\n    key,\n    frame: false,\n    pts,\n    dts,\n    units: [],\n    debug,\n    length: 0,\n  };\n}\n\nfunction parsePID(data: Uint8Array, offset: number): number {\n  // pid is a 13-bit field starting at the last bit of TS[1]\n  return ((data[offset + 1] & 0x1f) << 8) + data[offset + 2];\n}\n\nfunction parsePAT(data: Uint8Array, offset: number): number {\n  // skip the PSI header and parse the first PMT entry\n  return ((data[offset + 10] & 0x1f) << 8) | data[offset + 11];\n}\n\nfunction parsePMT(\n  data: Uint8Array,\n  offset: number,\n  typeSupported: TypeSupported,\n  isSampleAes: boolean\n) {\n  const result = { audio: -1, avc: -1, id3: -1, segmentCodec: 'aac' };\n  const sectionLength = ((data[offset + 1] & 0x0f) << 8) | data[offset + 2];\n  const tableEnd = offset + 3 + sectionLength - 4;\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  const programInfoLength =\n    ((data[offset + 10] & 0x0f) << 8) | data[offset + 11];\n  // advance the offset to the first entry in the mapping table\n  offset += 12 + programInfoLength;\n  while (offset < tableEnd) {\n    const pid = parsePID(data, offset);\n    switch (data[offset]) {\n      case 0xcf: // SAMPLE-AES AAC\n        if (!isSampleAes) {\n          logger.log(\n            'ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream'\n          );\n          break;\n        }\n      /* falls through */\n      case 0x0f: // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n        // logger.log('AAC PID:'  + pid);\n        if (result.audio === -1) {\n          result.audio = pid;\n        }\n\n        break;\n\n      // Packetized metadata (ID3)\n      case 0x15:\n        // logger.log('ID3 PID:'  + pid);\n        if (result.id3 === -1) {\n          result.id3 = pid;\n        }\n\n        break;\n\n      case 0xdb: // SAMPLE-AES AVC\n        if (!isSampleAes) {\n          logger.log(\n            'H.264 with AES-128-CBC slice encryption found in unencrypted stream'\n          );\n          break;\n        }\n      /* falls through */\n      case 0x1b: // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n        // logger.log('AVC PID:'  + pid);\n        if (result.avc === -1) {\n          result.avc = pid;\n        }\n\n        break;\n\n      // ISO/IEC 11172-3 (MPEG-1 audio)\n      // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)\n      case 0x03:\n      case 0x04:\n        // logger.log('MPEG PID:'  + pid);\n        if (typeSupported.mpeg !== true && typeSupported.mp3 !== true) {\n          logger.log('MPEG audio found, not supported in this browser');\n        } else if (result.audio === -1) {\n          result.audio = pid;\n          result.segmentCodec = 'mp3';\n        }\n        break;\n\n      case 0x24:\n        logger.warn('Unsupported HEVC stream type found');\n        break;\n\n      default:\n        // logger.log('unknown stream type:' + data[offset]);\n        break;\n    }\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5;\n  }\n  return result;\n}\n\nfunction parsePES(stream: ElementaryStreamData): PES | null {\n  let i = 0;\n  let frag: Uint8Array;\n  let pesLen: number;\n  let pesHdrLen: number;\n  let pesPts: number | undefined;\n  let pesDts: number | undefined;\n  const data = stream.data;\n  // safety check\n  if (!stream || stream.size === 0) {\n    return null;\n  }\n\n  // we might need up to 19 bytes to read PES header\n  // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n  // usually only one merge is needed (and this is rare ...)\n  while (data[0].length < 19 && data.length > 1) {\n    const newData = new Uint8Array(data[0].length + data[1].length);\n    newData.set(data[0]);\n    newData.set(data[1], data[0].length);\n    data[0] = newData;\n    data.splice(1, 1);\n  }\n  // retrieve PTS/DTS from first fragment\n  frag = data[0];\n  const pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n  if (pesPrefix === 1) {\n    pesLen = (frag[4] << 8) + frag[5];\n    // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n    // minus 6 : PES header size\n    if (pesLen && pesLen > stream.size - 6) {\n      return null;\n    }\n\n    const pesFlags = frag[7];\n    if (pesFlags & 0xc0) {\n      /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n          as Bitwise operators treat their operands as a sequence of 32 bits */\n      pesPts =\n        (frag[9] & 0x0e) * 536870912 + // 1 << 29\n        (frag[10] & 0xff) * 4194304 + // 1 << 22\n        (frag[11] & 0xfe) * 16384 + // 1 << 14\n        (frag[12] & 0xff) * 128 + // 1 << 7\n        (frag[13] & 0xfe) / 2;\n\n      if (pesFlags & 0x40) {\n        pesDts =\n          (frag[14] & 0x0e) * 536870912 + // 1 << 29\n          (frag[15] & 0xff) * 4194304 + // 1 << 22\n          (frag[16] & 0xfe) * 16384 + // 1 << 14\n          (frag[17] & 0xff) * 128 + // 1 << 7\n          (frag[18] & 0xfe) / 2;\n\n        if (pesPts - pesDts > 60 * 90000) {\n          logger.warn(\n            `${Math.round(\n              (pesPts - pesDts) / 90000\n            )}s delta between PTS and DTS, align them`\n          );\n          pesPts = pesDts;\n        }\n      } else {\n        pesDts = pesPts;\n      }\n    }\n    pesHdrLen = frag[8];\n    // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n    let payloadStartOffset = pesHdrLen + 9;\n    if (stream.size <= payloadStartOffset) {\n      return null;\n    }\n    stream.size -= payloadStartOffset;\n    // reassemble PES packet\n    const pesData = new Uint8Array(stream.size);\n    for (let j = 0, dataLen = data.length; j < dataLen; j++) {\n      frag = data[j];\n      let len = frag.byteLength;\n      if (payloadStartOffset) {\n        if (payloadStartOffset > len) {\n          // trim full frag if PES header bigger than frag\n          payloadStartOffset -= len;\n          continue;\n        } else {\n          // trim partial frag if PES header smaller than frag\n          frag = frag.subarray(payloadStartOffset);\n          len -= payloadStartOffset;\n          payloadStartOffset = 0;\n        }\n      }\n      pesData.set(frag, i);\n      i += len;\n    }\n    if (pesLen) {\n      // payload size : remove PES header + PES extension\n      pesLen -= pesHdrLen + 3;\n    }\n    return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };\n  }\n  return null;\n}\n\nfunction pushAccessUnit(avcSample: ParsedAvcSample, avcTrack: DemuxedAvcTrack) {\n  if (avcSample.units.length && avcSample.frame) {\n    // if sample does not have PTS/DTS, patch with last sample PTS/DTS\n    if (avcSample.pts === undefined) {\n      const samples = avcTrack.samples;\n      const nbSamples = samples.length;\n      if (nbSamples) {\n        const lastSample = samples[nbSamples - 1];\n        avcSample.pts = lastSample.pts;\n        avcSample.dts = lastSample.dts;\n      } else {\n        // dropping samples, no timestamp found\n        avcTrack.dropped++;\n        return;\n      }\n    }\n    avcTrack.samples.push(avcSample as AvcSample);\n  }\n  if (avcSample.debug.length) {\n    logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug);\n  }\n}\n\nexport default TSDemuxer;\n","/*\n * Fork of webworkify-webpack with support for Webpack 5\n * https://github.com/wupeng-engineer/webworkify-webpack/blob/db0de7/index.js\n*/\n\nconst webpackBootstrapFunc = function () {// webpackBootstrap\n  /******/ \tvar __webpack_modules__ = ENTRY_MODULE\n  /************************************************************************/\n  /******/  // The module cache\n  /******/  var __webpack_module_cache__ = {};\n  /******/  \n  /******/  // The require function\n  /******/  var __webpack_require__ = function __webpack_require__(moduleId) {\n  /******/    // Check if module is in cache\n  /******/    var cachedModule = __webpack_module_cache__[moduleId];\n  /******/    if (cachedModule !== undefined) {\n  /******/      return cachedModule.exports;\n  /******/    }\n  /******/    // Create a new module (and put it into the cache)\n  /******/    var module = __webpack_module_cache__[moduleId] = {\n  /******/      // no module.id needed\n  /******/      // no module.loaded needed\n  /******/      exports: {}\n  /******/    };\n  /******/  \n  /******/    // Execute the module function\n  /******/    __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n  /******/  \n  /******/    // Return the exports of the module\n  /******/    return module.exports;\n  /******/  }\n  /******/  \n  /******/  // expose the modules object (__webpack_modules__)\n  /******/  __webpack_require__.m = __webpack_modules__;\n  /******/  \n  /************************************************************************/\n  /******/  /* webpack/runtime/compat get default export */\n  /******/  (() => {\n  /******/    // getDefaultExport function for compatibility with non-harmony modules\n  /******/    __webpack_require__.n = (module) => {\n  /******/      var getter = module && module.__esModule ?\n  /******/        () => (module['default']) :\n  /******/        () => (module);\n  /******/      __webpack_require__.d(getter, { a: getter });\n  /******/      return getter;\n  /******/    };\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/define property getters */\n  /******/  (() => {\n  /******/    // define getter functions for harmony exports\n  /******/    __webpack_require__.d = (exports, definition) => {\n  /******/      for(var key in definition) {\n  /******/        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n  /******/          Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n  /******/        }\n  /******/      }\n  /******/    };\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/hasOwnProperty shorthand */\n  /******/  (() => {\n  /******/    __webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/make namespace object */\n  /******/  (() => {\n  /******/    // define __esModule on exports\n  /******/    __webpack_require__.r = (exports) => {\n  /******/      if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n  /******/        Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n  /******/      }\n  /******/      Object.defineProperty(exports, '__esModule', { value: true });\n  /******/    };\n  /******/  })();\n  /******/  \n  /************************************************************************/\n  /******/  \n  /******/  // module factories are used so entry inlining is disabled\n  /******/  // startup\n  /******/  // Load entry module and return exports\n  /******/ \tvar result = __webpack_require__(ENTRY_MODULE)\n  /******/  return result.default || result\n}\n\nvar webpackBootstrapFuncArr = webpackBootstrapFunc.toString().split('ENTRY_MODULE');\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+';\nvar dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)';\n\nfunction quoteRegExp(str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\nfunction isNumeric(n) {\n  return !isNaN(1 * n);\n}\n\nfunction getModuleDependencies(sources, module, queueName) {\n  var retval = {};\n  retval[queueName] = [];\n  var fnString = module.toString().replace(/^\"[^\"]+\"/,'function');;\n  var wrapperSignature = fnString.match(/^function\\s?\\w*\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/) || fnString.match(/^\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)\\s?\\=\\s?\\>/);\n  if (!wrapperSignature) return retval;\n  var webpackRequireName = wrapperSignature[1];\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g');\n  var match;\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue;\n    retval[queueName].push(match[3]);\n  }\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g');\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1]);\n      sources[match[2]] = __webpack_require__(match[1]).m;\n    }\n    retval[match[2]] = retval[match[2]] || [];\n    retval[match[2]].push(match[4]);\n  }\n  var keys = Object.keys(retval);\n  for (var i = 0; i < keys.length; i++) {\n    for (var j = 0; j < retval[keys[i]].length; j++) {\n      if (isNumeric(retval[keys[i]][j])) {\n        retval[keys[i]][j] = 1 * retval[keys[i]][j];\n      }\n    }\n  }\n  return retval;\n}\n\nfunction hasValuesInQueues(queues) {\n  var keys = Object.keys(queues);\n  return keys.reduce((hasValues, key) => hasValues || queues[key].length > 0, false);\n}\n\nfunction getRequiredModules(sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  };\n  var requiredModules = {\n    main: []\n  };\n  var seenModules = {\n    main: {}\n  };\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue);\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i];\n      var queue = modulesQueue[queueName];\n      var moduleToCheck = queue.pop();\n      seenModules[queueName] = seenModules[queueName] || {};\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue;\n      seenModules[queueName][moduleToCheck] = true;\n      requiredModules[queueName] = requiredModules[queueName] || [];\n      requiredModules[queueName].push(moduleToCheck);\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName);\n      var newModulesKeys = Object.keys(newModules);\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || [];\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]]);\n      }\n    }\n  }\n  return requiredModules;\n}\n\nfunction getWebpackString(requiredModules, sources, entryModule, key) {\n  const moduleString = requiredModules[key].map((id) => `\"${id}\": ${sources[key][id].toString().replace(/^\"[^\"]+\"/,'function')}`).join(\",\");\n  return `${webpackBootstrapFuncArr[0]}{${moduleString}}${webpackBootstrapFuncArr[1]}\"${entryModule}\"${webpackBootstrapFuncArr[2]}`;\n}\n\nexport default function (moduleId, options) {\n  options = options || {};\n  var sources = {\n    main: __webpack_modules__\n  };\n  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId);\n  var src = '';\n  Object.keys(requiredModules).filter((m) => m !== 'main').forEach((module) => {\n    var entryModule = 0;\n    while (requiredModules[module][entryModule]) {\n      entryModule++;\n    }\n    requiredModules[module].push(entryModule);\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })';\n    src = src + `var ${module} = (${getWebpackString(requiredModules, sources, entryModule, modules)})();\\n`;\n  });\n  src = src + `new ((${getWebpackString(requiredModules, sources, moduleId, 'main')})())(self);`;\n  var blob = new window.Blob([src], {\n    type: 'text/javascript'\n  });\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  var workerUrl = URL.createObjectURL(blob);\n  var worker = new window.Worker(workerUrl);\n  worker.objectURL = workerUrl;\n  return worker;\n}\n","// This file is inserted as a shim for modules which we do not want to include into the distro.\n// This replacement is done in the \"resolve\" section of the webpack config.\nmodule.exports = undefined;\n","export enum ErrorTypes {\n  // Identifier for a network error (loading error / timeout ...)\n  NETWORK_ERROR = 'networkError',\n  // Identifier for a media Error (video/parsing/mediasource error)\n  MEDIA_ERROR = 'mediaError',\n  // EME (encrypted media extensions) errors\n  KEY_SYSTEM_ERROR = 'keySystemError',\n  // Identifier for a mux Error (demuxing/remuxing)\n  MUX_ERROR = 'muxError',\n  // Identifier for all other errors\n  OTHER_ERROR = 'otherError',\n}\n\n/**\n * @enum {ErrorDetails}\n * @typedef {string} ErrorDetail\n */\nexport enum ErrorDetails {\n  KEY_SYSTEM_NO_KEYS = 'keySystemNoKeys',\n  KEY_SYSTEM_NO_ACCESS = 'keySystemNoAccess',\n  KEY_SYSTEM_NO_SESSION = 'keySystemNoSession',\n  KEY_SYSTEM_NO_CONFIGURED_LICENSE = 'keySystemNoConfiguredLicense',\n  KEY_SYSTEM_LICENSE_REQUEST_FAILED = 'keySystemLicenseRequestFailed',\n  KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = 'keySystemServerCertificateRequestFailed',\n  KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = 'keySystemServerCertificateUpdateFailed',\n  KEY_SYSTEM_SESSION_UPDATE_FAILED = 'keySystemSessionUpdateFailed',\n  KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = 'keySystemStatusOutputRestricted',\n  KEY_SYSTEM_STATUS_INTERNAL_ERROR = 'keySystemStatusInternalError',\n  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_ERROR = 'manifestLoadError',\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_TIMEOUT = 'manifestLoadTimeOut',\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_PARSING_ERROR = 'manifestParsingError',\n  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_INCOMPATIBLE_CODECS_ERROR = 'manifestIncompatibleCodecsError',\n  // Identifier for a level which contains no fragments - data: { url: faulty URL, reason: \"no fragments found in level\", level: index of the bad level }\n  LEVEL_EMPTY_ERROR = 'levelEmptyError',\n  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_ERROR = 'levelLoadError',\n  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_TIMEOUT = 'levelLoadTimeOut',\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n  LEVEL_SWITCH_ERROR = 'levelSwitchError',\n  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_ERROR = 'audioTrackLoadError',\n  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_TIMEOUT = 'audioTrackLoadTimeOut',\n  // Identifier for a subtitle track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  SUBTITLE_LOAD_ERROR = 'subtitleTrackLoadError',\n  // Identifier for a subtitle track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  SUBTITLE_TRACK_LOAD_TIMEOUT = 'subtitleTrackLoadTimeOut',\n  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  FRAG_LOAD_ERROR = 'fragLoadError',\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\n  FRAG_LOAD_TIMEOUT = 'fragLoadTimeOut',\n  // Identifier for a fragment decryption error event - data: {id : demuxer Id,frag: fragment object, reason : parsing error description }\n  FRAG_DECRYPT_ERROR = 'fragDecryptError',\n  // Identifier for a fragment parsing error event - data: { id : demuxer Id, reason : parsing error description }\n  // will be renamed DEMUX_PARSING_ERROR and switched to MUX_ERROR in the next major release\n  FRAG_PARSING_ERROR = 'fragParsingError',\n  // Identifier for a remux alloc error event - data: { id : demuxer Id, frag : fragment object, bytes : nb of bytes on which allocation failed , reason : error text }\n  REMUX_ALLOC_ERROR = 'remuxAllocError',\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  KEY_LOAD_ERROR = 'keyLoadError',\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n  KEY_LOAD_TIMEOUT = 'keyLoadTimeOut',\n  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : { error : exception , mimeType : mimeType }\n  BUFFER_ADD_CODEC_ERROR = 'bufferAddCodecError',\n  // Triggered when source buffer(s) could not be created using level (manifest CODECS attribute), parsed media, or best guess codec(s) - data: { reason : error reason }\n  BUFFER_INCOMPATIBLE_CODECS_ERROR = 'bufferIncompatibleCodecsError',\n  // Identifier for a buffer append error - data: append error description\n  BUFFER_APPEND_ERROR = 'bufferAppendError',\n  // Identifier for a buffer appending error event - data: appending error description\n  BUFFER_APPENDING_ERROR = 'bufferAppendingError',\n  // Identifier for a buffer stalled error event\n  BUFFER_STALLED_ERROR = 'bufferStalledError',\n  // Identifier for a buffer full event\n  BUFFER_FULL_ERROR = 'bufferFullError',\n  // Identifier for a buffer seek over hole event\n  BUFFER_SEEK_OVER_HOLE = 'bufferSeekOverHole',\n  // Identifier for a buffer nudge on stall (playback is stuck although currentTime is in a buffered area)\n  BUFFER_NUDGE_ON_STALL = 'bufferNudgeOnStall',\n  // Identifier for an internal exception happening inside hls.js while handling an event\n  INTERNAL_EXCEPTION = 'internalException',\n  // Identifier for an internal call to abort a loader\n  INTERNAL_ABORTED = 'aborted',\n  // Uncategorized error\n  UNKNOWN = 'unknown',\n}\n","import {\n  ManifestLoadedData,\n  ManifestLoadingData,\n  MediaAttachedData,\n  MediaAttachingData,\n  LevelLoadingData,\n  LevelLoadedData,\n  ManifestParsedData,\n  LevelUpdatedData,\n  LevelsUpdatedData,\n  FragParsingUserdataData,\n  FragDecryptedData,\n  FragLoadedData,\n  InitPTSFoundData,\n  CuesParsedData,\n  SubtitleFragProcessedData,\n  NonNativeTextTracksData,\n  FragLoadingData,\n  AudioTrackLoadedData,\n  SubtitleTrackLoadedData,\n  ErrorData,\n  AudioTrackSwitchingData,\n  AudioTrackSwitchedData,\n  KeyLoadedData,\n  KeyLoadingData,\n  SubtitleTrackSwitchData,\n  SubtitleTracksUpdatedData,\n  LevelSwitchedData,\n  FragChangedData,\n  BufferAppendingData,\n  BufferCodecsData,\n  FragParsingMetadataData,\n  FragParsingInitSegmentData,\n  FragBufferedData,\n  BufferFlushingData,\n  BufferEOSData,\n  LevelSwitchingData,\n  FPSDropLevelCappingData,\n  FPSDropData,\n  BufferCreatedData,\n  BufferAppendedData,\n  LevelPTSUpdatedData,\n  FragParsedData,\n  AudioTracksUpdatedData,\n  FragLoadEmergencyAbortedData,\n  BackBufferData,\n  LiveBackBufferData,\n  TrackLoadingData,\n  BufferFlushedData,\n} from './types/events';\n\n/**\n * @readonly\n * @enum {string}\n */\nexport enum Events {\n  // Fired before MediaSource is attaching to media element\n  MEDIA_ATTACHING = 'hlsMediaAttaching',\n  // Fired when MediaSource has been successfully attached to media element\n  MEDIA_ATTACHED = 'hlsMediaAttached',\n  // Fired before detaching MediaSource from media element\n  MEDIA_DETACHING = 'hlsMediaDetaching',\n  // Fired when MediaSource has been detached from media element\n  MEDIA_DETACHED = 'hlsMediaDetached',\n  // Fired when the buffer is going to be reset\n  BUFFER_RESET = 'hlsBufferReset',\n  // Fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}\n  BUFFER_CODECS = 'hlsBufferCodecs',\n  // fired when sourcebuffers have been created - data: { tracks : tracks }\n  BUFFER_CREATED = 'hlsBufferCreated',\n  // fired when we append a segment to the buffer - data: { segment: segment object }\n  BUFFER_APPENDING = 'hlsBufferAppending',\n  // fired when we are done with appending a media segment to the buffer - data : { parent : segment parent that triggered BUFFER_APPENDING, pending : nb of segments waiting for appending for this segment parent}\n  BUFFER_APPENDED = 'hlsBufferAppended',\n  // fired when the stream is finished and we want to notify the media buffer that there will be no more data - data: { }\n  BUFFER_EOS = 'hlsBufferEos',\n  // fired when the media buffer should be flushed - data { startOffset, endOffset }\n  BUFFER_FLUSHING = 'hlsBufferFlushing',\n  // fired when the media buffer has been flushed - data: { }\n  BUFFER_FLUSHED = 'hlsBufferFlushed',\n  // fired to signal that a manifest loading starts - data: { url : manifestURL}\n  MANIFEST_LOADING = 'hlsManifestLoading',\n  // fired after manifest has been loaded - data: { levels : [available quality levels], audioTracks : [ available audio tracks ], url : manifestURL, stats : LoaderStats }\n  MANIFEST_LOADED = 'hlsManifestLoaded',\n  // fired after manifest has been parsed - data: { levels : [available quality levels], firstLevel : index of first quality level appearing in Manifest}\n  MANIFEST_PARSED = 'hlsManifestParsed',\n  // fired when a level switch is requested - data: { level : id of new level }\n  LEVEL_SWITCHING = 'hlsLevelSwitching',\n  // fired when a level switch is effective - data: { level : id of new level }\n  LEVEL_SWITCHED = 'hlsLevelSwitched',\n  // fired when a level playlist loading starts - data: { url : level URL, level : id of level being loaded}\n  LEVEL_LOADING = 'hlsLevelLoading',\n  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : LoaderStats }\n  LEVEL_LOADED = 'hlsLevelLoaded',\n  // fired when a level's details have been updated based on previous details, after it has been loaded - data: { details : levelDetails object, level : id of updated level }\n  LEVEL_UPDATED = 'hlsLevelUpdated',\n  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\n  LEVEL_PTS_UPDATED = 'hlsLevelPtsUpdated',\n  // fired to notify that levels have changed after removing a level - data: { levels : [available quality levels] }\n  LEVELS_UPDATED = 'hlsLevelsUpdated',\n  // fired to notify that audio track lists has been updated - data: { audioTracks : audioTracks }\n  AUDIO_TRACKS_UPDATED = 'hlsAudioTracksUpdated',\n  // fired when an audio track switching is requested - data: { id : audio track id }\n  AUDIO_TRACK_SWITCHING = 'hlsAudioTrackSwitching',\n  // fired when an audio track switch actually occurs - data: { id : audio track id }\n  AUDIO_TRACK_SWITCHED = 'hlsAudioTrackSwitched',\n  // fired when an audio track loading starts - data: { url : audio track URL, id : audio track id }\n  AUDIO_TRACK_LOADING = 'hlsAudioTrackLoading',\n  // fired when an audio track loading finishes - data: { details : levelDetails object, id : audio track id, stats : LoaderStats }\n  AUDIO_TRACK_LOADED = 'hlsAudioTrackLoaded',\n  // fired to notify that subtitle track lists has been updated - data: { subtitleTracks : subtitleTracks }\n  SUBTITLE_TRACKS_UPDATED = 'hlsSubtitleTracksUpdated',\n  // fired to notify that subtitle tracks were cleared as a result of stopping the media\n  SUBTITLE_TRACKS_CLEARED = 'hlsSubtitleTracksCleared',\n  // fired when an subtitle track switch occurs - data: { id : subtitle track id }\n  SUBTITLE_TRACK_SWITCH = 'hlsSubtitleTrackSwitch',\n  // fired when a subtitle track loading starts - data: { url : subtitle track URL, id : subtitle track id }\n  SUBTITLE_TRACK_LOADING = 'hlsSubtitleTrackLoading',\n  // fired when a subtitle track loading finishes - data: { details : levelDetails object, id : subtitle track id, stats : LoaderStats }\n  SUBTITLE_TRACK_LOADED = 'hlsSubtitleTrackLoaded',\n  // fired when a subtitle fragment has been processed - data: { success : boolean, frag : the processed frag }\n  SUBTITLE_FRAG_PROCESSED = 'hlsSubtitleFragProcessed',\n  // fired when a set of VTTCues to be managed externally has been parsed - data: { type: string, track: string, cues: [ VTTCue ] }\n  CUES_PARSED = 'hlsCuesParsed',\n  // fired when a text track to be managed externally is found - data: { tracks: [ { label: string, kind: string, default: boolean } ] }\n  NON_NATIVE_TEXT_TRACKS_FOUND = 'hlsNonNativeTextTracksFound',\n  // fired when the first timestamp is found - data: { id : demuxer id, initPTS: initPTS, timescale: timescale, frag : fragment object }\n  INIT_PTS_FOUND = 'hlsInitPtsFound',\n  // fired when a fragment loading starts - data: { frag : fragment object }\n  FRAG_LOADING = 'hlsFragLoading',\n  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded } }\n  // FRAG_LOAD_PROGRESS = 'hlsFragLoadProgress',\n  // Identifier for fragment load aborting for emergency switch down - data: { frag : fragment object }\n  FRAG_LOAD_EMERGENCY_ABORTED = 'hlsFragLoadEmergencyAborted',\n  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : LoaderStats }\n  FRAG_LOADED = 'hlsFragLoaded',\n  // fired when a fragment has finished decrypting - data: { id : demuxer id, frag: fragment object, payload : fragment payload, stats : { tstart, tdecrypt } }\n  FRAG_DECRYPTED = 'hlsFragDecrypted',\n  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, frag: fragment object, moov : moov MP4 box, codecs : codecs found while parsing fragment }\n  FRAG_PARSING_INIT_SEGMENT = 'hlsFragParsingInitSegment',\n  // fired when parsing sei text is completed - data: { id : demuxer id, frag: fragment object, samples : [ sei samples pes ] }\n  FRAG_PARSING_USERDATA = 'hlsFragParsingUserdata',\n  // fired when parsing id3 is completed - data: { id : demuxer id, frag: fragment object, samples : [ id3 samples pes ] }\n  FRAG_PARSING_METADATA = 'hlsFragParsingMetadata',\n  // fired when data have been extracted from fragment - data: { id : demuxer id, frag: fragment object, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}\n  // FRAG_PARSING_DATA = 'hlsFragParsingData',\n  // fired when fragment parsing is completed - data: { id : demuxer id, frag: fragment object }\n  FRAG_PARSED = 'hlsFragParsed',\n  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id, frag : fragment object, stats : LoaderStats }\n  FRAG_BUFFERED = 'hlsFragBuffered',\n  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }\n  FRAG_CHANGED = 'hlsFragChanged',\n  // Identifier for a FPS drop event - data: { currentDropped, currentDecoded, totalDroppedFrames }\n  FPS_DROP = 'hlsFpsDrop',\n  // triggered when FPS drop triggers auto level capping - data: { level, droppedLevel }\n  FPS_DROP_LEVEL_CAPPING = 'hlsFpsDropLevelCapping',\n  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data }\n  ERROR = 'hlsError',\n  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example - data: { }\n  DESTROYING = 'hlsDestroying',\n  // fired when a decrypt key loading starts - data: { frag : fragment object }\n  KEY_LOADING = 'hlsKeyLoading',\n  // fired when a decrypt key loading is completed - data: { frag : fragment object, keyInfo : KeyLoaderInfo }\n  KEY_LOADED = 'hlsKeyLoaded',\n  // deprecated; please use BACK_BUFFER_REACHED - data : { bufferEnd: number }\n  LIVE_BACK_BUFFER_REACHED = 'hlsLiveBackBufferReached',\n  // fired when the back buffer is reached as defined by the backBufferLength config option - data : { bufferEnd: number }\n  BACK_BUFFER_REACHED = 'hlsBackBufferReached',\n}\n\nexport interface HlsListeners {\n  [Events.MEDIA_ATTACHING]: (\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) => void;\n  [Events.MEDIA_ATTACHED]: (\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) => void;\n  [Events.MEDIA_DETACHING]: (event: Events.MEDIA_DETACHING) => void;\n  [Events.MEDIA_DETACHED]: (event: Events.MEDIA_DETACHED) => void;\n  [Events.BUFFER_RESET]: (event: Events.BUFFER_RESET) => void;\n  [Events.BUFFER_CODECS]: (\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) => void;\n  [Events.BUFFER_CREATED]: (\n    event: Events.BUFFER_CREATED,\n    data: BufferCreatedData\n  ) => void;\n  [Events.BUFFER_APPENDING]: (\n    event: Events.BUFFER_APPENDING,\n    data: BufferAppendingData\n  ) => void;\n  [Events.BUFFER_APPENDED]: (\n    event: Events.BUFFER_APPENDED,\n    data: BufferAppendedData\n  ) => void;\n  [Events.BUFFER_EOS]: (event: Events.BUFFER_EOS, data: BufferEOSData) => void;\n  [Events.BUFFER_FLUSHING]: (\n    event: Events.BUFFER_FLUSHING,\n    data: BufferFlushingData\n  ) => void;\n  [Events.BUFFER_FLUSHED]: (\n    event: Events.BUFFER_FLUSHED,\n    data: BufferFlushedData\n  ) => void;\n  [Events.MANIFEST_LOADING]: (\n    event: Events.MANIFEST_LOADING,\n    data: ManifestLoadingData\n  ) => void;\n  [Events.MANIFEST_LOADED]: (\n    event: Events.MANIFEST_LOADED,\n    data: ManifestLoadedData\n  ) => void;\n  [Events.MANIFEST_PARSED]: (\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) => void;\n  [Events.LEVEL_SWITCHING]: (\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ) => void;\n  [Events.LEVEL_SWITCHED]: (\n    event: Events.LEVEL_SWITCHED,\n    data: LevelSwitchedData\n  ) => void;\n  [Events.LEVEL_LOADING]: (\n    event: Events.LEVEL_LOADING,\n    data: LevelLoadingData\n  ) => void;\n  [Events.LEVEL_LOADED]: (\n    event: Events.LEVEL_LOADED,\n    data: LevelLoadedData\n  ) => void;\n  [Events.LEVEL_UPDATED]: (\n    event: Events.LEVEL_UPDATED,\n    data: LevelUpdatedData\n  ) => void;\n  [Events.LEVEL_PTS_UPDATED]: (\n    event: Events.LEVEL_PTS_UPDATED,\n    data: LevelPTSUpdatedData\n  ) => void;\n  [Events.LEVELS_UPDATED]: (\n    event: Events.LEVELS_UPDATED,\n    data: LevelsUpdatedData\n  ) => void;\n  [Events.AUDIO_TRACKS_UPDATED]: (\n    event: Events.AUDIO_TRACKS_UPDATED,\n    data: AudioTracksUpdatedData\n  ) => void;\n  [Events.AUDIO_TRACK_SWITCHING]: (\n    event: Events.AUDIO_TRACK_SWITCHING,\n    data: AudioTrackSwitchingData\n  ) => void;\n  [Events.AUDIO_TRACK_SWITCHED]: (\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: AudioTrackSwitchedData\n  ) => void;\n  [Events.AUDIO_TRACK_LOADING]: (\n    event: Events.AUDIO_TRACK_LOADING,\n    data: TrackLoadingData\n  ) => void;\n  [Events.AUDIO_TRACK_LOADED]: (\n    event: Events.AUDIO_TRACK_LOADED,\n    data: AudioTrackLoadedData\n  ) => void;\n  [Events.SUBTITLE_TRACKS_UPDATED]: (\n    event: Events.SUBTITLE_TRACKS_UPDATED,\n    data: SubtitleTracksUpdatedData\n  ) => void;\n  [Events.SUBTITLE_TRACKS_CLEARED]: (\n    event: Events.SUBTITLE_TRACKS_CLEARED\n  ) => void;\n  [Events.SUBTITLE_TRACK_SWITCH]: (\n    event: Events.SUBTITLE_TRACK_SWITCH,\n    data: SubtitleTrackSwitchData\n  ) => void;\n  [Events.SUBTITLE_TRACK_LOADING]: (\n    event: Events.SUBTITLE_TRACK_LOADING,\n    data: TrackLoadingData\n  ) => void;\n  [Events.SUBTITLE_TRACK_LOADED]: (\n    event: Events.SUBTITLE_TRACK_LOADED,\n    data: SubtitleTrackLoadedData\n  ) => void;\n  [Events.SUBTITLE_FRAG_PROCESSED]: (\n    event: Events.SUBTITLE_FRAG_PROCESSED,\n    data: SubtitleFragProcessedData\n  ) => void;\n  [Events.CUES_PARSED]: (\n    event: Events.CUES_PARSED,\n    data: CuesParsedData\n  ) => void;\n  [Events.NON_NATIVE_TEXT_TRACKS_FOUND]: (\n    event: Events.NON_NATIVE_TEXT_TRACKS_FOUND,\n    data: NonNativeTextTracksData\n  ) => void;\n  [Events.INIT_PTS_FOUND]: (\n    event: Events.INIT_PTS_FOUND,\n    data: InitPTSFoundData\n  ) => void;\n  [Events.FRAG_LOADING]: (\n    event: Events.FRAG_LOADING,\n    data: FragLoadingData\n  ) => void;\n  // [Events.FRAG_LOAD_PROGRESS]: TodoEventType\n  [Events.FRAG_LOAD_EMERGENCY_ABORTED]: (\n    event: Events.FRAG_LOAD_EMERGENCY_ABORTED,\n    data: FragLoadEmergencyAbortedData\n  ) => void;\n  [Events.FRAG_LOADED]: (\n    event: Events.FRAG_LOADED,\n    data: FragLoadedData\n  ) => void;\n  [Events.FRAG_DECRYPTED]: (\n    event: Events.FRAG_DECRYPTED,\n    data: FragDecryptedData\n  ) => void;\n  [Events.FRAG_PARSING_INIT_SEGMENT]: (\n    event: Events.FRAG_PARSING_INIT_SEGMENT,\n    data: FragParsingInitSegmentData\n  ) => void;\n  [Events.FRAG_PARSING_USERDATA]: (\n    event: Events.FRAG_PARSING_USERDATA,\n    data: FragParsingUserdataData\n  ) => void;\n  [Events.FRAG_PARSING_METADATA]: (\n    event: Events.FRAG_PARSING_METADATA,\n    data: FragParsingMetadataData\n  ) => void;\n  // [Events.FRAG_PARSING_DATA]: TodoEventType\n  [Events.FRAG_PARSED]: (\n    event: Events.FRAG_PARSED,\n    data: FragParsedData\n  ) => void;\n  [Events.FRAG_BUFFERED]: (\n    event: Events.FRAG_BUFFERED,\n    data: FragBufferedData\n  ) => void;\n  [Events.FRAG_CHANGED]: (\n    event: Events.FRAG_CHANGED,\n    data: FragChangedData\n  ) => void;\n  [Events.FPS_DROP]: (event: Events.FPS_DROP, data: FPSDropData) => void;\n  [Events.FPS_DROP_LEVEL_CAPPING]: (\n    event: Events.FPS_DROP_LEVEL_CAPPING,\n    data: FPSDropLevelCappingData\n  ) => void;\n  [Events.ERROR]: (event: Events.ERROR, data: ErrorData) => void;\n  [Events.DESTROYING]: (event: Events.DESTROYING) => void;\n  [Events.KEY_LOADING]: (\n    event: Events.KEY_LOADING,\n    data: KeyLoadingData\n  ) => void;\n  [Events.KEY_LOADED]: (event: Events.KEY_LOADED, data: KeyLoadedData) => void;\n  [Events.LIVE_BACK_BUFFER_REACHED]: (\n    event: Events.LIVE_BACK_BUFFER_REACHED,\n    data: LiveBackBufferData\n  ) => void;\n  [Events.BACK_BUFFER_REACHED]: (\n    event: Events.BACK_BUFFER_REACHED,\n    data: BackBufferData\n  ) => void;\n}\nexport interface HlsEventEmitter {\n  on<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context?: Context\n  ): void;\n  once<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context?: Context\n  ): void;\n\n  removeAllListeners<E extends keyof HlsListeners>(event?: E): void;\n  off<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener?: HlsListeners[E],\n    context?: Context,\n    once?: boolean\n  ): void;\n\n  listeners<E extends keyof HlsListeners>(event: E): HlsListeners[E][];\n  emit<E extends keyof HlsListeners>(\n    event: E,\n    name: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean;\n  listenerCount<E extends keyof HlsListeners>(event: E): number;\n}\n","import * as URLToolkit from 'url-toolkit';\nimport PlaylistLoader from './loader/playlist-loader';\nimport ID3TrackController from './controller/id3-track-controller';\nimport LatencyController from './controller/latency-controller';\nimport LevelController from './controller/level-controller';\nimport { FragmentTracker } from './controller/fragment-tracker';\nimport KeyLoader from './loader/key-loader';\nimport StreamController from './controller/stream-controller';\nimport { isSupported } from './is-supported';\nimport { logger, enableLogs } from './utils/logger';\nimport { enableStreamingMode, hlsDefaultConfig, mergeConfig } from './config';\nimport { EventEmitter } from 'eventemitter3';\nimport { Events } from './events';\nimport { ErrorTypes, ErrorDetails } from './errors';\nimport type { HlsEventEmitter, HlsListeners } from './events';\nimport type AudioTrackController from './controller/audio-track-controller';\nimport type AbrController from './controller/abr-controller';\nimport type BufferController from './controller/buffer-controller';\nimport type CapLevelController from './controller/cap-level-controller';\nimport type CMCDController from './controller/cmcd-controller';\nimport type EMEController from './controller/eme-controller';\nimport type SubtitleTrackController from './controller/subtitle-track-controller';\nimport type { ComponentAPI, NetworkComponentAPI } from './types/component-api';\nimport type { MediaPlaylist } from './types/media-playlist';\nimport type { HlsConfig } from './config';\nimport { HdcpLevel, HdcpLevels, Level } from './types/level';\nimport type { Fragment } from './loader/fragment';\nimport { BufferInfo } from './utils/buffer-helper';\n\n/**\n * @module Hls\n * @class\n * @constructor\n */\nexport default class Hls implements HlsEventEmitter {\n  private static defaultConfig?: HlsConfig;\n\n  public readonly config: HlsConfig;\n  public readonly userConfig: Partial<HlsConfig>;\n\n  private coreComponents: ComponentAPI[];\n  private networkControllers: NetworkComponentAPI[];\n\n  private _emitter: HlsEventEmitter = new EventEmitter();\n  private _autoLevelCapping: number;\n  private _maxHdcpLevel: HdcpLevel = null;\n  private abrController: AbrController;\n  private bufferController: BufferController;\n  private capLevelController: CapLevelController;\n  private latencyController: LatencyController;\n  private levelController: LevelController;\n  private streamController: StreamController;\n  private audioTrackController: AudioTrackController;\n  private subtitleTrackController: SubtitleTrackController;\n  private emeController: EMEController;\n  private cmcdController: CMCDController;\n\n  private _media: HTMLMediaElement | null = null;\n  private url: string | null = null;\n\n  static get version(): string {\n    return __VERSION__;\n  }\n\n  static isSupported(): boolean {\n    return isSupported();\n  }\n\n  static get Events() {\n    return Events;\n  }\n\n  static get ErrorTypes() {\n    return ErrorTypes;\n  }\n\n  static get ErrorDetails() {\n    return ErrorDetails;\n  }\n\n  static get DefaultConfig(): HlsConfig {\n    if (!Hls.defaultConfig) {\n      return hlsDefaultConfig;\n    }\n\n    return Hls.defaultConfig;\n  }\n\n  /**\n   * @type {HlsConfig}\n   */\n  static set DefaultConfig(defaultConfig: HlsConfig) {\n    Hls.defaultConfig = defaultConfig;\n  }\n\n  /**\n   * Creates an instance of an HLS client that can attach to exactly one `HTMLMediaElement`.\n   *\n   * @constructs Hls\n   * @param {HlsConfig} config\n   */\n  constructor(userConfig: Partial<HlsConfig> = {}) {\n    const config = (this.config = mergeConfig(Hls.DefaultConfig, userConfig));\n    this.userConfig = userConfig;\n    enableLogs(config.debug, 'Hls instance');\n\n    this._autoLevelCapping = -1;\n\n    if (config.progressive) {\n      enableStreamingMode(config);\n    }\n\n    // core controllers and network loaders\n    const {\n      abrController: ConfigAbrController,\n      bufferController: ConfigBufferController,\n      capLevelController: ConfigCapLevelController,\n      fpsController: ConfigFpsController,\n    } = config;\n    const abrController = (this.abrController = new ConfigAbrController(this));\n    const bufferController = (this.bufferController =\n      new ConfigBufferController(this));\n    const capLevelController = (this.capLevelController =\n      new ConfigCapLevelController(this));\n\n    const fpsController = new ConfigFpsController(this);\n    const playListLoader = new PlaylistLoader(this);\n    const id3TrackController = new ID3TrackController(this);\n\n    // network controllers\n    const levelController = (this.levelController = new LevelController(this));\n    // FragmentTracker must be defined before StreamController because the order of event handling is important\n    const fragmentTracker = new FragmentTracker(this);\n    const keyLoader = new KeyLoader(this.config);\n    const streamController = (this.streamController = new StreamController(\n      this,\n      fragmentTracker,\n      keyLoader\n    ));\n\n    // Cap level controller uses streamController to flush the buffer\n    capLevelController.setStreamController(streamController);\n    // fpsController uses streamController to switch when frames are being dropped\n    fpsController.setStreamController(streamController);\n\n    const networkControllers: NetworkComponentAPI[] = [\n      playListLoader,\n      levelController,\n      streamController,\n    ];\n\n    this.networkControllers = networkControllers;\n    const coreComponents: ComponentAPI[] = [\n      abrController,\n      bufferController,\n      capLevelController,\n      fpsController,\n      id3TrackController,\n      fragmentTracker,\n    ];\n\n    this.audioTrackController = this.createController(\n      config.audioTrackController,\n      networkControllers\n    );\n    const AudioStreamControllerClass = config.audioStreamController;\n    if (AudioStreamControllerClass) {\n      networkControllers.push(\n        new AudioStreamControllerClass(this, fragmentTracker, keyLoader)\n      );\n    }\n    // subtitleTrackController must be defined before subtitleStreamController because the order of event handling is important\n    this.subtitleTrackController = this.createController(\n      config.subtitleTrackController,\n      networkControllers\n    );\n    const SubtitleStreamControllerClass = config.subtitleStreamController;\n    if (SubtitleStreamControllerClass) {\n      networkControllers.push(\n        new SubtitleStreamControllerClass(this, fragmentTracker, keyLoader)\n      );\n    }\n    this.createController(config.timelineController, coreComponents);\n    keyLoader.emeController = this.emeController = this.createController(\n      config.emeController,\n      coreComponents\n    );\n    this.cmcdController = this.createController(\n      config.cmcdController,\n      coreComponents\n    );\n    this.latencyController = this.createController(\n      LatencyController,\n      coreComponents\n    );\n\n    this.coreComponents = coreComponents;\n  }\n\n  createController(ControllerClass, components) {\n    if (ControllerClass) {\n      const controllerInstance = new ControllerClass(this);\n      if (components) {\n        components.push(controllerInstance);\n      }\n      return controllerInstance;\n    }\n    return null;\n  }\n\n  // Delegate the EventEmitter through the public API of Hls.js\n  on<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context: Context = this as any\n  ) {\n    this._emitter.on(event, listener, context);\n  }\n\n  once<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context: Context = this as any\n  ) {\n    this._emitter.once(event, listener, context);\n  }\n\n  removeAllListeners<E extends keyof HlsListeners>(event?: E | undefined) {\n    this._emitter.removeAllListeners(event);\n  }\n\n  off<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener?: HlsListeners[E] | undefined,\n    context: Context = this as any,\n    once?: boolean | undefined\n  ) {\n    this._emitter.off(event, listener, context, once);\n  }\n\n  listeners<E extends keyof HlsListeners>(event: E): HlsListeners[E][] {\n    return this._emitter.listeners(event);\n  }\n\n  emit<E extends keyof HlsListeners>(\n    event: E,\n    name: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean {\n    return this._emitter.emit(event, name, eventObject);\n  }\n\n  trigger<E extends keyof HlsListeners>(\n    event: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean {\n    if (this.config.debug) {\n      return this.emit(event, event, eventObject);\n    } else {\n      try {\n        return this.emit(event, event, eventObject);\n      } catch (e) {\n        logger.error(\n          'An internal error happened while handling event ' +\n            event +\n            '. Error message: \"' +\n            e.message +\n            '\". Here is a stacktrace:',\n          e\n        );\n        this.trigger(Events.ERROR, {\n          type: ErrorTypes.OTHER_ERROR,\n          details: ErrorDetails.INTERNAL_EXCEPTION,\n          fatal: false,\n          event: event,\n          error: e,\n        });\n      }\n    }\n    return false;\n  }\n\n  listenerCount<E extends keyof HlsListeners>(event: E): number {\n    return this._emitter.listenerCount(event);\n  }\n\n  /**\n   * Dispose of the instance\n   */\n  destroy() {\n    logger.log('destroy');\n    this.trigger(Events.DESTROYING, undefined);\n    this.detachMedia();\n    this.removeAllListeners();\n    this._autoLevelCapping = -1;\n    this.url = null;\n\n    this.networkControllers.forEach((component) => component.destroy());\n    this.networkControllers.length = 0;\n\n    this.coreComponents.forEach((component) => component.destroy());\n    this.coreComponents.length = 0;\n  }\n\n  /**\n   * Attaches Hls.js to a media element\n   * @param {HTMLMediaElement} media\n   */\n  attachMedia(media: HTMLMediaElement) {\n    logger.log('attachMedia');\n    this._media = media;\n    this.trigger(Events.MEDIA_ATTACHING, { media: media });\n  }\n\n  /**\n   * Detach Hls.js from the media\n   */\n  detachMedia() {\n    logger.log('detachMedia');\n    this.trigger(Events.MEDIA_DETACHING, undefined);\n    this._media = null;\n  }\n\n  /**\n   * Set the source URL. Can be relative or absolute.\n   * @param {string} url\n   */\n  loadSource(url: string) {\n    this.stopLoad();\n    const media = this.media;\n    const loadedSource = this.url;\n    const loadingSource = (this.url = URLToolkit.buildAbsoluteURL(\n      self.location.href,\n      url,\n      {\n        alwaysNormalize: true,\n      }\n    ));\n    logger.log(`loadSource:${loadingSource}`);\n    if (\n      media &&\n      loadedSource &&\n      loadedSource !== loadingSource &&\n      this.bufferController.hasSourceTypes()\n    ) {\n      this.detachMedia();\n      this.attachMedia(media);\n    }\n    // when attaching to a source URL, trigger a playlist load\n    this.trigger(Events.MANIFEST_LOADING, { url: url });\n  }\n\n  /**\n   * Start loading data from the stream source.\n   * Depending on default config, client starts loading automatically when a source is set.\n   *\n   * @param {number} startPosition Set the start position to stream from\n   * @default -1 None (from earliest point)\n   */\n  startLoad(startPosition: number = -1) {\n    logger.log(`startLoad(${startPosition})`);\n    this.networkControllers.forEach((controller) => {\n      controller.startLoad(startPosition);\n    });\n  }\n\n  /**\n   * Stop loading of any stream data.\n   */\n  stopLoad() {\n    logger.log('stopLoad');\n    this.networkControllers.forEach((controller) => {\n      controller.stopLoad();\n    });\n  }\n\n  /**\n   * Swap through possible audio codecs in the stream (for example to switch from stereo to 5.1)\n   */\n  swapAudioCodec() {\n    logger.log('swapAudioCodec');\n    this.streamController.swapAudioCodec();\n  }\n\n  /**\n   * When the media-element fails, this allows to detach and then re-attach it\n   * as one call (convenience method).\n   *\n   * Automatic recovery of media-errors by this process is configurable.\n   */\n  recoverMediaError() {\n    logger.log('recoverMediaError');\n    const media = this._media;\n    this.detachMedia();\n    if (media) {\n      this.attachMedia(media);\n    }\n  }\n\n  removeLevel(levelIndex, urlId = 0) {\n    this.levelController.removeLevel(levelIndex, urlId);\n  }\n\n  /**\n   * @type {Level[]}\n   */\n  get levels(): Array<Level> {\n    const levels = this.levelController.levels;\n    return levels ? levels : [];\n  }\n\n  /**\n   * Index of quality level currently played\n   * @type {number}\n   */\n  get currentLevel(): number {\n    return this.streamController.currentLevel;\n  }\n\n  /**\n   * Set quality level index immediately .\n   * This will flush the current buffer to replace the quality asap.\n   * That means playback will interrupt at least shortly to re-buffer and re-sync eventually.\n   * @type {number} -1 for automatic level selection\n   */\n  set currentLevel(newLevel: number) {\n    logger.log(`set currentLevel:${newLevel}`);\n    this.loadLevel = newLevel;\n    this.abrController.clearTimer();\n    this.streamController.immediateLevelSwitch();\n  }\n\n  /**\n   * Index of next quality level loaded as scheduled by stream controller.\n   * @type {number}\n   */\n  get nextLevel(): number {\n    return this.streamController.nextLevel;\n  }\n\n  /**\n   * Set quality level index for next loaded data.\n   * This will switch the video quality asap, without interrupting playback.\n   * May abort current loading of data, and flush parts of buffer (outside currently played fragment region).\n   * @type {number} -1 for automatic level selection\n   */\n  set nextLevel(newLevel: number) {\n    logger.log(`set nextLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n    this.streamController.nextLevelSwitch();\n  }\n\n  /**\n   * Return the quality level of the currently or last (of none is loaded currently) segment\n   * @type {number}\n   */\n  get loadLevel(): number {\n    return this.levelController.level;\n  }\n\n  /**\n   * Set quality level index for next loaded data in a conservative way.\n   * This will switch the quality without flushing, but interrupt current loading.\n   * Thus the moment when the quality switch will appear in effect will only be after the already existing buffer.\n   * @type {number} newLevel -1 for automatic level selection\n   */\n  set loadLevel(newLevel: number) {\n    logger.log(`set loadLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n  }\n\n  /**\n   * get next quality level loaded\n   * @type {number}\n   */\n  get nextLoadLevel(): number {\n    return this.levelController.nextLoadLevel;\n  }\n\n  /**\n   * Set quality level of next loaded segment in a fully \"non-destructive\" way.\n   * Same as `loadLevel` but will wait for next switch (until current loading is done).\n   * @type {number} level\n   */\n  set nextLoadLevel(level: number) {\n    this.levelController.nextLoadLevel = level;\n  }\n\n  /**\n   * Return \"first level\": like a default level, if not set,\n   * falls back to index of first level referenced in manifest\n   * @type {number}\n   */\n  get firstLevel(): number {\n    return Math.max(this.levelController.firstLevel, this.minAutoLevel);\n  }\n\n  /**\n   * Sets \"first-level\", see getter.\n   * @type {number}\n   */\n  set firstLevel(newLevel: number) {\n    logger.log(`set firstLevel:${newLevel}`);\n    this.levelController.firstLevel = newLevel;\n  }\n\n  /**\n   * Return start level (level of first fragment that will be played back)\n   * if not overrided by user, first level appearing in manifest will be used as start level\n   * if -1 : automatic start level selection, playback will start from level matching download bandwidth\n   * (determined from download of first segment)\n   * @type {number}\n   */\n  get startLevel(): number {\n    return this.levelController.startLevel;\n  }\n\n  /**\n   * set  start level (level of first fragment that will be played back)\n   * if not overrided by user, first level appearing in manifest will be used as start level\n   * if -1 : automatic start level selection, playback will start from level matching download bandwidth\n   * (determined from download of first segment)\n   * @type {number} newLevel\n   */\n  set startLevel(newLevel: number) {\n    logger.log(`set startLevel:${newLevel}`);\n    // if not in automatic start level detection, ensure startLevel is greater than minAutoLevel\n    if (newLevel !== -1) {\n      newLevel = Math.max(newLevel, this.minAutoLevel);\n    }\n\n    this.levelController.startLevel = newLevel;\n  }\n\n  /**\n   * Get the current setting for capLevelToPlayerSize\n   *\n   * @type {boolean}\n   */\n  get capLevelToPlayerSize(): boolean {\n    return this.config.capLevelToPlayerSize;\n  }\n\n  /**\n   * set  dynamically set capLevelToPlayerSize against (`CapLevelController`)\n   *\n   * @type {boolean}\n   */\n  set capLevelToPlayerSize(shouldStartCapping: boolean) {\n    const newCapLevelToPlayerSize = !!shouldStartCapping;\n\n    if (newCapLevelToPlayerSize !== this.config.capLevelToPlayerSize) {\n      if (newCapLevelToPlayerSize) {\n        this.capLevelController.startCapping(); // If capping occurs, nextLevelSwitch will happen based on size.\n      } else {\n        this.capLevelController.stopCapping();\n        this.autoLevelCapping = -1;\n        this.streamController.nextLevelSwitch(); // Now we're uncapped, get the next level asap.\n      }\n\n      this.config.capLevelToPlayerSize = newCapLevelToPlayerSize;\n    }\n  }\n\n  /**\n   * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)\n   * @type {number}\n   */\n  get autoLevelCapping(): number {\n    return this._autoLevelCapping;\n  }\n\n  /**\n   * get bandwidth estimate\n   * @type {number}\n   */\n  get bandwidthEstimate(): number {\n    const { bwEstimator } = this.abrController;\n    if (!bwEstimator) {\n      return NaN;\n    }\n    return bwEstimator.getEstimate();\n  }\n\n  /**\n   * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)\n   * @type {number}\n   */\n  set autoLevelCapping(newLevel: number) {\n    if (this._autoLevelCapping !== newLevel) {\n      logger.log(`set autoLevelCapping:${newLevel}`);\n      this._autoLevelCapping = newLevel;\n    }\n  }\n\n  get maxHdcpLevel(): HdcpLevel {\n    return this._maxHdcpLevel;\n  }\n\n  set maxHdcpLevel(value: HdcpLevel) {\n    if (HdcpLevels.indexOf(value) > -1) {\n      this._maxHdcpLevel = value;\n    }\n  }\n\n  /**\n   * True when automatic level selection enabled\n   * @type {boolean}\n   */\n  get autoLevelEnabled(): boolean {\n    return this.levelController.manualLevel === -1;\n  }\n\n  /**\n   * Level set manually (if any)\n   * @type {number}\n   */\n  get manualLevel(): number {\n    return this.levelController.manualLevel;\n  }\n\n  /**\n   * min level selectable in auto mode according to config.minAutoBitrate\n   * @type {number}\n   */\n  get minAutoLevel(): number {\n    const {\n      levels,\n      config: { minAutoBitrate },\n    } = this;\n    if (!levels) return 0;\n\n    const len = levels.length;\n    for (let i = 0; i < len; i++) {\n      if (levels[i].maxBitrate >= minAutoBitrate) {\n        return i;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * max level selectable in auto mode according to autoLevelCapping\n   * @type {number}\n   */\n  get maxAutoLevel(): number {\n    const { levels, autoLevelCapping, maxHdcpLevel } = this;\n\n    let maxAutoLevel;\n    if (autoLevelCapping === -1 && levels && levels.length) {\n      maxAutoLevel = levels.length - 1;\n    } else {\n      maxAutoLevel = autoLevelCapping;\n    }\n\n    if (maxHdcpLevel) {\n      for (let i = maxAutoLevel; i--; ) {\n        const hdcpLevel = levels[i].attrs['HDCP-LEVEL'];\n        if (hdcpLevel && hdcpLevel <= maxHdcpLevel) {\n          return i;\n        }\n      }\n    }\n\n    return maxAutoLevel;\n  }\n\n  /**\n   * next automatically selected quality level\n   * @type {number}\n   */\n  get nextAutoLevel(): number {\n    // ensure next auto level is between  min and max auto level\n    return Math.min(\n      Math.max(this.abrController.nextAutoLevel, this.minAutoLevel),\n      this.maxAutoLevel\n    );\n  }\n\n  /**\n   * this setter is used to force next auto level.\n   * this is useful to force a switch down in auto mode:\n   * in case of load error on level N, hls.js can set nextAutoLevel to N-1 for example)\n   * forced value is valid for one fragment. upon successful frag loading at forced level,\n   * this value will be resetted to -1 by ABR controller.\n   * @type {number}\n   */\n  set nextAutoLevel(nextLevel: number) {\n    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, nextLevel);\n  }\n\n  /**\n   * get the datetime value relative to media.currentTime for the active level Program Date Time if present\n   * @type {Date}\n   */\n  public get playingDate(): Date | null {\n    return this.streamController.currentProgramDateTime;\n  }\n\n  public get mainForwardBufferInfo(): BufferInfo | null {\n    return this.streamController.getMainFwdBufferInfo();\n  }\n\n  /**\n   * @type {AudioTrack[]}\n   */\n  get audioTracks(): Array<MediaPlaylist> {\n    const audioTrackController = this.audioTrackController;\n    return audioTrackController ? audioTrackController.audioTracks : [];\n  }\n\n  /**\n   * index of the selected audio track (index in audio track lists)\n   * @type {number}\n   */\n  get audioTrack(): number {\n    const audioTrackController = this.audioTrackController;\n    return audioTrackController ? audioTrackController.audioTrack : -1;\n  }\n\n  /**\n   * selects an audio track, based on its index in audio track lists\n   * @type {number}\n   */\n  set audioTrack(audioTrackId: number) {\n    const audioTrackController = this.audioTrackController;\n    if (audioTrackController) {\n      audioTrackController.audioTrack = audioTrackId;\n    }\n  }\n\n  /**\n   * get alternate subtitle tracks list from playlist\n   * @type {MediaPlaylist[]}\n   */\n  get subtitleTracks(): Array<MediaPlaylist> {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController\n      ? subtitleTrackController.subtitleTracks\n      : [];\n  }\n\n  /**\n   * index of the selected subtitle track (index in subtitle track lists)\n   * @type {number}\n   */\n  get subtitleTrack(): number {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController ? subtitleTrackController.subtitleTrack : -1;\n  }\n\n  get media() {\n    return this._media;\n  }\n\n  /**\n   * select an subtitle track, based on its index in subtitle track lists\n   * @type {number}\n   */\n  set subtitleTrack(subtitleTrackId: number) {\n    const subtitleTrackController = this.subtitleTrackController;\n    if (subtitleTrackController) {\n      subtitleTrackController.subtitleTrack = subtitleTrackId;\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get subtitleDisplay(): boolean {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController\n      ? subtitleTrackController.subtitleDisplay\n      : false;\n  }\n\n  /**\n   * Enable/disable subtitle display rendering\n   * @type {boolean}\n   */\n  set subtitleDisplay(value: boolean) {\n    const subtitleTrackController = this.subtitleTrackController;\n    if (subtitleTrackController) {\n      subtitleTrackController.subtitleDisplay = value;\n    }\n  }\n\n  /**\n   * get mode for Low-Latency HLS loading\n   * @type {boolean}\n   */\n  get lowLatencyMode() {\n    return this.config.lowLatencyMode;\n  }\n\n  /**\n   * Enable/disable Low-Latency HLS part playlist and segment loading, and start live streams at playlist PART-HOLD-BACK rather than HOLD-BACK.\n   * @type {boolean}\n   */\n  set lowLatencyMode(mode: boolean) {\n    this.config.lowLatencyMode = mode;\n  }\n\n  /**\n   * position (in seconds) of live sync point (ie edge of live position minus safety delay defined by ```hls.config.liveSyncDuration```)\n   * @type {number}\n   */\n  get liveSyncPosition(): number | null {\n    return this.latencyController.liveSyncPosition;\n  }\n\n  /**\n   * estimated position (in seconds) of live edge (ie edge of live playlist plus time sync playlist advanced)\n   * returns 0 before first playlist is loaded\n   * @type {number}\n   */\n  get latency() {\n    return this.latencyController.latency;\n  }\n\n  /**\n   * maximum distance from the edge before the player seeks forward to ```hls.liveSyncPosition```\n   * configured using ```liveMaxLatencyDurationCount``` (multiple of target duration) or ```liveMaxLatencyDuration```\n   * returns 0 before first playlist is loaded\n   * @type {number}\n   */\n  get maxLatency(): number {\n    return this.latencyController.maxLatency;\n  }\n\n  /**\n   * target distance from the edge as calculated by the latency controller\n   * @type {number}\n   */\n  get targetLatency(): number | null {\n    return this.latencyController.targetLatency;\n  }\n\n  /**\n   * the rate at which the edge of the current live playlist is advancing or 1 if there is none\n   * @type {number}\n   */\n  get drift(): number | null {\n    return this.latencyController.drift;\n  }\n\n  /**\n   * set to true when startLoad is called before MANIFEST_PARSED event\n   * @type {boolean}\n   */\n  get forceStartLoad(): boolean {\n    return this.streamController.forceStartLoad;\n  }\n}\n\nexport type {\n  MediaPlaylist,\n  ErrorDetails,\n  ErrorTypes,\n  Events,\n  Level,\n  HlsListeners,\n  HlsEventEmitter,\n  HlsConfig,\n  Fragment,\n};\n\nexport type {\n  ABRControllerConfig,\n  BufferControllerConfig,\n  CapLevelControllerConfig,\n  CMCDControllerConfig,\n  EMEControllerConfig,\n  DRMSystemOptions,\n  FPSControllerConfig,\n  FragmentLoaderConfig,\n  FragmentLoaderConstructor,\n  LevelControllerConfig,\n  MP4RemuxerConfig,\n  PlaylistLoaderConfig,\n  PlaylistLoaderConstructor,\n  StreamControllerConfig,\n  LatencyControllerConfig,\n  MetadataControllerConfig,\n  TimelineControllerConfig,\n  TSDemuxerConfig,\n} from './config';\nexport type { CuesInterface } from './utils/cues';\nexport type {\n  MediaKeyFunc,\n  KeySystems,\n  KeySystemFormats,\n} from './utils/mediakeys-helper';\nexport type { DateRange } from './loader/date-range';\nexport type { LoadStats } from './loader/load-stats';\nexport type { LevelKey } from './loader/level-key';\nexport type { LevelDetails } from './loader/level-details';\nexport type { SourceBufferName } from './types/buffer';\nexport type {\n  MetadataSample,\n  MetadataSchema,\n  UserdataSample,\n} from './types/demuxer';\nexport type {\n  HdcpLevel,\n  HdcpLevels,\n  HlsSkip,\n  HlsUrlParameters,\n  LevelAttributes,\n  LevelParsed,\n} from './types/level';\nexport type {\n  PlaylistLevelType,\n  HlsChunkPerformanceTiming,\n  HlsPerformanceTiming,\n  PlaylistContextType,\n  PlaylistLoaderContext,\n  FragmentLoaderContext,\n  Loader,\n  LoaderStats,\n  LoaderContext,\n  LoaderResponse,\n  LoaderConfiguration,\n  LoaderCallbacks,\n  LoaderOnProgress,\n  LoaderOnAbort,\n  LoaderOnError,\n  LoaderOnSuccess,\n  LoaderOnTimeout,\n  HlsProgressivePerformanceTiming,\n} from './types/loader';\nexport type {\n  MediaPlaylistType,\n  MainPlaylistType,\n  AudioPlaylistType,\n  SubtitlePlaylistType,\n} from './types/media-playlist';\nexport type { Track, TrackSet } from './types/track';\nexport type { ChunkMetadata } from './types/transmuxer';\nexport type {\n  BaseSegment,\n  Part,\n  ElementaryStreams,\n  ElementaryStreamTypes,\n  ElementaryStreamInfo,\n} from './loader/fragment';\nexport type {\n  TrackLoadingData,\n  TrackLoadedData,\n  AudioTrackLoadedData,\n  AudioTracksUpdatedData,\n  AudioTrackSwitchedData,\n  AudioTrackSwitchingData,\n  BackBufferData,\n  BufferAppendedData,\n  BufferAppendingData,\n  BufferCodecsData,\n  BufferCreatedData,\n  BufferEOSData,\n  BufferFlushedData,\n  BufferFlushingData,\n  CuesParsedData,\n  ErrorData,\n  FPSDropData,\n  FPSDropLevelCappingData,\n  FragBufferedData,\n  FragChangedData,\n  FragDecryptedData,\n  FragLoadedData,\n  FragLoadEmergencyAbortedData,\n  FragLoadingData,\n  FragParsedData,\n  FragParsingInitSegmentData,\n  FragParsingMetadataData,\n  FragParsingUserdataData,\n  InitPTSFoundData,\n  KeyLoadedData,\n  KeyLoadingData,\n  LevelLoadedData,\n  LevelLoadingData,\n  LevelPTSUpdatedData,\n  LevelsUpdatedData,\n  LevelSwitchedData,\n  LevelSwitchingData,\n  LevelUpdatedData,\n  LiveBackBufferData,\n  ManifestLoadedData,\n  ManifestLoadingData,\n  ManifestParsedData,\n  MediaAttachedData,\n  MediaAttachingData,\n  NonNativeTextTrack,\n  NonNativeTextTracksData,\n  SubtitleFragProcessedData,\n  SubtitleTrackLoadedData,\n  SubtitleTracksUpdatedData,\n  SubtitleTrackSwitchData,\n} from './types/events';\nexport type { AttrList } from './utils/attr-list';\n","import { getMediaSource } from './utils/mediasource-helper';\nimport type { ExtendedSourceBuffer } from './types/buffer';\n\nfunction getSourceBuffer(): typeof self.SourceBuffer {\n  return self.SourceBuffer || (self as any).WebKitSourceBuffer;\n}\n\nexport function isSupported(): boolean {\n  const mediaSource = getMediaSource();\n  if (!mediaSource) {\n    return false;\n  }\n  const sourceBuffer = getSourceBuffer();\n  const isTypeSupported =\n    mediaSource &&\n    typeof mediaSource.isTypeSupported === 'function' &&\n    mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n  // if SourceBuffer is exposed ensure its API is valid\n  // safari and old version of Chrome doe not expose SourceBuffer globally so checking SourceBuffer.prototype is impossible\n  const sourceBufferValidAPI =\n    !sourceBuffer ||\n    (sourceBuffer.prototype &&\n      typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n      typeof sourceBuffer.prototype.remove === 'function');\n  return !!isTypeSupported && !!sourceBufferValidAPI;\n}\n\nexport function changeTypeSupported(): boolean {\n  const sourceBuffer = getSourceBuffer();\n  return (\n    typeof (sourceBuffer?.prototype as ExtendedSourceBuffer)?.changeType ===\n    'function'\n  );\n}\n","import { AttrList } from '../utils/attr-list';\nimport { logger } from '../utils/logger';\n\nexport enum DateRangeAttribute {\n  ID = 'ID',\n  CLASS = 'CLASS',\n  START_DATE = 'START-DATE',\n  DURATION = 'DURATION',\n  END_DATE = 'END-DATE',\n  END_ON_NEXT = 'END-ON-NEXT',\n  PLANNED_DURATION = 'PLANNED-DURATION',\n  SCTE35_OUT = 'SCTE35-OUT',\n  SCTE35_IN = 'SCTE35-IN',\n}\n\nexport class DateRange {\n  public attr: AttrList;\n  private _startDate: Date;\n  private _endDate?: Date;\n  private _badValueForSameId?: string;\n\n  constructor(dateRangeAttr: AttrList, dateRangeWithSameId?: DateRange) {\n    if (dateRangeWithSameId) {\n      const previousAttr = dateRangeWithSameId.attr;\n      for (const key in previousAttr) {\n        if (\n          Object.prototype.hasOwnProperty.call(dateRangeAttr, key) &&\n          dateRangeAttr[key] !== previousAttr[key]\n        ) {\n          logger.warn(\n            `DATERANGE tag attribute: \"${key}\" does not match for tags with ID: \"${dateRangeAttr.ID}\"`\n          );\n          this._badValueForSameId = key;\n          break;\n        }\n      }\n      // Merge DateRange tags with the same ID\n      dateRangeAttr = Object.assign(\n        new AttrList({}),\n        previousAttr,\n        dateRangeAttr\n      );\n    }\n    this.attr = dateRangeAttr;\n    this._startDate = new Date(dateRangeAttr[DateRangeAttribute.START_DATE]);\n    if (DateRangeAttribute.END_DATE in this.attr) {\n      const endDate = new Date(this.attr[DateRangeAttribute.END_DATE]);\n      if (Number.isFinite(endDate.getTime())) {\n        this._endDate = endDate;\n      }\n    }\n  }\n\n  get id(): string {\n    return this.attr.ID;\n  }\n\n  get class(): string {\n    return this.attr.CLASS;\n  }\n\n  get startDate(): Date {\n    return this._startDate;\n  }\n\n  get endDate(): Date | null {\n    if (this._endDate) {\n      return this._endDate;\n    }\n    const duration = this.duration;\n    if (duration !== null) {\n      return new Date(this._startDate.getTime() + duration * 1000);\n    }\n    return null;\n  }\n\n  get duration(): number | null {\n    if (DateRangeAttribute.DURATION in this.attr) {\n      const duration = this.attr.decimalFloatingPoint(\n        DateRangeAttribute.DURATION\n      );\n      if (Number.isFinite(duration)) {\n        return duration;\n      }\n    } else if (this._endDate) {\n      return (this._endDate.getTime() - this._startDate.getTime()) / 1000;\n    }\n    return null;\n  }\n\n  get plannedDuration(): number | null {\n    if (DateRangeAttribute.PLANNED_DURATION in this.attr) {\n      return this.attr.decimalFloatingPoint(\n        DateRangeAttribute.PLANNED_DURATION\n      );\n    }\n    return null;\n  }\n\n  get endOnNext(): boolean {\n    return this.attr.bool(DateRangeAttribute.END_ON_NEXT);\n  }\n\n  get isValid(): boolean {\n    return (\n      !!this.id &&\n      !this._badValueForSameId &&\n      Number.isFinite(this.startDate.getTime()) &&\n      (this.duration === null || this.duration >= 0) &&\n      (!this.endOnNext || !!this.class)\n    );\n  }\n}\n","import { ErrorTypes, ErrorDetails } from '../errors';\nimport { Fragment } from './fragment';\nimport {\n  Loader,\n  LoaderConfiguration,\n  FragmentLoaderContext,\n} from '../types/loader';\nimport type { HlsConfig } from '../config';\nimport type { BaseSegment, Part } from './fragment';\nimport type { FragLoadedData, PartsLoadedData } from '../types/events';\n\nconst MIN_CHUNK_SIZE = Math.pow(2, 17); // 128kb\n\nexport default class FragmentLoader {\n  private readonly config: HlsConfig;\n  private loader: Loader<FragmentLoaderContext> | null = null;\n  private partLoadTimeout: number = -1;\n\n  constructor(config: HlsConfig) {\n    this.config = config;\n  }\n\n  destroy() {\n    if (this.loader) {\n      this.loader.destroy();\n      this.loader = null;\n    }\n  }\n\n  abort() {\n    if (this.loader) {\n      // Abort the loader for current fragment. Only one may load at any given time\n      this.loader.abort();\n    }\n  }\n\n  load(\n    frag: Fragment,\n    onProgress?: FragmentLoadProgressCallback\n  ): Promise<FragLoadedData> {\n    const url = frag.url;\n    if (!url) {\n      return Promise.reject(\n        new LoadError(\n          {\n            type: ErrorTypes.NETWORK_ERROR,\n            details: ErrorDetails.FRAG_LOAD_ERROR,\n            fatal: false,\n            frag,\n            networkDetails: null,\n          },\n          `Fragment does not have a ${url ? 'part list' : 'url'}`\n        )\n      );\n    }\n    this.abort();\n\n    const config = this.config;\n    const FragmentILoader = config.fLoader;\n    const DefaultILoader = config.loader;\n\n    return new Promise((resolve, reject) => {\n      if (this.loader) {\n        this.loader.destroy();\n      }\n      const loader =\n        (this.loader =\n        frag.loader =\n          FragmentILoader\n            ? new FragmentILoader(config)\n            : (new DefaultILoader(config) as Loader<FragmentLoaderContext>));\n      const loaderContext = createLoaderContext(frag);\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: 0,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: frag.sn === 'initSegment' ? Infinity : MIN_CHUNK_SIZE,\n      };\n      // Assign frag stats to the loader's stats reference\n      frag.stats = loader.stats;\n      loader.load(loaderContext, loaderConfig, {\n        onSuccess: (response, stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          let payload = response.data as ArrayBuffer;\n          if (context.resetIV && frag.decryptdata) {\n            frag.decryptdata.iv = new Uint8Array(payload.slice(0, 16));\n            payload = payload.slice(16);\n          }\n          resolve({\n            frag,\n            part: null,\n            payload,\n            networkDetails,\n          });\n        },\n        onError: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_ERROR,\n              fatal: false,\n              frag,\n              response,\n              networkDetails,\n            })\n          );\n        },\n        onAbort: (stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.INTERNAL_ABORTED,\n              fatal: false,\n              frag,\n              networkDetails,\n            })\n          );\n        },\n        onTimeout: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_TIMEOUT,\n              fatal: false,\n              frag,\n              networkDetails,\n            })\n          );\n        },\n        onProgress: (stats, context, data, networkDetails) => {\n          if (onProgress) {\n            onProgress({\n              frag,\n              part: null,\n              payload: data as ArrayBuffer,\n              networkDetails,\n            });\n          }\n        },\n      });\n    });\n  }\n\n  public loadPart(\n    frag: Fragment,\n    part: Part,\n    onProgress: FragmentLoadProgressCallback\n  ): Promise<FragLoadedData> {\n    this.abort();\n\n    const config = this.config;\n    const FragmentILoader = config.fLoader;\n    const DefaultILoader = config.loader;\n\n    return new Promise((resolve, reject) => {\n      if (this.loader) {\n        this.loader.destroy();\n      }\n      const loader =\n        (this.loader =\n        frag.loader =\n          FragmentILoader\n            ? new FragmentILoader(config)\n            : (new DefaultILoader(config) as Loader<FragmentLoaderContext>));\n      const loaderContext = createLoaderContext(frag, part);\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: 0,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: MIN_CHUNK_SIZE,\n      };\n      // Assign part stats to the loader's stats reference\n      part.stats = loader.stats;\n      loader.load(loaderContext, loaderConfig, {\n        onSuccess: (response, stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          this.updateStatsFromPart(frag, part);\n          const partLoadedData: FragLoadedData = {\n            frag,\n            part,\n            payload: response.data as ArrayBuffer,\n            networkDetails,\n          };\n          onProgress(partLoadedData);\n          resolve(partLoadedData);\n        },\n        onError: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_ERROR,\n              fatal: false,\n              frag,\n              part,\n              response,\n              networkDetails,\n            })\n          );\n        },\n        onAbort: (stats, context, networkDetails) => {\n          frag.stats.aborted = part.stats.aborted;\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.INTERNAL_ABORTED,\n              fatal: false,\n              frag,\n              part,\n              networkDetails,\n            })\n          );\n        },\n        onTimeout: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_TIMEOUT,\n              fatal: false,\n              frag,\n              part,\n              networkDetails,\n            })\n          );\n        },\n      });\n    });\n  }\n\n  private updateStatsFromPart(frag: Fragment, part: Part) {\n    const fragStats = frag.stats;\n    const partStats = part.stats;\n    const partTotal = partStats.total;\n    fragStats.loaded += partStats.loaded;\n    if (partTotal) {\n      const estTotalParts = Math.round(frag.duration / part.duration);\n      const estLoadedParts = Math.min(\n        Math.round(fragStats.loaded / partTotal),\n        estTotalParts\n      );\n      const estRemainingParts = estTotalParts - estLoadedParts;\n      const estRemainingBytes =\n        estRemainingParts * Math.round(fragStats.loaded / estLoadedParts);\n      fragStats.total = fragStats.loaded + estRemainingBytes;\n    } else {\n      fragStats.total = Math.max(fragStats.loaded, fragStats.total);\n    }\n    const fragLoading = fragStats.loading;\n    const partLoading = partStats.loading;\n    if (fragLoading.start) {\n      // add to fragment loader latency\n      fragLoading.first += partLoading.first - partLoading.start;\n    } else {\n      fragLoading.start = partLoading.start;\n      fragLoading.first = partLoading.first;\n    }\n    fragLoading.end = partLoading.end;\n  }\n\n  private resetLoader(frag: Fragment, loader: Loader<FragmentLoaderContext>) {\n    frag.loader = null;\n    if (this.loader === loader) {\n      self.clearTimeout(this.partLoadTimeout);\n      this.loader = null;\n    }\n    loader.destroy();\n  }\n}\n\nfunction createLoaderContext(\n  frag: Fragment,\n  part: Part | null = null\n): FragmentLoaderContext {\n  const segment: BaseSegment = part || frag;\n  const loaderContext: FragmentLoaderContext = {\n    frag,\n    part,\n    responseType: 'arraybuffer',\n    url: segment.url,\n    headers: {},\n    rangeStart: 0,\n    rangeEnd: 0,\n  };\n  const start = segment.byteRangeStartOffset;\n  const end = segment.byteRangeEndOffset;\n  if (Number.isFinite(start) && Number.isFinite(end)) {\n    let byteRangeStart = start;\n    let byteRangeEnd = end;\n    if (frag.sn === 'initSegment' && frag.decryptdata?.method === 'AES-128') {\n      // MAP segment encrypted with method 'AES-128', when served with HTTP Range,\n      // has the unencrypted size specified in the range.\n      // Ref: https://tools.ietf.org/html/draft-pantos-hls-rfc8216bis-08#section-6.3.6\n      const fragmentLen = end - start;\n      if (fragmentLen % 16) {\n        byteRangeEnd = end + (16 - (fragmentLen % 16));\n      }\n      if (start !== 0) {\n        loaderContext.resetIV = true;\n        byteRangeStart = start - 16;\n      }\n    }\n    loaderContext.rangeStart = byteRangeStart;\n    loaderContext.rangeEnd = byteRangeEnd;\n  }\n  return loaderContext;\n}\n\nexport class LoadError extends Error {\n  public readonly data: FragLoadFailResult;\n  constructor(data: FragLoadFailResult, ...params) {\n    super(...params);\n    this.data = data;\n  }\n}\n\nexport interface FragLoadFailResult {\n  type: string;\n  details: string;\n  fatal: boolean;\n  frag: Fragment;\n  part?: Part;\n  response?: {\n    // error status code\n    code: number;\n    // error description\n    text: string;\n  };\n  networkDetails: any;\n}\n\nexport type FragmentLoadProgressCallback = (\n  result: FragLoadedData | PartsLoadedData\n) => void;\n","import { buildAbsoluteURL } from 'url-toolkit';\nimport { LevelKey } from './level-key';\nimport { LoadStats } from './load-stats';\nimport { AttrList } from '../utils/attr-list';\nimport type {\n  FragmentLoaderContext,\n  KeyLoaderContext,\n  Loader,\n  PlaylistLevelType,\n} from '../types/loader';\nimport type { KeySystemFormats } from '../utils/mediakeys-helper';\n\nexport enum ElementaryStreamTypes {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  AUDIOVIDEO = 'audiovideo',\n}\n\nexport interface ElementaryStreamInfo {\n  startPTS: number;\n  endPTS: number;\n  startDTS: number;\n  endDTS: number;\n  partial?: boolean;\n}\n\nexport type ElementaryStreams = Record<\n  ElementaryStreamTypes,\n  ElementaryStreamInfo | null\n>;\n\nexport class BaseSegment {\n  private _byteRange: number[] | null = null;\n  private _url: string | null = null;\n\n  // baseurl is the URL to the playlist\n  public readonly baseurl: string;\n  // relurl is the portion of the URL that comes from inside the playlist.\n  public relurl?: string;\n  // Holds the types of data this fragment supports\n  public elementaryStreams: ElementaryStreams = {\n    [ElementaryStreamTypes.AUDIO]: null,\n    [ElementaryStreamTypes.VIDEO]: null,\n    [ElementaryStreamTypes.AUDIOVIDEO]: null,\n  };\n\n  constructor(baseurl: string) {\n    this.baseurl = baseurl;\n  }\n\n  // setByteRange converts a EXT-X-BYTERANGE attribute into a two element array\n  setByteRange(value: string, previous?: BaseSegment) {\n    const params = value.split('@', 2);\n    const byteRange: number[] = [];\n    if (params.length === 1) {\n      byteRange[0] = previous ? previous.byteRangeEndOffset : 0;\n    } else {\n      byteRange[0] = parseInt(params[1]);\n    }\n    byteRange[1] = parseInt(params[0]) + byteRange[0];\n    this._byteRange = byteRange;\n  }\n\n  get byteRange(): number[] {\n    if (!this._byteRange) {\n      return [];\n    }\n\n    return this._byteRange;\n  }\n\n  get byteRangeStartOffset(): number {\n    return this.byteRange[0];\n  }\n\n  get byteRangeEndOffset(): number {\n    return this.byteRange[1];\n  }\n\n  get url(): string {\n    if (!this._url && this.baseurl && this.relurl) {\n      this._url = buildAbsoluteURL(this.baseurl, this.relurl, {\n        alwaysNormalize: true,\n      });\n    }\n    return this._url || '';\n  }\n\n  set url(value: string) {\n    this._url = value;\n  }\n}\n\nexport class Fragment extends BaseSegment {\n  private _decryptdata: LevelKey | null = null;\n\n  public rawProgramDateTime: string | null = null;\n  public programDateTime: number | null = null;\n  public tagList: Array<string[]> = [];\n\n  // EXTINF has to be present for a m3u8 to be considered valid\n  public duration: number = 0;\n  // sn notates the sequence number for a segment, and if set to a string can be 'initSegment'\n  public sn: number | 'initSegment' = 0;\n  // levelkeys are the EXT-X-KEY tags that apply to this segment for decryption\n  // core difference from the private field _decryptdata is the lack of the initialized IV\n  // _decryptdata will set the IV for this segment based on the segment number in the fragment\n  public levelkeys?: { [key: string]: LevelKey };\n  // A string representing the fragment type\n  public readonly type: PlaylistLevelType;\n  // A reference to the loader. Set while the fragment is loading, and removed afterwards. Used to abort fragment loading\n  public loader: Loader<FragmentLoaderContext> | null = null;\n  // A reference to the key loader. Set while the key is loading, and removed afterwards. Used to abort key loading\n  public keyLoader: Loader<KeyLoaderContext> | null = null;\n  // The level/track index to which the fragment belongs\n  public level: number = -1;\n  // The continuity counter of the fragment\n  public cc: number = 0;\n  // The starting Presentation Time Stamp (PTS) of the fragment. Set after transmux complete.\n  public startPTS?: number;\n  // The ending Presentation Time Stamp (PTS) of the fragment. Set after transmux complete.\n  public endPTS?: number;\n  // The latest Presentation Time Stamp (PTS) appended to the buffer.\n  public appendedPTS?: number;\n  // The starting Decode Time Stamp (DTS) of the fragment. Set after transmux complete.\n  public startDTS!: number;\n  // The ending Decode Time Stamp (DTS) of the fragment. Set after transmux complete.\n  public endDTS!: number;\n  // The start time of the fragment, as listed in the manifest. Updated after transmux complete.\n  public start: number = 0;\n  // Set by `updateFragPTSDTS` in level-helper\n  public deltaPTS?: number;\n  // The maximum starting Presentation Time Stamp (audio/video PTS) of the fragment. Set after transmux complete.\n  public maxStartPTS?: number;\n  // The minimum ending Presentation Time Stamp (audio/video PTS) of the fragment. Set after transmux complete.\n  public minEndPTS?: number;\n  // Load/parse timing information\n  public stats: LoadStats = new LoadStats();\n  public urlId: number = 0;\n  public data?: Uint8Array;\n  // A flag indicating whether the segment was downloaded in order to test bitrate, and was not buffered\n  public bitrateTest: boolean = false;\n  // #EXTINF  segment title\n  public title: string | null = null;\n  // The Media Initialization Section for this segment\n  public initSegment: Fragment | null = null;\n  // Fragment is the last fragment in the media playlist\n  public endList?: boolean;\n\n  constructor(type: PlaylistLevelType, baseurl: string) {\n    super(baseurl);\n    this.type = type;\n  }\n\n  get decryptdata(): LevelKey | null {\n    const { levelkeys } = this;\n    if (!levelkeys && !this._decryptdata) {\n      return null;\n    }\n\n    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {\n      const key = this.levelkeys.identity;\n      if (key) {\n        this._decryptdata = key.getDecryptData(this.sn);\n      } else {\n        const keyFormats = Object.keys(this.levelkeys);\n        if (keyFormats.length === 1) {\n          return (this._decryptdata = this.levelkeys[\n            keyFormats[0]\n          ].getDecryptData(this.sn));\n        } else {\n          // Multiple keys. key-loader to call Fragment.setKeyFormat based on selected key-system.\n        }\n      }\n    }\n\n    return this._decryptdata;\n  }\n\n  get end(): number {\n    return this.start + this.duration;\n  }\n\n  get endProgramDateTime() {\n    if (this.programDateTime === null) {\n      return null;\n    }\n\n    if (!Number.isFinite(this.programDateTime)) {\n      return null;\n    }\n\n    const duration = !Number.isFinite(this.duration) ? 0 : this.duration;\n\n    return this.programDateTime + duration * 1000;\n  }\n\n  get encrypted() {\n    // At the m3u8-parser level we need to add support for manifest signalled keyformats\n    // when we want the fragment to start reporting that it is encrypted.\n    // Currently, keyFormat will only be set for identity keys\n    if (this._decryptdata?.encrypted) {\n      return true;\n    } else if (this.levelkeys) {\n      const keyFormats = Object.keys(this.levelkeys);\n      const len = keyFormats.length;\n      if (len > 1 || (len === 1 && this.levelkeys[keyFormats[0]].encrypted)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  setKeyFormat(keyFormat: KeySystemFormats) {\n    if (this.levelkeys) {\n      const key = this.levelkeys[keyFormat];\n      if (key && !this._decryptdata) {\n        this._decryptdata = key.getDecryptData(this.sn);\n      }\n    }\n  }\n\n  abortRequests(): void {\n    this.loader?.abort();\n    this.keyLoader?.abort();\n  }\n\n  setElementaryStreamInfo(\n    type: ElementaryStreamTypes,\n    startPTS: number,\n    endPTS: number,\n    startDTS: number,\n    endDTS: number,\n    partial: boolean = false\n  ) {\n    const { elementaryStreams } = this;\n    const info = elementaryStreams[type];\n    if (!info) {\n      elementaryStreams[type] = {\n        startPTS,\n        endPTS,\n        startDTS,\n        endDTS,\n        partial,\n      };\n      return;\n    }\n\n    info.startPTS = Math.min(info.startPTS, startPTS);\n    info.endPTS = Math.max(info.endPTS, endPTS);\n    info.startDTS = Math.min(info.startDTS, startDTS);\n    info.endDTS = Math.max(info.endDTS, endDTS);\n  }\n\n  clearElementaryStreamInfo() {\n    const { elementaryStreams } = this;\n    elementaryStreams[ElementaryStreamTypes.AUDIO] = null;\n    elementaryStreams[ElementaryStreamTypes.VIDEO] = null;\n    elementaryStreams[ElementaryStreamTypes.AUDIOVIDEO] = null;\n  }\n}\n\nexport class Part extends BaseSegment {\n  public readonly fragOffset: number = 0;\n  public readonly duration: number = 0;\n  public readonly gap: boolean = false;\n  public readonly independent: boolean = false;\n  public readonly relurl: string;\n  public readonly fragment: Fragment;\n  public readonly index: number;\n  public stats: LoadStats = new LoadStats();\n\n  constructor(\n    partAttrs: AttrList,\n    frag: Fragment,\n    baseurl: string,\n    index: number,\n    previous?: Part\n  ) {\n    super(baseurl);\n    this.duration = partAttrs.decimalFloatingPoint('DURATION');\n    this.gap = partAttrs.bool('GAP');\n    this.independent = partAttrs.bool('INDEPENDENT');\n    this.relurl = partAttrs.enumeratedString('URI') as string;\n    this.fragment = frag;\n    this.index = index;\n    const byteRange = partAttrs.enumeratedString('BYTERANGE');\n    if (byteRange) {\n      this.setByteRange(byteRange, previous);\n    }\n    if (previous) {\n      this.fragOffset = previous.fragOffset + previous.duration;\n    }\n  }\n\n  get start(): number {\n    return this.fragment.start + this.fragOffset;\n  }\n\n  get end(): number {\n    return this.start + this.duration;\n  }\n\n  get loaded(): boolean {\n    const { elementaryStreams } = this;\n    return !!(\n      elementaryStreams.audio ||\n      elementaryStreams.video ||\n      elementaryStreams.audiovideo\n    );\n  }\n}\n","import { ErrorTypes, ErrorDetails } from '../errors';\nimport {\n  LoaderStats,\n  LoaderResponse,\n  LoaderConfiguration,\n  LoaderCallbacks,\n  Loader,\n  KeyLoaderContext,\n} from '../types/loader';\nimport { LoadError } from './fragment-loader';\nimport type { HlsConfig } from '../hls';\nimport type { Fragment } from '../loader/fragment';\nimport type { ComponentAPI } from '../types/component-api';\nimport type { KeyLoadedData } from '../types/events';\nimport type { LevelKey } from './level-key';\nimport type EMEController from '../controller/eme-controller';\nimport type { MediaKeySessionContext } from '../controller/eme-controller';\nimport type { KeySystemFormats } from '../utils/mediakeys-helper';\n\nexport interface KeyLoaderInfo {\n  decryptdata: LevelKey;\n  keyLoadPromise: Promise<KeyLoadedData> | null;\n  loader: Loader<KeyLoaderContext> | null;\n  mediaKeySessionContext: MediaKeySessionContext | null;\n}\nexport default class KeyLoader implements ComponentAPI {\n  private readonly config: HlsConfig;\n  public keyUriToKeyInfo: { [keyuri: string]: KeyLoaderInfo } = {};\n  public emeController: EMEController | null = null;\n\n  constructor(config: HlsConfig) {\n    this.config = config;\n  }\n\n  abort() {\n    for (const uri in this.keyUriToKeyInfo) {\n      const loader = this.keyUriToKeyInfo[uri].loader;\n      if (loader) {\n        loader.abort();\n      }\n    }\n  }\n\n  detach() {\n    for (const uri in this.keyUriToKeyInfo) {\n      const keyInfo = this.keyUriToKeyInfo[uri];\n      // Remove cached EME keys on detach\n      if (\n        keyInfo.mediaKeySessionContext ||\n        keyInfo.decryptdata.isCommonEncryption\n      ) {\n        delete this.keyUriToKeyInfo[uri];\n      }\n    }\n  }\n\n  destroy() {\n    this.detach();\n    for (const uri in this.keyUriToKeyInfo) {\n      const loader = this.keyUriToKeyInfo[uri].loader;\n      if (loader) {\n        loader.destroy();\n      }\n    }\n    this.keyUriToKeyInfo = {};\n  }\n\n  createKeyLoadError(\n    frag: Fragment,\n    details: ErrorDetails = ErrorDetails.KEY_LOAD_ERROR,\n    networkDetails?: any,\n    message?: string\n  ): LoadError {\n    return new LoadError({\n      type: ErrorTypes.NETWORK_ERROR,\n      details,\n      fatal: false,\n      frag,\n      networkDetails,\n    });\n  }\n\n  loadClear(\n    loadingFrag: Fragment,\n    encryptedFragments: Fragment[]\n  ): void | Promise<void> {\n    if (this.emeController && this.config.emeEnabled) {\n      // access key-system with nearest key on start (loaidng frag is unencrypted)\n      const { sn, cc } = loadingFrag;\n      for (let i = 0; i < encryptedFragments.length; i++) {\n        const frag = encryptedFragments[i];\n        if (cc <= frag.cc && (sn === 'initSegment' || sn < frag.sn)) {\n          this.emeController\n            .selectKeySystemFormat(frag)\n            .then((keySystemFormat) => {\n              frag.setKeyFormat(keySystemFormat);\n            });\n          break;\n        }\n      }\n    }\n  }\n\n  load(frag: Fragment): Promise<KeyLoadedData> {\n    if (!frag.decryptdata && frag.encrypted && this.emeController) {\n      // Multiple keys, but none selected, resolve in eme-controller\n      return this.emeController\n        .selectKeySystemFormat(frag)\n        .then((keySystemFormat) => {\n          return this.loadInternal(frag, keySystemFormat);\n        });\n    }\n\n    return this.loadInternal(frag);\n  }\n\n  loadInternal(\n    frag: Fragment,\n    keySystemFormat?: KeySystemFormats\n  ): Promise<KeyLoadedData> {\n    if (keySystemFormat) {\n      frag.setKeyFormat(keySystemFormat);\n    }\n    const decryptdata = frag.decryptdata;\n    if (!decryptdata) {\n      const errorMessage = keySystemFormat\n        ? `Expected frag.decryptdata to be defined after setting format ${keySystemFormat}`\n        : 'Missing decryption data on fragment in onKeyLoading';\n      return Promise.reject(\n        this.createKeyLoadError(\n          frag,\n          ErrorDetails.KEY_LOAD_ERROR,\n          null,\n          errorMessage\n        )\n      );\n    }\n    const uri = decryptdata.uri;\n    if (!uri) {\n      return Promise.reject(\n        this.createKeyLoadError(\n          frag,\n          ErrorDetails.KEY_LOAD_ERROR,\n          null,\n          `Invalid key URI: \"${uri}\"`\n        )\n      );\n    }\n    let keyInfo = this.keyUriToKeyInfo[uri];\n\n    if (keyInfo?.decryptdata.key) {\n      decryptdata.key = keyInfo.decryptdata.key;\n      return Promise.resolve({ frag, keyInfo });\n    }\n    // Return key load promise as long as it does not have a mediakey session with an unusable key status\n    if (keyInfo?.keyLoadPromise) {\n      switch (keyInfo.mediaKeySessionContext?.keyStatus) {\n        case undefined:\n        case 'status-pending':\n        case 'usable':\n        case 'usable-in-future':\n          return keyInfo.keyLoadPromise.then((keyLoadedData) => {\n            // Return the correct fragment with updated decryptdata key and loaded keyInfo\n            decryptdata.key = keyLoadedData.keyInfo.decryptdata.key;\n            return { frag, keyInfo };\n          });\n      }\n      // If we have a key session and status and it is not pending or usable, continue\n      // This will go back to the eme-controller for expired keys to get a new keyLoadPromise\n    }\n\n    // Load the key or return the loading promise\n    keyInfo = this.keyUriToKeyInfo[uri] = {\n      decryptdata,\n      keyLoadPromise: null,\n      loader: null,\n      mediaKeySessionContext: null,\n    };\n\n    switch (decryptdata.method) {\n      case 'ISO-23001-7':\n      case 'SAMPLE-AES':\n      case 'SAMPLE-AES-CENC':\n      case 'SAMPLE-AES-CTR':\n        if (decryptdata.keyFormat === 'identity') {\n          // loadKeyHTTP handles http(s) and data URLs\n          return this.loadKeyHTTP(keyInfo, frag);\n        }\n        return this.loadKeyEME(keyInfo, frag);\n      case 'AES-128':\n        return this.loadKeyHTTP(keyInfo, frag);\n      default:\n        return Promise.reject(\n          this.createKeyLoadError(\n            frag,\n            ErrorDetails.KEY_LOAD_ERROR,\n            null,\n            `Key supplied with unsupported METHOD: \"${decryptdata.method}\"`\n          )\n        );\n    }\n  }\n\n  loadKeyEME(keyInfo: KeyLoaderInfo, frag: Fragment): Promise<KeyLoadedData> {\n    const keyLoadedData: KeyLoadedData = { frag, keyInfo };\n    if (this.emeController && this.config.emeEnabled) {\n      const keySessionContextPromise =\n        this.emeController.loadKey(keyLoadedData);\n      if (keySessionContextPromise) {\n        return (keyInfo.keyLoadPromise = keySessionContextPromise.then(\n          (keySessionContext) => {\n            keyInfo.mediaKeySessionContext = keySessionContext;\n            return keyLoadedData;\n          }\n        )).catch((error) => {\n          // Remove promise for license renewal or retry\n          keyInfo.keyLoadPromise = null;\n          throw error;\n        });\n      }\n    }\n    return Promise.resolve(keyLoadedData);\n  }\n\n  loadKeyHTTP(keyInfo: KeyLoaderInfo, frag: Fragment): Promise<KeyLoadedData> {\n    const config = this.config;\n    const Loader = config.loader;\n    const keyLoader = new Loader(config) as Loader<KeyLoaderContext>;\n    frag.keyLoader = keyInfo.loader = keyLoader;\n\n    return (keyInfo.keyLoadPromise = new Promise((resolve, reject) => {\n      const loaderContext: KeyLoaderContext = {\n        keyInfo,\n        frag,\n        responseType: 'arraybuffer',\n        url: keyInfo.decryptdata.uri,\n      };\n\n      // maxRetry is 0 so that instead of retrying the same key on the same variant multiple times,\n      // key-loader will trigger an error and rely on stream-controller to handle retry logic.\n      // this will also align retry logic with fragment-loader\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: config.fragLoadingRetryDelay,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: 0,\n      };\n\n      const loaderCallbacks: LoaderCallbacks<KeyLoaderContext> = {\n        onSuccess: (\n          response: LoaderResponse,\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          const { frag, keyInfo, url: uri } = context;\n          if (!frag.decryptdata || keyInfo !== this.keyUriToKeyInfo[uri]) {\n            return reject(\n              this.createKeyLoadError(\n                frag,\n                ErrorDetails.KEY_LOAD_ERROR,\n                networkDetails,\n                'after key load, decryptdata unset or changed'\n              )\n            );\n          }\n\n          keyInfo.decryptdata.key = frag.decryptdata.key = new Uint8Array(\n            response.data as ArrayBuffer\n          );\n\n          // detach fragment key loader on load success\n          frag.keyLoader = null;\n          keyInfo.loader = null;\n          resolve({ frag, keyInfo });\n        },\n\n        onError: (\n          error: { code: number; text: string },\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.KEY_LOAD_ERROR,\n              networkDetails\n            )\n          );\n        },\n\n        onTimeout: (\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.KEY_LOAD_TIMEOUT,\n              networkDetails\n            )\n          );\n        },\n\n        onAbort: (\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.INTERNAL_ABORTED,\n              networkDetails\n            )\n          );\n        },\n      };\n\n      keyLoader.load(loaderContext, loaderConfig, loaderCallbacks);\n    }));\n  }\n\n  private resetLoader(context: KeyLoaderContext) {\n    const { frag, keyInfo, url: uri } = context;\n    const loader = keyInfo.loader;\n    if (frag.keyLoader === loader) {\n      frag.keyLoader = null;\n      keyInfo.loader = null;\n    }\n    delete this.keyUriToKeyInfo[uri];\n    if (loader) {\n      loader.destroy();\n    }\n  }\n}\n","import { Part } from './fragment';\nimport type { Fragment } from './fragment';\nimport type { AttrList } from '../utils/attr-list';\nimport type { DateRange } from './date-range';\n\nconst DEFAULT_TARGET_DURATION = 10;\n\nexport class LevelDetails {\n  public PTSKnown: boolean = false;\n  public alignedSliding: boolean = false;\n  public averagetargetduration?: number;\n  public endCC: number = 0;\n  public endSN: number = 0;\n  public fragments: Fragment[];\n  public fragmentHint?: Fragment;\n  public partList: Part[] | null = null;\n  public dateRanges: Record<string, DateRange>;\n  public live: boolean = true;\n  public ageHeader: number = 0;\n  public advancedDateTime?: number;\n  public updated: boolean = true;\n  public advanced: boolean = true;\n  public availabilityDelay?: number; // Manifest reload synchronization\n  public misses: number = 0;\n  public startCC: number = 0;\n  public startSN: number = 0;\n  public startTimeOffset: number | null = null;\n  public targetduration: number = 0;\n  public totalduration: number = 0;\n  public type: string | null = null;\n  public url: string;\n  public m3u8: string = '';\n  public version: number | null = null;\n  public canBlockReload: boolean = false;\n  public canSkipUntil: number = 0;\n  public canSkipDateRanges: boolean = false;\n  public skippedSegments: number = 0;\n  public recentlyRemovedDateranges?: string[];\n  public partHoldBack: number = 0;\n  public holdBack: number = 0;\n  public partTarget: number = 0;\n  public preloadHint?: AttrList;\n  public renditionReports?: AttrList[];\n  public tuneInGoal: number = 0;\n  public deltaUpdateFailed?: boolean;\n  public driftStartTime: number = 0;\n  public driftEndTime: number = 0;\n  public driftStart: number = 0;\n  public driftEnd: number = 0;\n  public encryptedFragments: Fragment[];\n\n  constructor(baseUrl) {\n    this.fragments = [];\n    this.encryptedFragments = [];\n    this.dateRanges = {};\n    this.url = baseUrl;\n  }\n\n  reloaded(previous: LevelDetails | undefined) {\n    if (!previous) {\n      this.advanced = true;\n      this.updated = true;\n      return;\n    }\n    const partSnDiff = this.lastPartSn - previous.lastPartSn;\n    const partIndexDiff = this.lastPartIndex - previous.lastPartIndex;\n    this.updated =\n      this.endSN !== previous.endSN || !!partIndexDiff || !!partSnDiff;\n    this.advanced =\n      this.endSN > previous.endSN ||\n      partSnDiff > 0 ||\n      (partSnDiff === 0 && partIndexDiff > 0);\n    if (this.updated || this.advanced) {\n      this.misses = Math.floor(previous.misses * 0.6);\n    } else {\n      this.misses = previous.misses + 1;\n    }\n    this.availabilityDelay = previous.availabilityDelay;\n  }\n\n  get hasProgramDateTime(): boolean {\n    if (this.fragments.length) {\n      return Number.isFinite(\n        this.fragments[this.fragments.length - 1].programDateTime as number\n      );\n    }\n    return false;\n  }\n\n  get levelTargetDuration(): number {\n    return (\n      this.averagetargetduration ||\n      this.targetduration ||\n      DEFAULT_TARGET_DURATION\n    );\n  }\n\n  get drift(): number {\n    const runTime = this.driftEndTime - this.driftStartTime;\n    if (runTime > 0) {\n      const runDuration = this.driftEnd - this.driftStart;\n      return (runDuration * 1000) / runTime;\n    }\n    return 1;\n  }\n\n  get edge(): number {\n    return this.partEnd || this.fragmentEnd;\n  }\n\n  get partEnd(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].end;\n    }\n    return this.fragmentEnd;\n  }\n\n  get fragmentEnd(): number {\n    if (this.fragments?.length) {\n      return this.fragments[this.fragments.length - 1].end;\n    }\n    return 0;\n  }\n\n  get age(): number {\n    if (this.advancedDateTime) {\n      return Math.max(Date.now() - this.advancedDateTime, 0) / 1000;\n    }\n    return 0;\n  }\n\n  get lastPartIndex(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].index;\n    }\n    return -1;\n  }\n\n  get lastPartSn(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].fragment.sn as number;\n    }\n    return this.endSN;\n  }\n}\n","import {\n  changeEndianness,\n  convertDataUriToArrayBytes,\n} from '../utils/keysystem-util';\nimport { KeySystemFormats } from '../utils/mediakeys-helper';\nimport { mp4pssh } from '../utils/mp4-tools';\nimport { logger } from '../utils/logger';\nimport { base64Decode } from '../utils/numeric-encoding-utils';\n\nlet keyUriToKeyIdMap: { [uri: string]: Uint8Array } = {};\n\nexport interface DecryptData {\n  uri: string;\n  method: string;\n  keyFormat: string;\n  keyFormatVersions: number[];\n  iv: Uint8Array | null;\n  key: Uint8Array | null;\n  keyId: Uint8Array | null;\n  pssh: Uint8Array | null;\n  encrypted: boolean;\n  isCommonEncryption: boolean;\n}\n\nexport class LevelKey implements DecryptData {\n  public readonly uri: string;\n  public readonly method: string;\n  public readonly keyFormat: string;\n  public readonly keyFormatVersions: number[];\n  public readonly encrypted: boolean;\n  public readonly isCommonEncryption: boolean;\n  public iv: Uint8Array | null = null;\n  public key: Uint8Array | null = null;\n  public keyId: Uint8Array | null = null;\n  public pssh: Uint8Array | null = null;\n\n  static clearKeyUriToKeyIdMap() {\n    keyUriToKeyIdMap = {};\n  }\n\n  constructor(\n    method: string,\n    uri: string,\n    format: string,\n    formatversions: number[] = [1],\n    iv: Uint8Array | null = null\n  ) {\n    this.method = method;\n    this.uri = uri;\n    this.keyFormat = format;\n    this.keyFormatVersions = formatversions;\n    this.iv = iv;\n    this.encrypted = method ? method !== 'NONE' : false;\n    this.isCommonEncryption = this.encrypted && method !== 'AES-128';\n  }\n\n  public isSupported(): boolean {\n    // If it's Segment encryption or No encryption, just select that key system\n    if (this.method) {\n      if (this.method === 'AES-128' || this.method === 'NONE') {\n        return true;\n      }\n      switch (this.keyFormat) {\n        case 'identity':\n          // Maintain support for clear SAMPLE-AES with MPEG-3 TS\n          return this.method === 'SAMPLE-AES';\n        case KeySystemFormats.FAIRPLAY:\n        case KeySystemFormats.WIDEVINE:\n        case KeySystemFormats.PLAYREADY:\n        case KeySystemFormats.CLEARKEY:\n          return (\n            [\n              'ISO-23001-7',\n              'SAMPLE-AES',\n              'SAMPLE-AES-CENC',\n              'SAMPLE-AES-CTR',\n            ].indexOf(this.method) !== -1\n          );\n      }\n    }\n    return false;\n  }\n\n  public getDecryptData(sn: number | 'initSegment'): LevelKey | null {\n    if (!this.encrypted || !this.uri) {\n      return null;\n    }\n\n    if (this.method === 'AES-128' && this.uri && !this.iv) {\n      if (typeof sn !== 'number') {\n        // We are fetching decryption data for a initialization segment\n        // If the segment was encrypted with AES-128\n        // It must have an IV defined. We cannot substitute the Segment Number in.\n        if (this.method === 'AES-128' && !this.iv) {\n          logger.warn(\n            `missing IV for initialization segment with method=\"${this.method}\" - compliance issue`\n          );\n        }\n        // Explicitly set sn to resulting value from implicit conversions 'initSegment' values for IV generation.\n        sn = 0;\n      }\n      const iv = createInitializationVector(sn);\n      const decryptdata = new LevelKey(\n        this.method,\n        this.uri,\n        'identity',\n        this.keyFormatVersions,\n        iv\n      );\n      return decryptdata;\n    }\n\n    // Initialize keyId if possible\n    const keyBytes = convertDataUriToArrayBytes(this.uri);\n    if (keyBytes) {\n      switch (this.keyFormat) {\n        case KeySystemFormats.WIDEVINE:\n          this.pssh = keyBytes;\n          // In case of widevine keyID is embedded in PSSH box. Read Key ID.\n          if (keyBytes.length >= 22) {\n            this.keyId = keyBytes.subarray(\n              keyBytes.length - 22,\n              keyBytes.length - 6\n            );\n          }\n          break;\n        case KeySystemFormats.PLAYREADY: {\n          const PlayReadyKeySystemUUID = new Uint8Array([\n            0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6,\n            0x5b, 0xe0, 0x88, 0x5f, 0x95,\n          ]);\n\n          this.pssh = mp4pssh(PlayReadyKeySystemUUID, null, keyBytes);\n\n          const keyBytesUtf16 = new Uint16Array(\n            keyBytes.buffer,\n            keyBytes.byteOffset,\n            keyBytes.byteLength / 2\n          );\n          const keyByteStr = String.fromCharCode.apply(\n            null,\n            Array.from(keyBytesUtf16)\n          );\n\n          // Parse Playready WRMHeader XML\n          const xmlKeyBytes = keyByteStr.substring(\n            keyByteStr.indexOf('<'),\n            keyByteStr.length\n          );\n          const parser = new DOMParser();\n          const xmlDoc = parser.parseFromString(xmlKeyBytes, 'text/xml');\n          const keyData = xmlDoc.getElementsByTagName('KID')[0];\n          if (keyData) {\n            const keyId = keyData.childNodes[0]\n              ? keyData.childNodes[0].nodeValue\n              : keyData.getAttribute('VALUE');\n            if (keyId) {\n              const keyIdArray = base64Decode(keyId).subarray(0, 16);\n              // KID value in PRO is a base64-encoded little endian GUID interpretation of UUID\n              // KID value in ‘tenc’ is a big endian UUID GUID interpretation of UUID\n              changeEndianness(keyIdArray);\n              this.keyId = keyIdArray;\n            }\n          }\n          break;\n        }\n        default: {\n          let keydata = keyBytes.subarray(0, 16);\n          if (keydata.length !== 16) {\n            const padded = new Uint8Array(16);\n            padded.set(keydata, 16 - keydata.length);\n            keydata = padded;\n          }\n          this.keyId = keydata;\n          break;\n        }\n      }\n    }\n\n    // Default behavior: assign a new keyId for each uri\n    if (!this.keyId || this.keyId.byteLength !== 16) {\n      let keyId = keyUriToKeyIdMap[this.uri];\n      if (!keyId) {\n        const val =\n          Object.keys(keyUriToKeyIdMap).length % Number.MAX_SAFE_INTEGER;\n        keyId = new Uint8Array(16);\n        const dv = new DataView(keyId.buffer, 12, 4); // Just set the last 4 bytes\n        dv.setUint32(0, val);\n        keyUriToKeyIdMap[this.uri] = keyId;\n      }\n      this.keyId = keyId;\n    }\n\n    return this;\n  }\n}\n\nfunction createInitializationVector(segmentNumber: number): Uint8Array {\n  const uint8View = new Uint8Array(16);\n  for (let i = 12; i < 16; i++) {\n    uint8View[i] = (segmentNumber >> (8 * (15 - i))) & 0xff;\n  }\n  return uint8View;\n}\n","import type {\n  HlsPerformanceTiming,\n  HlsProgressivePerformanceTiming,\n  LoaderStats,\n} from '../types/loader';\n\nexport class LoadStats implements LoaderStats {\n  aborted: boolean = false;\n  loaded: number = 0;\n  retry: number = 0;\n  total: number = 0;\n  chunkCount: number = 0;\n  bwEstimate: number = 0;\n  loading: HlsProgressivePerformanceTiming = { start: 0, first: 0, end: 0 };\n  parsing: HlsPerformanceTiming = { start: 0, end: 0 };\n  buffering: HlsProgressivePerformanceTiming = { start: 0, first: 0, end: 0 };\n}\n","import { buildAbsoluteURL } from 'url-toolkit';\nimport { DateRange } from './date-range';\nimport { Fragment, Part } from './fragment';\nimport { LevelDetails } from './level-details';\nimport { LevelKey } from './level-key';\nimport { AttrList } from '../utils/attr-list';\nimport { logger } from '../utils/logger';\nimport type { CodecType } from '../utils/codecs';\nimport { isCodecType } from '../utils/codecs';\nimport type {\n  MediaPlaylist,\n  AudioGroup,\n  MediaPlaylistType,\n} from '../types/media-playlist';\nimport type { PlaylistLevelType } from '../types/loader';\nimport type { LevelAttributes, LevelParsed } from '../types/level';\n\ntype M3U8ParserFragments = Array<Fragment | null>;\n\ntype ParsedMultiVariantPlaylist = {\n  levels: LevelParsed[];\n  sessionData: Record<string, AttrList> | null;\n  sessionKeys: LevelKey[] | null;\n};\n\n// https://regex101.com is your friend\nconst MASTER_PLAYLIST_REGEX =\n  /#EXT-X-STREAM-INF:([^\\r\\n]*)(?:[\\r\\n](?:#[^\\r\\n]*)?)*([^\\r\\n]+)|#EXT-X-SESSION-DATA:([^\\r\\n]*)[\\r\\n]+|#EXT-X-SESSION-KEY:([^\\n\\r]*)[\\r\\n]+/g;\nconst MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;\n\nconst LEVEL_PLAYLIST_REGEX_FAST = new RegExp(\n  [\n    /#EXTINF:\\s*(\\d*(?:\\.\\d+)?)(?:,(.*)\\s+)?/.source, // duration (#EXTINF:<duration>,<title>), group 1 => duration, group 2 => title\n    /(?!#) *(\\S[\\S ]*)/.source, // segment URI, group 3 => the URI (note newline is not eaten)\n    /#EXT-X-BYTERANGE:*(.+)/.source, // next segment's byterange, group 4 => range spec (x@y)\n    /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, // next segment's program date/time group 5 => the datetime spec\n    /#.*/.source, // All other non-segment oriented tags will match with all groups empty\n  ].join('|'),\n  'g'\n);\n\nconst LEVEL_PLAYLIST_REGEX_SLOW = new RegExp(\n  [\n    /#(EXTM3U)/.source,\n    /#EXT-X-(DATERANGE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/\n      .source,\n    /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\\d+)/\n      .source,\n    /#EXT-X-(DISCONTINUITY|ENDLIST|GAP)/.source,\n    /(#)([^:]*):(.*)/.source,\n    /(#)(.*)(?:.*)\\r?\\n?/.source,\n  ].join('|')\n);\n\nexport default class M3U8Parser {\n  static findGroup(\n    groups: Array<AudioGroup>,\n    mediaGroupId: string\n  ): AudioGroup | undefined {\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      if (group.id === mediaGroupId) {\n        return group;\n      }\n    }\n  }\n\n  static convertAVC1ToAVCOTI(codec) {\n    // Convert avc1 codec string from RFC-4281 to RFC-6381 for MediaSource.isTypeSupported\n    const avcdata = codec.split('.');\n    if (avcdata.length > 2) {\n      let result = avcdata.shift() + '.';\n      result += parseInt(avcdata.shift()).toString(16);\n      result += ('000' + parseInt(avcdata.shift()).toString(16)).slice(-4);\n      return result;\n    }\n    return codec;\n  }\n\n  static resolve(url, baseUrl) {\n    return buildAbsoluteURL(baseUrl, url, { alwaysNormalize: true });\n  }\n\n  static parseMasterPlaylist(\n    string: string,\n    baseurl: string\n  ): ParsedMultiVariantPlaylist {\n    const levels: LevelParsed[] = [];\n    const levelsWithKnownCodecs: LevelParsed[] = [];\n    const sessionData: Record<string, AttrList> = {};\n    const sessionKeys: LevelKey[] = [];\n\n    let hasSessionData = false;\n    MASTER_PLAYLIST_REGEX.lastIndex = 0;\n\n    let result: RegExpExecArray | null;\n    while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {\n      if (result[1]) {\n        // '#EXT-X-STREAM-INF' is found, parse level tag  in group 1\n        const attrs = new AttrList(result[1]);\n        const level: LevelParsed = {\n          attrs,\n          bitrate:\n            attrs.decimalInteger('AVERAGE-BANDWIDTH') ||\n            attrs.decimalInteger('BANDWIDTH'),\n          name: attrs.NAME,\n          url: M3U8Parser.resolve(result[2], baseurl),\n        };\n\n        const resolution = attrs.decimalResolution('RESOLUTION');\n        if (resolution) {\n          level.width = resolution.width;\n          level.height = resolution.height;\n        }\n\n        setCodecs(\n          (attrs.CODECS || '').split(/[ ,]+/).filter((c) => c),\n          level\n        );\n\n        if (level.videoCodec && level.videoCodec.indexOf('avc1') !== -1) {\n          level.videoCodec = M3U8Parser.convertAVC1ToAVCOTI(level.videoCodec);\n        }\n\n        if (!level.unknownCodecs?.length) {\n          levelsWithKnownCodecs.push(level);\n        }\n\n        levels.push(level);\n      } else if (result[3]) {\n        // '#EXT-X-SESSION-DATA' is found, parse session data in group 3\n        const sessionAttrs = new AttrList(result[3]);\n        if (sessionAttrs['DATA-ID']) {\n          hasSessionData = true;\n          sessionData[sessionAttrs['DATA-ID']] = sessionAttrs;\n        }\n      } else if (result[4]) {\n        // '#EXT-X-SESSION-KEY' is found\n        const keyTag = result[4];\n        const sessionKey = parseKey(keyTag, baseurl);\n        if (sessionKey.encrypted && sessionKey.isSupported()) {\n          sessionKeys.push(sessionKey);\n        } else {\n          logger.warn(\n            `[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: \"${keyTag}\"`\n          );\n        }\n      }\n    }\n    // Filter out levels with unknown codecs if it does not remove all levels\n    const stripUnknownCodecLevels =\n      levelsWithKnownCodecs.length > 0 &&\n      levelsWithKnownCodecs.length < levels.length;\n\n    return {\n      levels: stripUnknownCodecLevels ? levelsWithKnownCodecs : levels,\n      sessionData: hasSessionData ? sessionData : null,\n      sessionKeys: sessionKeys.length ? sessionKeys : null,\n    };\n  }\n\n  static parseMasterPlaylistMedia(\n    string: string,\n    baseurl: string,\n    type: MediaPlaylistType,\n    groups: Array<AudioGroup> = []\n  ): Array<MediaPlaylist> {\n    let result: RegExpExecArray | null;\n    const medias: Array<MediaPlaylist> = [];\n    let id = 0;\n    MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;\n    while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) !== null) {\n      const attrs = new AttrList(result[1]) as LevelAttributes;\n      if (attrs.TYPE === type) {\n        const media: MediaPlaylist = {\n          attrs,\n          bitrate: 0,\n          id: id++,\n          groupId: attrs['GROUP-ID'],\n          instreamId: attrs['INSTREAM-ID'],\n          name: attrs.NAME || attrs.LANGUAGE || '',\n          type,\n          default: attrs.bool('DEFAULT'),\n          autoselect: attrs.bool('AUTOSELECT'),\n          forced: attrs.bool('FORCED'),\n          lang: attrs.LANGUAGE,\n          url: attrs.URI ? M3U8Parser.resolve(attrs.URI, baseurl) : '',\n        };\n\n        if (groups.length) {\n          // If there are audio or text groups signalled in the manifest, let's look for a matching codec string for this track\n          // If we don't find the track signalled, lets use the first audio groups codec we have\n          // Acting as a best guess\n          const groupCodec =\n            M3U8Parser.findGroup(groups, media.groupId as string) || groups[0];\n          assignCodec(media, groupCodec, 'audioCodec');\n          assignCodec(media, groupCodec, 'textCodec');\n        }\n\n        medias.push(media);\n      }\n    }\n    return medias;\n  }\n\n  static parseLevelPlaylist(\n    string: string,\n    baseurl: string,\n    id: number,\n    type: PlaylistLevelType,\n    levelUrlId: number\n  ): LevelDetails {\n    const level = new LevelDetails(baseurl);\n    const fragments: M3U8ParserFragments = level.fragments;\n    // The most recent init segment seen (applies to all subsequent segments)\n    let currentInitSegment: Fragment | null = null;\n    let currentSN = 0;\n    let currentPart = 0;\n    let totalduration = 0;\n    let discontinuityCounter = 0;\n    let prevFrag: Fragment | null = null;\n    let frag: Fragment = new Fragment(type, baseurl);\n    let result: RegExpExecArray | RegExpMatchArray | null;\n    let i: number;\n    let levelkeys: { [key: string]: LevelKey } | undefined;\n    let firstPdtIndex = -1;\n    let createNextFrag = false;\n\n    LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;\n    level.m3u8 = string;\n\n    while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {\n      if (createNextFrag) {\n        createNextFrag = false;\n        frag = new Fragment(type, baseurl);\n        // setup the next fragment for part loading\n        frag.start = totalduration;\n        frag.sn = currentSN;\n        frag.cc = discontinuityCounter;\n        frag.level = id;\n        if (currentInitSegment) {\n          frag.initSegment = currentInitSegment;\n          frag.rawProgramDateTime = currentInitSegment.rawProgramDateTime;\n          currentInitSegment.rawProgramDateTime = null;\n        }\n      }\n\n      const duration = result[1];\n      if (duration) {\n        // INF\n        frag.duration = parseFloat(duration);\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        const title = (' ' + result[2]).slice(1);\n        frag.title = title || null;\n        frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);\n      } else if (result[3]) {\n        // url\n        if (Number.isFinite(frag.duration)) {\n          frag.start = totalduration;\n          if (levelkeys) {\n            setFragLevelKeys(frag, levelkeys, level);\n          }\n          frag.sn = currentSN;\n          frag.level = id;\n          frag.cc = discontinuityCounter;\n          frag.urlId = levelUrlId;\n          fragments.push(frag);\n          // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n          frag.relurl = (' ' + result[3]).slice(1);\n          assignProgramDateTime(frag, prevFrag);\n          prevFrag = frag;\n          totalduration += frag.duration;\n          currentSN++;\n          currentPart = 0;\n          createNextFrag = true;\n        }\n      } else if (result[4]) {\n        // X-BYTERANGE\n        const data = (' ' + result[4]).slice(1);\n        if (prevFrag) {\n          frag.setByteRange(data, prevFrag);\n        } else {\n          frag.setByteRange(data);\n        }\n      } else if (result[5]) {\n        // PROGRAM-DATE-TIME\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        frag.rawProgramDateTime = (' ' + result[5]).slice(1);\n        frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);\n        if (firstPdtIndex === -1) {\n          firstPdtIndex = fragments.length;\n        }\n      } else {\n        result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);\n        if (!result) {\n          logger.warn('No matches on slow regex match for level playlist!');\n          continue;\n        }\n        for (i = 1; i < result.length; i++) {\n          if (typeof result[i] !== 'undefined') {\n            break;\n          }\n        }\n\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        const tag = (' ' + result[i]).slice(1);\n        const value1 = (' ' + result[i + 1]).slice(1);\n        const value2 = result[i + 2] ? (' ' + result[i + 2]).slice(1) : '';\n\n        switch (tag) {\n          case 'PLAYLIST-TYPE':\n            level.type = value1.toUpperCase();\n            break;\n          case 'MEDIA-SEQUENCE':\n            currentSN = level.startSN = parseInt(value1);\n            break;\n          case 'SKIP': {\n            const skipAttrs = new AttrList(value1);\n            const skippedSegments =\n              skipAttrs.decimalInteger('SKIPPED-SEGMENTS');\n            if (Number.isFinite(skippedSegments)) {\n              level.skippedSegments = skippedSegments;\n              // This will result in fragments[] containing undefined values, which we will fill in with `mergeDetails`\n              for (let i = skippedSegments; i--; ) {\n                fragments.unshift(null);\n              }\n              currentSN += skippedSegments;\n            }\n            const recentlyRemovedDateranges = skipAttrs.enumeratedString(\n              'RECENTLY-REMOVED-DATERANGES'\n            );\n            if (recentlyRemovedDateranges) {\n              level.recentlyRemovedDateranges =\n                recentlyRemovedDateranges.split('\\t');\n            }\n            break;\n          }\n          case 'TARGETDURATION':\n            level.targetduration = parseFloat(value1);\n            break;\n          case 'VERSION':\n            level.version = parseInt(value1);\n            break;\n          case 'EXTM3U':\n            break;\n          case 'ENDLIST':\n            level.live = false;\n            break;\n          case '#':\n            if (value1 || value2) {\n              frag.tagList.push(value2 ? [value1, value2] : [value1]);\n            }\n            break;\n          case 'DISCONTINUITY':\n            discontinuityCounter++;\n            frag.tagList.push(['DIS']);\n            break;\n          case 'GAP':\n            frag.tagList.push([tag]);\n            break;\n          case 'BITRATE':\n            frag.tagList.push([tag, value1]);\n            break;\n          case 'DATERANGE': {\n            const dateRangeAttr = new AttrList(value1);\n            const dateRange = new DateRange(\n              dateRangeAttr,\n              level.dateRanges[dateRangeAttr.ID]\n            );\n            if (dateRange.isValid || level.skippedSegments) {\n              level.dateRanges[dateRange.id] = dateRange;\n            } else {\n              logger.warn(`Ignoring invalid DATERANGE tag: \"${value1}\"`);\n            }\n            // Add to fragment tag list for backwards compatibility (< v1.2.0)\n            frag.tagList.push(['EXT-X-DATERANGE', value1]);\n            break;\n          }\n          case 'DISCONTINUITY-SEQUENCE':\n            discontinuityCounter = parseInt(value1);\n            break;\n          case 'KEY': {\n            const levelKey = parseKey(value1, baseurl);\n            if (levelKey.isSupported()) {\n              if (levelKey.method === 'NONE') {\n                levelkeys = undefined;\n                break;\n              }\n              if (!levelkeys) {\n                levelkeys = {};\n              }\n              if (levelkeys[levelKey.keyFormat]) {\n                levelkeys = Object.assign({}, levelkeys);\n              }\n              levelkeys[levelKey.keyFormat] = levelKey;\n            } else {\n              logger.warn(`[Keys] Ignoring invalid EXT-X-KEY tag: \"${value1}\"`);\n            }\n            break;\n          }\n          case 'START': {\n            const startAttrs = new AttrList(value1);\n            const startTimeOffset =\n              startAttrs.decimalFloatingPoint('TIME-OFFSET');\n            // TIME-OFFSET can be 0\n            if (Number.isFinite(startTimeOffset)) {\n              level.startTimeOffset = startTimeOffset;\n            }\n            break;\n          }\n          case 'MAP': {\n            const mapAttrs = new AttrList(value1);\n            if (frag.duration) {\n              // Initial segment tag is after segment duration tag.\n              //   #EXTINF: 6.0\n              //   #EXT-X-MAP:URI=\"init.mp4\n              const init = new Fragment(type, baseurl);\n              setInitSegment(init, mapAttrs, id, levelkeys);\n              currentInitSegment = init;\n              frag.initSegment = currentInitSegment;\n              if (\n                currentInitSegment.rawProgramDateTime &&\n                !frag.rawProgramDateTime\n              ) {\n                frag.rawProgramDateTime = currentInitSegment.rawProgramDateTime;\n              }\n            } else {\n              // Initial segment tag is before segment duration tag\n              setInitSegment(frag, mapAttrs, id, levelkeys);\n              currentInitSegment = frag;\n              createNextFrag = true;\n            }\n            break;\n          }\n          case 'SERVER-CONTROL': {\n            const serverControlAttrs = new AttrList(value1);\n            level.canBlockReload = serverControlAttrs.bool('CAN-BLOCK-RELOAD');\n            level.canSkipUntil = serverControlAttrs.optionalFloat(\n              'CAN-SKIP-UNTIL',\n              0\n            );\n            level.canSkipDateRanges =\n              level.canSkipUntil > 0 &&\n              serverControlAttrs.bool('CAN-SKIP-DATERANGES');\n            level.partHoldBack = serverControlAttrs.optionalFloat(\n              'PART-HOLD-BACK',\n              0\n            );\n            level.holdBack = serverControlAttrs.optionalFloat('HOLD-BACK', 0);\n            break;\n          }\n          case 'PART-INF': {\n            const partInfAttrs = new AttrList(value1);\n            level.partTarget = partInfAttrs.decimalFloatingPoint('PART-TARGET');\n            break;\n          }\n          case 'PART': {\n            let partList = level.partList;\n            if (!partList) {\n              partList = level.partList = [];\n            }\n            const previousFragmentPart =\n              currentPart > 0 ? partList[partList.length - 1] : undefined;\n            const index = currentPart++;\n            const part = new Part(\n              new AttrList(value1),\n              frag,\n              baseurl,\n              index,\n              previousFragmentPart\n            );\n            partList.push(part);\n            frag.duration += part.duration;\n            break;\n          }\n          case 'PRELOAD-HINT': {\n            const preloadHintAttrs = new AttrList(value1);\n            level.preloadHint = preloadHintAttrs;\n            break;\n          }\n          case 'RENDITION-REPORT': {\n            const renditionReportAttrs = new AttrList(value1);\n            level.renditionReports = level.renditionReports || [];\n            level.renditionReports.push(renditionReportAttrs);\n            break;\n          }\n          default:\n            logger.warn(`line parsed but not handled: ${result}`);\n            break;\n        }\n      }\n    }\n    if (prevFrag && !prevFrag.relurl) {\n      fragments.pop();\n      totalduration -= prevFrag.duration;\n      if (level.partList) {\n        level.fragmentHint = prevFrag;\n      }\n    } else if (level.partList) {\n      assignProgramDateTime(frag, prevFrag);\n      frag.cc = discontinuityCounter;\n      level.fragmentHint = frag;\n      if (levelkeys) {\n        setFragLevelKeys(frag, levelkeys, level);\n      }\n    }\n    const fragmentLength = fragments.length;\n    const firstFragment = fragments[0];\n    const lastFragment = fragments[fragmentLength - 1];\n    totalduration += level.skippedSegments * level.targetduration;\n    if (totalduration > 0 && fragmentLength && lastFragment) {\n      level.averagetargetduration = totalduration / fragmentLength;\n      const lastSn = lastFragment.sn;\n      level.endSN = lastSn !== 'initSegment' ? lastSn : 0;\n      if (!level.live) {\n        lastFragment.endList = true;\n      }\n      if (firstFragment) {\n        level.startCC = firstFragment.cc;\n      }\n    } else {\n      level.endSN = 0;\n      level.startCC = 0;\n    }\n    if (level.fragmentHint) {\n      totalduration += level.fragmentHint.duration;\n    }\n    level.totalduration = totalduration;\n    level.endCC = discontinuityCounter;\n\n    /**\n     * Backfill any missing PDT values\n     * \"If the first EXT-X-PROGRAM-DATE-TIME tag in a Playlist appears after\n     * one or more Media Segment URIs, the client SHOULD extrapolate\n     * backward from that tag (using EXTINF durations and/or media\n     * timestamps) to associate dates with those segments.\"\n     * We have already extrapolated forward, but all fragments up to the first instance of PDT do not have their PDTs\n     * computed.\n     */\n    if (firstPdtIndex > 0) {\n      backfillProgramDateTimes(fragments, firstPdtIndex);\n    }\n\n    return level;\n  }\n}\n\nfunction parseKey(keyTag: string, baseurl: string): LevelKey {\n  // https://tools.ietf.org/html/rfc8216#section-4.3.2.4\n  const keyAttrs = new AttrList(keyTag);\n  const decryptmethod = keyAttrs.enumeratedString('METHOD') ?? '';\n  const decrypturi = keyAttrs.URI;\n  const decryptiv = keyAttrs.hexadecimalInteger('IV');\n  const decryptkeyformatversions =\n    keyAttrs.enumeratedString('KEYFORMATVERSIONS');\n  // From RFC: This attribute is OPTIONAL; its absence indicates an implicit value of \"identity\".\n  const decryptkeyformat = keyAttrs.enumeratedString('KEYFORMAT') ?? 'identity';\n\n  if (decrypturi && keyAttrs.IV && !decryptiv) {\n    logger.error(`Invalid IV: ${keyAttrs.IV}`);\n  }\n  // If decrypturi is a URI with a scheme, then baseurl will be ignored\n  // No uri is allowed when METHOD is NONE\n  const resolvedUri = decrypturi ? M3U8Parser.resolve(decrypturi, baseurl) : '';\n  const keyFormatVersions = (\n    decryptkeyformatversions ? decryptkeyformatversions : '1'\n  )\n    .split('/')\n    .map(Number)\n    .filter(Number.isFinite);\n\n  return new LevelKey(\n    decryptmethod,\n    resolvedUri,\n    decryptkeyformat,\n    keyFormatVersions,\n    decryptiv\n  );\n}\n\nfunction setCodecs(codecs: Array<string>, level: LevelParsed) {\n  ['video', 'audio', 'text'].forEach((type: CodecType) => {\n    const filtered = codecs.filter((codec) => isCodecType(codec, type));\n    if (filtered.length) {\n      const preferred = filtered.filter((codec) => {\n        return (\n          codec.lastIndexOf('avc1', 0) === 0 ||\n          codec.lastIndexOf('mp4a', 0) === 0\n        );\n      });\n      level[`${type}Codec`] = preferred.length > 0 ? preferred[0] : filtered[0];\n\n      // remove from list\n      codecs = codecs.filter((codec) => filtered.indexOf(codec) === -1);\n    }\n  });\n\n  level.unknownCodecs = codecs;\n}\n\nfunction assignCodec(media, groupItem, codecProperty) {\n  const codecValue = groupItem[codecProperty];\n  if (codecValue) {\n    media[codecProperty] = codecValue;\n  }\n}\n\nfunction backfillProgramDateTimes(\n  fragments: M3U8ParserFragments,\n  firstPdtIndex: number\n) {\n  let fragPrev = fragments[firstPdtIndex] as Fragment;\n  for (let i = firstPdtIndex; i--; ) {\n    const frag = fragments[i];\n    // Exit on delta-playlist skipped segments\n    if (!frag) {\n      return;\n    }\n    frag.programDateTime =\n      (fragPrev.programDateTime as number) - frag.duration * 1000;\n    fragPrev = frag;\n  }\n}\n\nfunction assignProgramDateTime(frag, prevFrag) {\n  if (frag.rawProgramDateTime) {\n    frag.programDateTime = Date.parse(frag.rawProgramDateTime);\n  } else if (prevFrag?.programDateTime) {\n    frag.programDateTime = prevFrag.endProgramDateTime;\n  }\n\n  if (!Number.isFinite(frag.programDateTime)) {\n    frag.programDateTime = null;\n    frag.rawProgramDateTime = null;\n  }\n}\n\nfunction setInitSegment(\n  frag: Fragment,\n  mapAttrs: AttrList,\n  id: number,\n  levelkeys: { [key: string]: LevelKey } | undefined\n) {\n  frag.relurl = mapAttrs.URI;\n  if (mapAttrs.BYTERANGE) {\n    frag.setByteRange(mapAttrs.BYTERANGE);\n  }\n  frag.level = id;\n  frag.sn = 'initSegment';\n  if (levelkeys) {\n    frag.levelkeys = levelkeys;\n  }\n  frag.initSegment = null;\n}\n\nfunction setFragLevelKeys(\n  frag: Fragment,\n  levelkeys: { [key: string]: LevelKey },\n  level: LevelDetails\n) {\n  frag.levelkeys = levelkeys;\n  const { encryptedFragments } = level;\n  if (\n    (!encryptedFragments.length ||\n      encryptedFragments[encryptedFragments.length - 1].levelkeys !==\n        levelkeys) &&\n    Object.keys(levelkeys).some(\n      (format) => levelkeys![format].isCommonEncryption\n    )\n  ) {\n    encryptedFragments.push(frag);\n  }\n}\n","/**\n * PlaylistLoader - delegate for media manifest/playlist loading tasks. Takes care of parsing media to internal data-models.\n *\n * Once loaded, dispatches events with parsed data-models of manifest/levels/audio/subtitle tracks.\n *\n * Uses loader(s) set in config to do actual internal loading of resource tasks.\n *\n * @module\n *\n */\n\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { logger } from '../utils/logger';\nimport M3U8Parser from './m3u8-parser';\nimport type { LevelParsed } from '../types/level';\nimport type {\n  Loader,\n  LoaderConfiguration,\n  LoaderContext,\n  LoaderResponse,\n  LoaderStats,\n  PlaylistLoaderContext,\n} from '../types/loader';\nimport { PlaylistContextType, PlaylistLevelType } from '../types/loader';\nimport { LevelDetails } from './level-details';\nimport type Hls from '../hls';\nimport { AttrList } from '../utils/attr-list';\nimport type {\n  ErrorData,\n  LevelLoadingData,\n  ManifestLoadingData,\n  TrackLoadingData,\n} from '../types/events';\nimport { NetworkComponentAPI } from '../types/component-api';\n\nfunction mapContextToLevelType(\n  context: PlaylistLoaderContext\n): PlaylistLevelType {\n  const { type } = context;\n\n  switch (type) {\n    case PlaylistContextType.AUDIO_TRACK:\n      return PlaylistLevelType.AUDIO;\n    case PlaylistContextType.SUBTITLE_TRACK:\n      return PlaylistLevelType.SUBTITLE;\n    default:\n      return PlaylistLevelType.MAIN;\n  }\n}\n\nfunction getResponseUrl(\n  response: LoaderResponse,\n  context: PlaylistLoaderContext\n): string {\n  let url = response.url;\n  // responseURL not supported on some browsers (it is used to detect URL redirection)\n  // data-uri mode also not supported (but no need to detect redirection)\n  if (url === undefined || url.indexOf('data:') === 0) {\n    // fallback to initial URL\n    url = context.url;\n  }\n  return url;\n}\n\nclass PlaylistLoader implements NetworkComponentAPI {\n  private readonly hls: Hls;\n  private readonly loaders: {\n    [key: string]: Loader<LoaderContext>;\n  } = Object.create(null);\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.registerListeners();\n  }\n\n  public startLoad(startPosition: number): void {}\n\n  public stopLoad(): void {\n    this.destroyInternalLoaders();\n  }\n\n  private registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this);\n    hls.on(Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);\n  }\n\n  private unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.off(Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this);\n    hls.off(Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);\n  }\n\n  /**\n   * Returns defaults or configured loader-type overloads (pLoader and loader config params)\n   */\n  private createInternalLoader(\n    context: PlaylistLoaderContext\n  ): Loader<LoaderContext> {\n    const config = this.hls.config;\n    const PLoader = config.pLoader;\n    const Loader = config.loader;\n    const InternalLoader = PLoader || Loader;\n\n    const loader = new InternalLoader(config) as Loader<PlaylistLoaderContext>;\n\n    context.loader = loader;\n    this.loaders[context.type] = loader;\n\n    return loader;\n  }\n\n  private getInternalLoader(\n    context: PlaylistLoaderContext\n  ): Loader<LoaderContext> {\n    return this.loaders[context.type];\n  }\n\n  private resetInternalLoader(contextType): void {\n    if (this.loaders[contextType]) {\n      delete this.loaders[contextType];\n    }\n  }\n\n  /**\n   * Call `destroy` on all internal loader instances mapped (one per context type)\n   */\n  private destroyInternalLoaders(): void {\n    for (const contextType in this.loaders) {\n      const loader = this.loaders[contextType];\n      if (loader) {\n        loader.destroy();\n      }\n\n      this.resetInternalLoader(contextType);\n    }\n  }\n\n  public destroy(): void {\n    this.unregisterListeners();\n    this.destroyInternalLoaders();\n  }\n\n  private onManifestLoading(\n    event: Events.MANIFEST_LOADING,\n    data: ManifestLoadingData\n  ) {\n    const { url } = data;\n    this.load({\n      id: null,\n      groupId: null,\n      level: 0,\n      responseType: 'text',\n      type: PlaylistContextType.MANIFEST,\n      url,\n      deliveryDirectives: null,\n    });\n  }\n\n  private onLevelLoading(event: Events.LEVEL_LOADING, data: LevelLoadingData) {\n    const { id, level, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId: null,\n      level,\n      responseType: 'text',\n      type: PlaylistContextType.LEVEL,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private onAudioTrackLoading(\n    event: Events.AUDIO_TRACK_LOADING,\n    data: TrackLoadingData\n  ) {\n    const { id, groupId, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId,\n      level: null,\n      responseType: 'text',\n      type: PlaylistContextType.AUDIO_TRACK,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private onSubtitleTrackLoading(\n    event: Events.SUBTITLE_TRACK_LOADING,\n    data: TrackLoadingData\n  ) {\n    const { id, groupId, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId,\n      level: null,\n      responseType: 'text',\n      type: PlaylistContextType.SUBTITLE_TRACK,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private load(context: PlaylistLoaderContext): void {\n    const config = this.hls.config;\n\n    // logger.debug(`[playlist-loader]: Loading playlist of type ${context.type}, level: ${context.level}, id: ${context.id}`);\n\n    // Check if a loader for this context already exists\n    let loader = this.getInternalLoader(context);\n    if (loader) {\n      const loaderContext = loader.context;\n      if (loaderContext && loaderContext.url === context.url) {\n        // same URL can't overlap\n        logger.trace('[playlist-loader]: playlist request ongoing');\n        return;\n      }\n      logger.log(\n        `[playlist-loader]: aborting previous loader for type: ${context.type}`\n      );\n      loader.abort();\n    }\n\n    let maxRetry;\n    let timeout;\n    let retryDelay;\n    let maxRetryDelay;\n\n    // apply different configs for retries depending on\n    // context (manifest, level, audio/subs playlist)\n    switch (context.type) {\n      case PlaylistContextType.MANIFEST:\n        maxRetry = config.manifestLoadingMaxRetry;\n        timeout = config.manifestLoadingTimeOut;\n        retryDelay = config.manifestLoadingRetryDelay;\n        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;\n        break;\n      case PlaylistContextType.LEVEL:\n      case PlaylistContextType.AUDIO_TRACK:\n      case PlaylistContextType.SUBTITLE_TRACK:\n        // Manage retries in Level/Track Controller\n        maxRetry = 0;\n        timeout = config.levelLoadingTimeOut;\n        break;\n      default:\n        maxRetry = config.levelLoadingMaxRetry;\n        timeout = config.levelLoadingTimeOut;\n        retryDelay = config.levelLoadingRetryDelay;\n        maxRetryDelay = config.levelLoadingMaxRetryTimeout;\n        break;\n    }\n\n    loader = this.createInternalLoader(context);\n\n    // Override level/track timeout for LL-HLS requests\n    // (the default of 10000ms is counter productive to blocking playlist reload requests)\n    if (context.deliveryDirectives?.part) {\n      let levelDetails: LevelDetails | undefined;\n      if (\n        context.type === PlaylistContextType.LEVEL &&\n        context.level !== null\n      ) {\n        levelDetails = this.hls.levels[context.level].details;\n      } else if (\n        context.type === PlaylistContextType.AUDIO_TRACK &&\n        context.id !== null\n      ) {\n        levelDetails = this.hls.audioTracks[context.id].details;\n      } else if (\n        context.type === PlaylistContextType.SUBTITLE_TRACK &&\n        context.id !== null\n      ) {\n        levelDetails = this.hls.subtitleTracks[context.id].details;\n      }\n      if (levelDetails) {\n        const partTarget = levelDetails.partTarget;\n        const targetDuration = levelDetails.targetduration;\n        if (partTarget && targetDuration) {\n          timeout = Math.min(\n            Math.max(partTarget * 3, targetDuration * 0.8) * 1000,\n            timeout\n          );\n        }\n      }\n    }\n\n    const loaderConfig: LoaderConfiguration = {\n      timeout,\n      maxRetry,\n      retryDelay,\n      maxRetryDelay,\n      highWaterMark: 0,\n    };\n\n    const loaderCallbacks = {\n      onSuccess: this.loadsuccess.bind(this),\n      onError: this.loaderror.bind(this),\n      onTimeout: this.loadtimeout.bind(this),\n    };\n\n    // logger.debug(`[playlist-loader]: Calling internal loader delegate for URL: ${context.url}`);\n\n    loader.load(context, loaderConfig, loaderCallbacks);\n  }\n\n  private loadsuccess(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.resetInternalLoader(context.type);\n\n    const string = response.data as string;\n\n    // Validate if it is an M3U8 at all\n    if (string.indexOf('#EXTM3U') !== 0) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'no EXTM3U delimiter',\n        networkDetails\n      );\n      return;\n    }\n\n    stats.parsing.start = performance.now();\n    // Check if chunk-list or master. handle empty chunk list case (first EXTINF not signaled, but TARGETDURATION present)\n    if (\n      string.indexOf('#EXTINF:') > 0 ||\n      string.indexOf('#EXT-X-TARGETDURATION:') > 0\n    ) {\n      this.handleTrackOrLevelPlaylist(response, stats, context, networkDetails);\n    } else {\n      this.handleMasterPlaylist(response, stats, context, networkDetails);\n    }\n  }\n\n  private loaderror(\n    response: LoaderResponse,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.handleNetworkError(context, networkDetails, false, response);\n  }\n\n  private loadtimeout(\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.handleNetworkError(context, networkDetails, true);\n  }\n\n  private handleMasterPlaylist(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const hls = this.hls;\n    const string = response.data as string;\n\n    const url = getResponseUrl(response, context);\n\n    const { levels, sessionData, sessionKeys } = M3U8Parser.parseMasterPlaylist(\n      string,\n      url\n    );\n    if (!levels.length) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'no level found in manifest',\n        networkDetails\n      );\n      return;\n    }\n\n    // multi level playlist, parse level info\n    const audioGroups = levels.map((level: LevelParsed) => ({\n      id: level.attrs.AUDIO,\n      audioCodec: level.audioCodec,\n    }));\n\n    const subtitleGroups = levels.map((level: LevelParsed) => ({\n      id: level.attrs.SUBTITLES,\n      textCodec: level.textCodec,\n    }));\n\n    const audioTracks = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'AUDIO',\n      audioGroups\n    );\n    const subtitles = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'SUBTITLES',\n      subtitleGroups\n    );\n    const captions = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'CLOSED-CAPTIONS'\n    );\n\n    if (audioTracks.length) {\n      // check if we have found an audio track embedded in main playlist (audio track without URI attribute)\n      const embeddedAudioFound: boolean = audioTracks.some(\n        (audioTrack) => !audioTrack.url\n      );\n\n      // if no embedded audio track defined, but audio codec signaled in quality level,\n      // we need to signal this main audio track this could happen with playlists with\n      // alt audio rendition in which quality levels (main)\n      // contains both audio+video. but with mixed audio track not signaled\n      if (\n        !embeddedAudioFound &&\n        levels[0].audioCodec &&\n        !levels[0].attrs.AUDIO\n      ) {\n        logger.log(\n          '[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one'\n        );\n        audioTracks.unshift({\n          type: 'main',\n          name: 'main',\n          default: false,\n          autoselect: false,\n          forced: false,\n          id: -1,\n          attrs: new AttrList({}),\n          bitrate: 0,\n          url: '',\n        });\n      }\n    }\n\n    hls.trigger(Events.MANIFEST_LOADED, {\n      levels,\n      audioTracks,\n      subtitles,\n      captions,\n      url,\n      stats,\n      networkDetails,\n      sessionData,\n      sessionKeys,\n    });\n  }\n\n  private handleTrackOrLevelPlaylist(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const hls = this.hls;\n    const { id, level, type } = context;\n\n    const url = getResponseUrl(response, context);\n    const levelUrlId = Number.isFinite(id as number) ? id : 0;\n    const levelId = Number.isFinite(level as number) ? level : levelUrlId;\n    const levelType = mapContextToLevelType(context);\n    const levelDetails: LevelDetails = M3U8Parser.parseLevelPlaylist(\n      response.data as string,\n      url,\n      levelId!,\n      levelType,\n      levelUrlId!\n    );\n\n    if (!levelDetails.fragments.length) {\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.NETWORK_ERROR,\n        details: ErrorDetails.LEVEL_EMPTY_ERROR,\n        fatal: false,\n        url: url,\n        reason: 'no fragments found in level',\n        level: typeof context.level === 'number' ? context.level : undefined,\n      });\n      return;\n    }\n\n    // We have done our first request (Manifest-type) and receive\n    // not a master playlist but a chunk-list (track/level)\n    // We fire the manifest-loaded event anyway with the parsed level-details\n    // by creating a single-level structure for it.\n    if (type === PlaylistContextType.MANIFEST) {\n      const singleLevel: LevelParsed = {\n        attrs: new AttrList({}),\n        bitrate: 0,\n        details: levelDetails,\n        name: '',\n        url,\n      };\n\n      hls.trigger(Events.MANIFEST_LOADED, {\n        levels: [singleLevel],\n        audioTracks: [],\n        url,\n        stats,\n        networkDetails,\n        sessionData: null,\n        sessionKeys: null,\n      });\n    }\n\n    // save parsing time\n    stats.parsing.end = performance.now();\n\n    // extend the context with the new levelDetails property\n    context.levelDetails = levelDetails;\n\n    this.handlePlaylistLoaded(response, stats, context, networkDetails);\n  }\n\n  private handleManifestParsingError(\n    response: LoaderResponse,\n    context: PlaylistLoaderContext,\n    reason: string,\n    networkDetails: any\n  ): void {\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.NETWORK_ERROR,\n      details: ErrorDetails.MANIFEST_PARSING_ERROR,\n      fatal: context.type === PlaylistContextType.MANIFEST,\n      url: response.url,\n      reason,\n      response,\n      context,\n      networkDetails,\n    });\n  }\n\n  private handleNetworkError(\n    context: PlaylistLoaderContext,\n    networkDetails: any,\n    timeout = false,\n    response?: LoaderResponse\n  ): void {\n    logger.warn(\n      `[playlist-loader]: A network ${\n        timeout ? 'timeout' : 'error'\n      } occurred while loading ${context.type} level: ${context.level} id: ${\n        context.id\n      } group-id: \"${context.groupId}\"`\n    );\n    let details = ErrorDetails.UNKNOWN;\n    let fatal = false;\n\n    const loader = this.getInternalLoader(context);\n\n    switch (context.type) {\n      case PlaylistContextType.MANIFEST:\n        details = timeout\n          ? ErrorDetails.MANIFEST_LOAD_TIMEOUT\n          : ErrorDetails.MANIFEST_LOAD_ERROR;\n        fatal = true;\n        break;\n      case PlaylistContextType.LEVEL:\n        details = timeout\n          ? ErrorDetails.LEVEL_LOAD_TIMEOUT\n          : ErrorDetails.LEVEL_LOAD_ERROR;\n        fatal = false;\n        break;\n      case PlaylistContextType.AUDIO_TRACK:\n        details = timeout\n          ? ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT\n          : ErrorDetails.AUDIO_TRACK_LOAD_ERROR;\n        fatal = false;\n        break;\n      case PlaylistContextType.SUBTITLE_TRACK:\n        details = timeout\n          ? ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT\n          : ErrorDetails.SUBTITLE_LOAD_ERROR;\n        fatal = false;\n        break;\n    }\n\n    if (loader) {\n      this.resetInternalLoader(context.type);\n    }\n\n    const errorData: ErrorData = {\n      type: ErrorTypes.NETWORK_ERROR,\n      details,\n      fatal,\n      url: context.url,\n      loader,\n      context,\n      networkDetails,\n    };\n\n    if (response) {\n      errorData.response = response;\n    }\n\n    this.hls.trigger(Events.ERROR, errorData);\n  }\n\n  private handlePlaylistLoaded(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const {\n      type,\n      level,\n      id,\n      groupId,\n      loader,\n      levelDetails,\n      deliveryDirectives,\n    } = context;\n\n    if (!levelDetails?.targetduration) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'invalid target duration',\n        networkDetails\n      );\n      return;\n    }\n    if (!loader) {\n      return;\n    }\n\n    if (levelDetails.live) {\n      if (loader.getCacheAge) {\n        levelDetails.ageHeader = loader.getCacheAge() || 0;\n      }\n      if (!loader.getCacheAge || isNaN(levelDetails.ageHeader)) {\n        levelDetails.ageHeader = 0;\n      }\n    }\n\n    switch (type) {\n      case PlaylistContextType.MANIFEST:\n      case PlaylistContextType.LEVEL:\n        this.hls.trigger(Events.LEVEL_LOADED, {\n          details: levelDetails,\n          level: level || 0,\n          id: id || 0,\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n      case PlaylistContextType.AUDIO_TRACK:\n        this.hls.trigger(Events.AUDIO_TRACK_LOADED, {\n          details: levelDetails,\n          id: id || 0,\n          groupId: groupId || '',\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n      case PlaylistContextType.SUBTITLE_TRACK:\n        this.hls.trigger(Events.SUBTITLE_TRACK_LOADED, {\n          details: levelDetails,\n          id: id || 0,\n          groupId: groupId || '',\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n    }\n  }\n}\n\nexport default PlaylistLoader;\n","export const isFiniteNumber =\n  Number.isFinite ||\n  function (value) {\n    return typeof value === 'number' && isFinite(value);\n  };\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n","/**\n *  AAC helper\n */\n\nclass AAC {\n  static getSilentFrame(\n    codec?: string,\n    channelCount?: number\n  ): Uint8Array | undefined {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80,\n          ]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e,\n          ]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38,\n          ]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38,\n          ]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0,\n          ]);\n        }\n\n        break;\n      // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)\n      default:\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        }\n        break;\n    }\n    return undefined;\n  }\n}\n\nexport default AAC;\n","/**\n * Generate MP4 Box\n */\n\ntype HdlrTypes = {\n  video: Uint8Array;\n  audio: Uint8Array;\n};\n\nconst UINT32_MAX = Math.pow(2, 32) - 1;\n\nclass MP4 {\n  public static types: Record<string, number[]>;\n  private static HDLR_TYPES: HdlrTypes;\n  private static STTS: Uint8Array;\n  private static STSC: Uint8Array;\n  private static STCO: Uint8Array;\n  private static STSZ: Uint8Array;\n  private static VMHD: Uint8Array;\n  private static SMHD: Uint8Array;\n  private static STSD: Uint8Array;\n  private static FTYP: Uint8Array;\n  private static DINF: Uint8Array;\n\n  static init() {\n    MP4.types = {\n      avc1: [], // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      '.mp3': [],\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: [],\n      smhd: [],\n    };\n\n    let i: string;\n    for (i in MP4.types) {\n      if (MP4.types.hasOwnProperty(i)) {\n        MP4.types[i] = [\n          i.charCodeAt(0),\n          i.charCodeAt(1),\n          i.charCodeAt(2),\n          i.charCodeAt(3),\n        ];\n      }\n    }\n\n    const videoHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0x76,\n      0x69,\n      0x64,\n      0x65, // handler_type: 'vide'\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x56,\n      0x69,\n      0x64,\n      0x65,\n      0x6f,\n      0x48,\n      0x61,\n      0x6e,\n      0x64,\n      0x6c,\n      0x65,\n      0x72,\n      0x00, // name: 'VideoHandler'\n    ]);\n\n    const audioHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0x73,\n      0x6f,\n      0x75,\n      0x6e, // handler_type: 'soun'\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x53,\n      0x6f,\n      0x75,\n      0x6e,\n      0x64,\n      0x48,\n      0x61,\n      0x6e,\n      0x64,\n      0x6c,\n      0x65,\n      0x72,\n      0x00, // name: 'SoundHandler'\n    ]);\n\n    MP4.HDLR_TYPES = {\n      video: videoHdlr,\n      audio: audioHdlr,\n    };\n\n    const dref = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01, // entry_count\n      0x00,\n      0x00,\n      0x00,\n      0x0c, // entry_size\n      0x75,\n      0x72,\n      0x6c,\n      0x20, // 'url' type\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x01, // entry_flags\n    ]);\n\n    const stco = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // entry_count\n    ]);\n\n    MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n    MP4.STSZ = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // sample_size\n      0x00,\n      0x00,\n      0x00,\n      0x00, // sample_count\n    ]);\n    MP4.VMHD = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x01, // flags\n      0x00,\n      0x00, // graphicsmode\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // opcolor\n    ]);\n    MP4.SMHD = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00, // balance\n      0x00,\n      0x00, // reserved\n    ]);\n\n    MP4.STSD = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01,\n    ]); // entry_count\n\n    const majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n    const avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n    const minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n    MP4.FTYP = MP4.box(\n      MP4.types.ftyp,\n      majorBrand,\n      minorVersion,\n      majorBrand,\n      avc1Brand\n    );\n    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n  }\n\n  static box(type, ...payload: Uint8Array[]) {\n    let size = 8;\n    let i = payload.length;\n    const len = i;\n    // calculate the total size we need to allocate\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    const result = new Uint8Array(size);\n    result[0] = (size >> 24) & 0xff;\n    result[1] = (size >> 16) & 0xff;\n    result[2] = (size >> 8) & 0xff;\n    result[3] = size & 0xff;\n    result.set(type, 4);\n    // copy the payload into the result\n    for (i = 0, size = 8; i < len; i++) {\n      // copy payload[i] array @ offset size\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  }\n\n  static hdlr(type) {\n    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n  }\n\n  static mdat(data) {\n    return MP4.box(MP4.types.mdat, data);\n  }\n\n  static mdhd(timescale, duration) {\n    duration *= timescale;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    return MP4.box(\n      MP4.types.mdhd,\n      new Uint8Array([\n        0x01, // version 1\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x02, // creation_time\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x03, // modification_time\n        (timescale >> 24) & 0xff,\n        (timescale >> 16) & 0xff,\n        (timescale >> 8) & 0xff,\n        timescale & 0xff, // timescale\n        upperWordDuration >> 24,\n        (upperWordDuration >> 16) & 0xff,\n        (upperWordDuration >> 8) & 0xff,\n        upperWordDuration & 0xff,\n        lowerWordDuration >> 24,\n        (lowerWordDuration >> 16) & 0xff,\n        (lowerWordDuration >> 8) & 0xff,\n        lowerWordDuration & 0xff,\n        0x55,\n        0xc4, // 'und' language (undetermined)\n        0x00,\n        0x00,\n      ])\n    );\n  }\n\n  static mdia(track) {\n    return MP4.box(\n      MP4.types.mdia,\n      MP4.mdhd(track.timescale, track.duration),\n      MP4.hdlr(track.type),\n      MP4.minf(track)\n    );\n  }\n\n  static mfhd(sequenceNumber) {\n    return MP4.box(\n      MP4.types.mfhd,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00,\n        0x00, // flags\n        sequenceNumber >> 24,\n        (sequenceNumber >> 16) & 0xff,\n        (sequenceNumber >> 8) & 0xff,\n        sequenceNumber & 0xff, // sequence_number\n      ])\n    );\n  }\n\n  static minf(track) {\n    if (track.type === 'audio') {\n      return MP4.box(\n        MP4.types.minf,\n        MP4.box(MP4.types.smhd, MP4.SMHD),\n        MP4.DINF,\n        MP4.stbl(track)\n      );\n    } else {\n      return MP4.box(\n        MP4.types.minf,\n        MP4.box(MP4.types.vmhd, MP4.VMHD),\n        MP4.DINF,\n        MP4.stbl(track)\n      );\n    }\n  }\n\n  static moof(sn, baseMediaDecodeTime, track) {\n    return MP4.box(\n      MP4.types.moof,\n      MP4.mfhd(sn),\n      MP4.traf(track, baseMediaDecodeTime)\n    );\n  }\n\n  /**\n   * @param tracks... (optional) {array} the tracks associated with this movie\n   */\n  static moov(tracks) {\n    let i = tracks.length;\n    const boxes: Uint8Array[] = [];\n\n    while (i--) {\n      boxes[i] = MP4.trak(tracks[i]);\n    }\n\n    return MP4.box.apply(\n      null,\n      [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)]\n        .concat(boxes)\n        .concat(MP4.mvex(tracks))\n    );\n  }\n\n  static mvex(tracks) {\n    let i = tracks.length;\n    const boxes: Uint8Array[] = [];\n\n    while (i--) {\n      boxes[i] = MP4.trex(tracks[i]);\n    }\n\n    return MP4.box.apply(null, [MP4.types.mvex, ...boxes]);\n  }\n\n  static mvhd(timescale, duration) {\n    duration *= timescale;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    const bytes = new Uint8Array([\n      0x01, // version 1\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x02, // creation_time\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x03, // modification_time\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      upperWordDuration >> 24,\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      lowerWordDuration >> 24,\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00,\n      0x01,\n      0x00,\n      0x00, // 1.0 rate\n      0x01,\n      0x00, // 1.0 volume\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x01,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x40,\n      0x00,\n      0x00,\n      0x00, // transformation: unity matrix\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0xff,\n      0xff,\n      0xff,\n      0xff, // next_track_ID\n    ]);\n    return MP4.box(MP4.types.mvhd, bytes);\n  }\n\n  static sdtp(track) {\n    const samples = track.samples || [];\n    const bytes = new Uint8Array(4 + samples.length);\n    let i;\n    let flags;\n    // leave the full box header (4 bytes) all zero\n    // write the sample table\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] =\n        (flags.dependsOn << 4) |\n        (flags.isDependedOn << 2) |\n        flags.hasRedundancy;\n    }\n\n    return MP4.box(MP4.types.sdtp, bytes);\n  }\n\n  static stbl(track) {\n    return MP4.box(\n      MP4.types.stbl,\n      MP4.stsd(track),\n      MP4.box(MP4.types.stts, MP4.STTS),\n      MP4.box(MP4.types.stsc, MP4.STSC),\n      MP4.box(MP4.types.stsz, MP4.STSZ),\n      MP4.box(MP4.types.stco, MP4.STCO)\n    );\n  }\n\n  static avc1(track) {\n    let sps: number[] = [];\n    let pps: number[] = [];\n    let i;\n    let data;\n    let len;\n    // assemble the SPSs\n\n    for (i = 0; i < track.sps.length; i++) {\n      data = track.sps[i];\n      len = data.byteLength;\n      sps.push((len >>> 8) & 0xff);\n      sps.push(len & 0xff);\n\n      // SPS\n      sps = sps.concat(Array.prototype.slice.call(data));\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < track.pps.length; i++) {\n      data = track.pps[i];\n      len = data.byteLength;\n      pps.push((len >>> 8) & 0xff);\n      pps.push(len & 0xff);\n\n      pps = pps.concat(Array.prototype.slice.call(data));\n    }\n\n    const avcc = MP4.box(\n      MP4.types.avcC,\n      new Uint8Array(\n        [\n          0x01, // version\n          sps[3], // profile\n          sps[4], // profile compat\n          sps[5], // level\n          0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n          0xe0 | track.sps.length, // 3bit reserved (111) + numOfSequenceParameterSets\n        ]\n          .concat(sps)\n          .concat([\n            track.pps.length, // numOfPictureParameterSets\n          ])\n          .concat(pps)\n      )\n    ); // \"PPS\"\n    const width = track.width;\n    const height = track.height;\n    const hSpacing = track.pixelRatio[0];\n    const vSpacing = track.pixelRatio[1];\n\n    return MP4.box(\n      MP4.types.avc1,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00, // pre_defined\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        (width >> 8) & 0xff,\n        width & 0xff, // width\n        (height >> 8) & 0xff,\n        height & 0xff, // height\n        0x00,\n        0x48,\n        0x00,\n        0x00, // horizresolution\n        0x00,\n        0x48,\n        0x00,\n        0x00, // vertresolution\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // frame_count\n        0x12,\n        0x64,\n        0x61,\n        0x69,\n        0x6c, // dailymotion/hls.js\n        0x79,\n        0x6d,\n        0x6f,\n        0x74,\n        0x69,\n        0x6f,\n        0x6e,\n        0x2f,\n        0x68,\n        0x6c,\n        0x73,\n        0x2e,\n        0x6a,\n        0x73,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // compressorname\n        0x00,\n        0x18, // depth = 24\n        0x11,\n        0x11,\n      ]), // pre_defined = -1\n      avcc,\n      MP4.box(\n        MP4.types.btrt,\n        new Uint8Array([\n          0x00,\n          0x1c,\n          0x9c,\n          0x80, // bufferSizeDB\n          0x00,\n          0x2d,\n          0xc6,\n          0xc0, // maxBitrate\n          0x00,\n          0x2d,\n          0xc6,\n          0xc0,\n        ])\n      ), // avgBitrate\n      MP4.box(\n        MP4.types.pasp,\n        new Uint8Array([\n          hSpacing >> 24, // hSpacing\n          (hSpacing >> 16) & 0xff,\n          (hSpacing >> 8) & 0xff,\n          hSpacing & 0xff,\n          vSpacing >> 24, // vSpacing\n          (vSpacing >> 16) & 0xff,\n          (vSpacing >> 8) & 0xff,\n          vSpacing & 0xff,\n        ])\n      )\n    );\n  }\n\n  static esds(track) {\n    const configlen = track.config.length;\n    return new Uint8Array(\n      [\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n\n        0x03, // descriptor_type\n        0x17 + configlen, // length\n        0x00,\n        0x01, // es_id\n        0x00, // stream_priority\n\n        0x04, // descriptor_type\n        0x0f + configlen, // length\n        0x40, // codec : mpeg4_audio\n        0x15, // stream_type\n        0x00,\n        0x00,\n        0x00, // buffer_size\n        0x00,\n        0x00,\n        0x00,\n        0x00, // maxBitrate\n        0x00,\n        0x00,\n        0x00,\n        0x00, // avgBitrate\n\n        0x05, // descriptor_type\n      ]\n        .concat([configlen])\n        .concat(track.config)\n        .concat([0x06, 0x01, 0x02])\n    ); // GASpecificConfig)); // length + audio config descriptor\n  }\n\n  static mp4a(track) {\n    const samplerate = track.samplerate;\n    return MP4.box(\n      MP4.types.mp4a,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        track.channelCount, // channelcount\n        0x00,\n        0x10, // sampleSize:16bits\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved2\n        (samplerate >> 8) & 0xff,\n        samplerate & 0xff, //\n        0x00,\n        0x00,\n      ]),\n      MP4.box(MP4.types.esds, MP4.esds(track))\n    );\n  }\n\n  static mp3(track) {\n    const samplerate = track.samplerate;\n    return MP4.box(\n      MP4.types['.mp3'],\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        track.channelCount, // channelcount\n        0x00,\n        0x10, // sampleSize:16bits\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved2\n        (samplerate >> 8) & 0xff,\n        samplerate & 0xff, //\n        0x00,\n        0x00,\n      ])\n    );\n  }\n\n  static stsd(track) {\n    if (track.type === 'audio') {\n      if (track.segmentCodec === 'mp3' && track.codec === 'mp3') {\n        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));\n      }\n\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n    } else {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n    }\n  }\n\n  static tkhd(track) {\n    const id = track.id;\n    const duration = track.duration * track.timescale;\n    const width = track.width;\n    const height = track.height;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    return MP4.box(\n      MP4.types.tkhd,\n      new Uint8Array([\n        0x01, // version 1\n        0x00,\n        0x00,\n        0x07, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x02, // creation_time\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x03, // modification_time\n        (id >> 24) & 0xff,\n        (id >> 16) & 0xff,\n        (id >> 8) & 0xff,\n        id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        upperWordDuration >> 24,\n        (upperWordDuration >> 16) & 0xff,\n        (upperWordDuration >> 8) & 0xff,\n        upperWordDuration & 0xff,\n        lowerWordDuration >> 24,\n        (lowerWordDuration >> 16) & 0xff,\n        (lowerWordDuration >> 8) & 0xff,\n        lowerWordDuration & 0xff,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00, // layer\n        0x00,\n        0x00, // alternate_group\n        0x00,\n        0x00, // non-audio track volume\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        (width >> 8) & 0xff,\n        width & 0xff,\n        0x00,\n        0x00, // width\n        (height >> 8) & 0xff,\n        height & 0xff,\n        0x00,\n        0x00, // height\n      ])\n    );\n  }\n\n  static traf(track, baseMediaDecodeTime) {\n    const sampleDependencyTable = MP4.sdtp(track);\n    const id = track.id;\n    const upperWordBaseMediaDecodeTime = Math.floor(\n      baseMediaDecodeTime / (UINT32_MAX + 1)\n    );\n    const lowerWordBaseMediaDecodeTime = Math.floor(\n      baseMediaDecodeTime % (UINT32_MAX + 1)\n    );\n    return MP4.box(\n      MP4.types.traf,\n      MP4.box(\n        MP4.types.tfhd,\n        new Uint8Array([\n          0x00, // version 0\n          0x00,\n          0x00,\n          0x00, // flags\n          id >> 24,\n          (id >> 16) & 0xff,\n          (id >> 8) & 0xff,\n          id & 0xff, // track_ID\n        ])\n      ),\n      MP4.box(\n        MP4.types.tfdt,\n        new Uint8Array([\n          0x01, // version 1\n          0x00,\n          0x00,\n          0x00, // flags\n          upperWordBaseMediaDecodeTime >> 24,\n          (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n          (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n          upperWordBaseMediaDecodeTime & 0xff,\n          lowerWordBaseMediaDecodeTime >> 24,\n          (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n          (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n          lowerWordBaseMediaDecodeTime & 0xff,\n        ])\n      ),\n      MP4.trun(\n        track,\n        sampleDependencyTable.length +\n          16 + // tfhd\n          20 + // tfdt\n          8 + // traf header\n          16 + // mfhd\n          8 + // moof header\n          8\n      ), // mdat header\n      sampleDependencyTable\n    );\n  }\n\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n  static trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n  }\n\n  static trex(track) {\n    const id = track.id;\n    return MP4.box(\n      MP4.types.trex,\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        id >> 24,\n        (id >> 16) & 0xff,\n        (id >> 8) & 0xff,\n        id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x01, // default_sample_description_index\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_duration\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_size\n        0x00,\n        0x01,\n        0x00,\n        0x01, // default_sample_flags\n      ])\n    );\n  }\n\n  static trun(track, offset) {\n    const samples = track.samples || [];\n    const len = samples.length;\n    const arraylen = 12 + 16 * len;\n    const array = new Uint8Array(arraylen);\n    let i;\n    let sample;\n    let duration;\n    let size;\n    let flags;\n    let cts;\n    offset += 8 + arraylen;\n    array.set(\n      [\n        track.type === 'video' ? 0x01 : 0x00, // version 1 for video with signed-int sample_composition_time_offset\n        0x00,\n        0x0f,\n        0x01, // flags\n        (len >>> 24) & 0xff,\n        (len >>> 16) & 0xff,\n        (len >>> 8) & 0xff,\n        len & 0xff, // sample_count\n        (offset >>> 24) & 0xff,\n        (offset >>> 16) & 0xff,\n        (offset >>> 8) & 0xff,\n        offset & 0xff, // data_offset\n      ],\n      0\n    );\n    for (i = 0; i < len; i++) {\n      sample = samples[i];\n      duration = sample.duration;\n      size = sample.size;\n      flags = sample.flags;\n      cts = sample.cts;\n      array.set(\n        [\n          (duration >>> 24) & 0xff,\n          (duration >>> 16) & 0xff,\n          (duration >>> 8) & 0xff,\n          duration & 0xff, // sample_duration\n          (size >>> 24) & 0xff,\n          (size >>> 16) & 0xff,\n          (size >>> 8) & 0xff,\n          size & 0xff, // sample_size\n          (flags.isLeading << 2) | flags.dependsOn,\n          (flags.isDependedOn << 6) |\n            (flags.hasRedundancy << 4) |\n            (flags.paddingValue << 1) |\n            flags.isNonSync,\n          flags.degradPrio & (0xf0 << 8),\n          flags.degradPrio & 0x0f, // sample_flags\n          (cts >>> 24) & 0xff,\n          (cts >>> 16) & 0xff,\n          (cts >>> 8) & 0xff,\n          cts & 0xff, // sample_composition_time_offset\n        ],\n        12 + 16 * i\n      );\n    }\n    return MP4.box(MP4.types.trun, array);\n  }\n\n  static initSegment(tracks) {\n    if (!MP4.types) {\n      MP4.init();\n    }\n\n    const movie = MP4.moov(tracks);\n    const result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n    result.set(MP4.FTYP);\n    result.set(movie, MP4.FTYP.byteLength);\n    return result;\n  }\n}\n\nexport default MP4;\n","import AAC from './aac-helper';\nimport MP4 from './mp4-generator';\nimport type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { logger } from '../utils/logger';\nimport {\n  InitSegmentData,\n  Remuxer,\n  RemuxerResult,\n  RemuxedMetadata,\n  RemuxedTrack,\n  RemuxedUserdata,\n} from '../types/remuxer';\nimport { PlaylistLevelType } from '../types/loader';\nimport { toMsFromMpegTsClock } from '../utils/timescale-conversion';\nimport type {\n  AudioSample,\n  AvcSample,\n  DemuxedAudioTrack,\n  DemuxedAvcTrack,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n} from '../types/demuxer';\nimport type { TrackSet } from '../types/track';\nimport type { SourceBufferName } from '../types/buffer';\nimport type { Fragment } from '../loader/fragment';\nimport type { HlsConfig } from '../config';\n\nconst MAX_SILENT_FRAME_DURATION = 10 * 1000; // 10 seconds\nconst AAC_SAMPLES_PER_FRAME = 1024;\nconst MPEG_AUDIO_SAMPLE_PER_FRAME = 1152;\n\nlet chromeVersion: number | null = null;\nlet safariWebkitVersion: number | null = null;\n\nexport default class MP4Remuxer implements Remuxer {\n  private observer: HlsEventEmitter;\n  private config: HlsConfig;\n  private typeSupported: any;\n  private ISGenerated: boolean = false;\n  private _initPTS!: number;\n  private _initDTS!: number;\n  private nextAvcDts: number | null = null;\n  private nextAudioPts: number | null = null;\n  private videoSampleDuration: number | null = null;\n  private isAudioContiguous: boolean = false;\n  private isVideoContiguous: boolean = false;\n\n  constructor(\n    observer: HlsEventEmitter,\n    config: HlsConfig,\n    typeSupported,\n    vendor = ''\n  ) {\n    this.observer = observer;\n    this.config = config;\n    this.typeSupported = typeSupported;\n    this.ISGenerated = false;\n\n    if (chromeVersion === null) {\n      const userAgent = navigator.userAgent || '';\n      const result = userAgent.match(/Chrome\\/(\\d+)/i);\n      chromeVersion = result ? parseInt(result[1]) : 0;\n    }\n    if (safariWebkitVersion === null) {\n      const result = navigator.userAgent.match(/Safari\\/(\\d+)/i);\n      safariWebkitVersion = result ? parseInt(result[1]) : 0;\n    }\n  }\n\n  destroy() {}\n\n  resetTimeStamp(defaultTimeStamp) {\n    logger.log('[mp4-remuxer]: initPTS & initDTS reset');\n    this._initPTS = this._initDTS = defaultTimeStamp;\n  }\n\n  resetNextTimestamp() {\n    logger.log('[mp4-remuxer]: reset next timestamp');\n    this.isVideoContiguous = false;\n    this.isAudioContiguous = false;\n  }\n\n  resetInitSegment() {\n    logger.log('[mp4-remuxer]: ISGenerated flag reset');\n    this.ISGenerated = false;\n  }\n\n  getVideoStartPts(videoSamples) {\n    let rolloverDetected = false;\n    const startPTS = videoSamples.reduce((minPTS, sample) => {\n      const delta = sample.pts - minPTS;\n      if (delta < -4294967296) {\n        // 2^32, see PTSNormalize for reasoning, but we're hitting a rollover here, and we don't want that to impact the timeOffset calculation\n        rolloverDetected = true;\n        return normalizePts(minPTS, sample.pts);\n      } else if (delta > 0) {\n        return minPTS;\n      } else {\n        return sample.pts;\n      }\n    }, videoSamples[0].pts);\n    if (rolloverDetected) {\n      logger.debug('PTS rollover detected');\n    }\n    return startPTS;\n  }\n\n  remux(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: DemuxedAvcTrack,\n    id3Track: DemuxedMetadataTrack,\n    textTrack: DemuxedUserdataTrack,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    flush: boolean,\n    playlistType: PlaylistLevelType\n  ): RemuxerResult {\n    let video: RemuxedTrack | undefined;\n    let audio: RemuxedTrack | undefined;\n    let initSegment: InitSegmentData | undefined;\n    let text: RemuxedUserdata | undefined;\n    let id3: RemuxedMetadata | undefined;\n    let independent: boolean | undefined;\n    let audioTimeOffset = timeOffset;\n    let videoTimeOffset = timeOffset;\n\n    // If we're remuxing audio and video progressively, wait until we've received enough samples for each track before proceeding.\n    // This is done to synchronize the audio and video streams. We know if the current segment will have samples if the \"pid\"\n    // parameter is greater than -1. The pid is set when the PMT is parsed, which contains the tracks list.\n    // However, if the initSegment has already been generated, or we've reached the end of a segment (flush),\n    // then we can remux one track without waiting for the other.\n    const hasAudio = audioTrack.pid > -1;\n    const hasVideo = videoTrack.pid > -1;\n    const length = videoTrack.samples.length;\n    const enoughAudioSamples = audioTrack.samples.length > 0;\n    const enoughVideoSamples = (flush && length > 0) || length > 1;\n    const canRemuxAvc =\n      ((!hasAudio || enoughAudioSamples) &&\n        (!hasVideo || enoughVideoSamples)) ||\n      this.ISGenerated ||\n      flush;\n\n    if (canRemuxAvc) {\n      if (!this.ISGenerated) {\n        initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n      }\n\n      const isVideoContiguous = this.isVideoContiguous;\n      let firstKeyFrameIndex = -1;\n      let firstKeyFramePTS;\n\n      if (enoughVideoSamples) {\n        firstKeyFrameIndex = findKeyframeIndex(videoTrack.samples);\n        if (!isVideoContiguous && this.config.forceKeyFrameOnDiscontinuity) {\n          independent = true;\n          if (firstKeyFrameIndex > 0) {\n            logger.warn(\n              `[mp4-remuxer]: Dropped ${firstKeyFrameIndex} out of ${length} video samples due to a missing keyframe`\n            );\n            const startPTS = this.getVideoStartPts(videoTrack.samples);\n            videoTrack.samples = videoTrack.samples.slice(firstKeyFrameIndex);\n            videoTrack.dropped += firstKeyFrameIndex;\n            videoTimeOffset +=\n              (videoTrack.samples[0].pts - startPTS) /\n              videoTrack.inputTimeScale;\n            firstKeyFramePTS = videoTimeOffset;\n          } else if (firstKeyFrameIndex === -1) {\n            logger.warn(\n              `[mp4-remuxer]: No keyframe found out of ${length} video samples`\n            );\n            independent = false;\n          }\n        }\n      }\n\n      if (this.ISGenerated) {\n        if (enoughAudioSamples && enoughVideoSamples) {\n          // timeOffset is expected to be the offset of the first timestamp of this fragment (first DTS)\n          // if first audio DTS is not aligned with first video DTS then we need to take that into account\n          // when providing timeOffset to remuxAudio / remuxVideo. if we don't do that, there might be a permanent / small\n          // drift between audio and video streams\n          const startPTS = this.getVideoStartPts(videoTrack.samples);\n          const tsDelta =\n            normalizePts(audioTrack.samples[0].pts, startPTS) - startPTS;\n          const audiovideoTimestampDelta = tsDelta / videoTrack.inputTimeScale;\n          audioTimeOffset += Math.max(0, audiovideoTimestampDelta);\n          videoTimeOffset += Math.max(0, -audiovideoTimestampDelta);\n        }\n\n        // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is calculated in remuxAudio.\n        if (enoughAudioSamples) {\n          // if initSegment was generated without audio samples, regenerate it again\n          if (!audioTrack.samplerate) {\n            logger.warn(\n              '[mp4-remuxer]: regenerate InitSegment as audio detected'\n            );\n            initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n          }\n          audio = this.remuxAudio(\n            audioTrack,\n            audioTimeOffset,\n            this.isAudioContiguous,\n            accurateTimeOffset,\n            hasVideo ||\n              enoughVideoSamples ||\n              playlistType === PlaylistLevelType.AUDIO\n              ? videoTimeOffset\n              : undefined\n          );\n          if (enoughVideoSamples) {\n            const audioTrackLength = audio ? audio.endPTS - audio.startPTS : 0;\n            // if initSegment was generated without video samples, regenerate it again\n            if (!videoTrack.inputTimeScale) {\n              logger.warn(\n                '[mp4-remuxer]: regenerate InitSegment as video detected'\n              );\n              initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n            }\n            video = this.remuxVideo(\n              videoTrack,\n              videoTimeOffset,\n              isVideoContiguous,\n              audioTrackLength\n            );\n          }\n        } else if (enoughVideoSamples) {\n          video = this.remuxVideo(\n            videoTrack,\n            videoTimeOffset,\n            isVideoContiguous,\n            0\n          );\n        }\n        if (video) {\n          video.firstKeyFrame = firstKeyFrameIndex;\n          video.independent = firstKeyFrameIndex !== -1;\n          video.firstKeyFramePTS = firstKeyFramePTS;\n        }\n      }\n    }\n\n    // Allow ID3 and text to remux, even if more audio/video samples are required\n    if (this.ISGenerated) {\n      if (id3Track.samples.length) {\n        id3 = flushTextTrackMetadataCueSamples(\n          id3Track,\n          timeOffset,\n          this._initPTS,\n          this._initDTS\n        );\n      }\n\n      if (textTrack.samples.length) {\n        text = flushTextTrackUserdataCueSamples(\n          textTrack,\n          timeOffset,\n          this._initPTS\n        );\n      }\n    }\n\n    return {\n      audio,\n      video,\n      initSegment,\n      independent,\n      text,\n      id3,\n    };\n  }\n\n  generateIS(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: DemuxedAvcTrack,\n    timeOffset\n  ): InitSegmentData | undefined {\n    const audioSamples = audioTrack.samples;\n    const videoSamples = videoTrack.samples;\n    const typeSupported = this.typeSupported;\n    const tracks: TrackSet = {};\n    const computePTSDTS = !Number.isFinite(this._initPTS);\n    let container = 'audio/mp4';\n    let initPTS: number | undefined;\n    let initDTS: number | undefined;\n    let timescale: number | undefined;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n\n    if (audioTrack.config && audioSamples.length) {\n      // let's use audio sampling rate as MP4 time scale.\n      // rationale is that there is a integer nb of audio frames per audio sample (1024 for AAC)\n      // using audio sampling rate here helps having an integer MP4 frame duration\n      // this avoids potential rounding issue and AV sync issue\n      audioTrack.timescale = audioTrack.samplerate;\n      switch (audioTrack.segmentCodec) {\n        case 'mp3':\n          if (typeSupported.mpeg) {\n            // Chrome and Safari\n            container = 'audio/mpeg';\n            audioTrack.codec = '';\n          } else if (typeSupported.mp3) {\n            // Firefox\n            audioTrack.codec = 'mp3';\n          }\n          break;\n      }\n      tracks.audio = {\n        id: 'audio',\n        container: container,\n        codec: audioTrack.codec,\n        initSegment:\n          audioTrack.segmentCodec === 'mp3' && typeSupported.mpeg\n            ? new Uint8Array(0)\n            : MP4.initSegment([audioTrack]),\n        metadata: {\n          channelCount: audioTrack.channelCount,\n        },\n      };\n      if (computePTSDTS) {\n        timescale = audioTrack.inputTimeScale;\n        // remember first PTS of this demuxing context. for audio, PTS = DTS\n        initPTS = initDTS =\n          audioSamples[0].pts - Math.round(timescale * timeOffset);\n      }\n    }\n\n    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n      // let's use input time scale as MP4 video timescale\n      // we use input time scale straight away to avoid rounding issues on frame duration / cts computation\n      videoTrack.timescale = videoTrack.inputTimeScale;\n      tracks.video = {\n        id: 'main',\n        container: 'video/mp4',\n        codec: videoTrack.codec,\n        initSegment: MP4.initSegment([videoTrack]),\n        metadata: {\n          width: videoTrack.width,\n          height: videoTrack.height,\n        },\n      };\n      if (computePTSDTS) {\n        timescale = videoTrack.inputTimeScale;\n        const startPTS = this.getVideoStartPts(videoSamples);\n        const startOffset = Math.round(timescale * timeOffset);\n        initDTS = Math.min(\n          initDTS as number,\n          normalizePts(videoSamples[0].dts, startPTS) - startOffset\n        );\n        initPTS = Math.min(initPTS as number, startPTS - startOffset);\n      }\n    }\n\n    if (Object.keys(tracks).length) {\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS as number;\n        this._initDTS = initDTS as number;\n      }\n\n      return {\n        tracks,\n        initPTS,\n        timescale,\n      };\n    }\n  }\n\n  remuxVideo(\n    track: DemuxedAvcTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    audioTrackLength: number\n  ): RemuxedTrack | undefined {\n    const timeScale: number = track.inputTimeScale;\n    const inputSamples: Array<AvcSample> = track.samples;\n    const outputSamples: Array<Mp4Sample> = [];\n    const nbSamples: number = inputSamples.length;\n    const initPTS: number = this._initPTS;\n    let nextAvcDts = this.nextAvcDts;\n    let offset = 8;\n    let mp4SampleDuration = this.videoSampleDuration;\n    let firstDTS;\n    let lastDTS;\n    let minPTS: number = Number.POSITIVE_INFINITY;\n    let maxPTS: number = Number.NEGATIVE_INFINITY;\n    let sortSamples = false;\n\n    // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n    if (!contiguous || nextAvcDts === null) {\n      const pts = timeOffset * timeScale;\n      const cts =\n        inputSamples[0].pts -\n        normalizePts(inputSamples[0].dts, inputSamples[0].pts);\n      // if not contiguous, let's use target timeOffset\n      nextAvcDts = pts - cts;\n    }\n\n    // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n    // PTSNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n    for (let i = 0; i < nbSamples; i++) {\n      const sample = inputSamples[i];\n      sample.pts = normalizePts(sample.pts - initPTS, nextAvcDts);\n      sample.dts = normalizePts(sample.dts - initPTS, nextAvcDts);\n      if (sample.dts < inputSamples[i > 0 ? i - 1 : i].dts) {\n        sortSamples = true;\n      }\n    }\n\n    // sort video samples by DTS then PTS then demux id order\n    if (sortSamples) {\n      inputSamples.sort(function (a, b) {\n        const deltadts = a.dts - b.dts;\n        const deltapts = a.pts - b.pts;\n        return deltadts || deltapts;\n      });\n    }\n\n    // Get first/last DTS\n    firstDTS = inputSamples[0].dts;\n    lastDTS = inputSamples[inputSamples.length - 1].dts;\n\n    // Sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n    // set this constant duration as being the avg delta between consecutive DTS.\n    const inputDuration = lastDTS - firstDTS;\n    const averageSampleDuration = inputDuration\n      ? Math.round(inputDuration / (nbSamples - 1))\n      : mp4SampleDuration || track.inputTimeScale / 30;\n\n    // if fragment are contiguous, detect hole/overlapping between fragments\n    if (contiguous) {\n      // check timestamp continuity across consecutive fragments (this is to remove inter-fragment gap/hole)\n      const delta = firstDTS - nextAvcDts;\n      const foundHole = delta > averageSampleDuration;\n      const foundOverlap = delta < -1;\n      if (foundHole || foundOverlap) {\n        if (foundHole) {\n          logger.warn(\n            `AVC: ${toMsFromMpegTsClock(\n              delta,\n              true\n            )} ms (${delta}dts) hole between fragments detected, filling it`\n          );\n        } else {\n          logger.warn(\n            `AVC: ${toMsFromMpegTsClock(\n              -delta,\n              true\n            )} ms (${delta}dts) overlapping between fragments detected`\n          );\n        }\n        if (!foundOverlap || nextAvcDts > inputSamples[0].pts) {\n          firstDTS = nextAvcDts;\n          const firstPTS = inputSamples[0].pts - delta;\n          inputSamples[0].dts = firstDTS;\n          inputSamples[0].pts = firstPTS;\n          logger.log(\n            `Video: First PTS/DTS adjusted: ${toMsFromMpegTsClock(\n              firstPTS,\n              true\n            )}/${toMsFromMpegTsClock(\n              firstDTS,\n              true\n            )}, delta: ${toMsFromMpegTsClock(delta, true)} ms`\n          );\n        }\n      }\n    }\n\n    firstDTS = Math.max(0, firstDTS);\n\n    let nbNalu = 0;\n    let naluLen = 0;\n    for (let i = 0; i < nbSamples; i++) {\n      // compute total/avc sample length and nb of NAL units\n      const sample = inputSamples[i];\n      const units = sample.units;\n      const nbUnits = units.length;\n      let sampleLen = 0;\n      for (let j = 0; j < nbUnits; j++) {\n        sampleLen += units[j].data.length;\n      }\n\n      naluLen += sampleLen;\n      nbNalu += nbUnits;\n      sample.length = sampleLen;\n\n      // ensure sample monotonic DTS\n      sample.dts = Math.max(sample.dts, firstDTS);\n\n      minPTS = Math.min(sample.pts, minPTS);\n      maxPTS = Math.max(sample.pts, maxPTS);\n    }\n    lastDTS = inputSamples[nbSamples - 1].dts;\n\n    /* concatenate the video data and construct the mdat in place\n      (need 8 more bytes to fill length and mpdat type) */\n    const mdatSize = naluLen + 4 * nbNalu + 8;\n    let mdat;\n    try {\n      mdat = new Uint8Array(mdatSize);\n    } catch (err) {\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MUX_ERROR,\n        details: ErrorDetails.REMUX_ALLOC_ERROR,\n        fatal: false,\n        bytes: mdatSize,\n        reason: `fail allocating video mdat ${mdatSize}`,\n      });\n      return;\n    }\n    const view = new DataView(mdat.buffer);\n    view.setUint32(0, mdatSize);\n    mdat.set(MP4.types.mdat, 4);\n\n    let stretchedLastFrame = false;\n    let minDtsDelta = Number.POSITIVE_INFINITY;\n    let minPtsDelta = Number.POSITIVE_INFINITY;\n    let maxDtsDelta = Number.NEGATIVE_INFINITY;\n    let maxPtsDelta = Number.NEGATIVE_INFINITY;\n    for (let i = 0; i < nbSamples; i++) {\n      const avcSample = inputSamples[i];\n      const avcSampleUnits = avcSample.units;\n      let mp4SampleLength = 0;\n      // convert NALU bitstream to MP4 format (prepend NALU with size field)\n      for (let j = 0, nbUnits = avcSampleUnits.length; j < nbUnits; j++) {\n        const unit = avcSampleUnits[j];\n        const unitData = unit.data;\n        const unitDataLen = unit.data.byteLength;\n        view.setUint32(offset, unitDataLen);\n        offset += 4;\n        mdat.set(unitData, offset);\n        offset += unitDataLen;\n        mp4SampleLength += 4 + unitDataLen;\n      }\n\n      // expected sample duration is the Decoding Timestamp diff of consecutive samples\n      let ptsDelta;\n      if (i < nbSamples - 1) {\n        mp4SampleDuration = inputSamples[i + 1].dts - avcSample.dts;\n        ptsDelta = inputSamples[i + 1].pts - avcSample.pts;\n      } else {\n        const config = this.config;\n        const lastFrameDuration =\n          i > 0\n            ? avcSample.dts - inputSamples[i - 1].dts\n            : averageSampleDuration;\n        ptsDelta =\n          i > 0\n            ? avcSample.pts - inputSamples[i - 1].pts\n            : averageSampleDuration;\n        if (config.stretchShortVideoTrack && this.nextAudioPts !== null) {\n          // In some cases, a segment's audio track duration may exceed the video track duration.\n          // Since we've already remuxed audio, and we know how long the audio track is, we look to\n          // see if the delta to the next segment is longer than maxBufferHole.\n          // If so, playback would potentially get stuck, so we artificially inflate\n          // the duration of the last frame to minimize any potential gap between segments.\n          const gapTolerance = Math.floor(config.maxBufferHole * timeScale);\n          const deltaToFrameEnd =\n            (audioTrackLength\n              ? minPTS + audioTrackLength * timeScale\n              : this.nextAudioPts) - avcSample.pts;\n          if (deltaToFrameEnd > gapTolerance) {\n            // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n            // frame overlap. maxBufferHole should be >> lastFrameDuration anyway.\n            mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n            if (mp4SampleDuration < 0) {\n              mp4SampleDuration = lastFrameDuration;\n            } else {\n              stretchedLastFrame = true;\n            }\n            logger.log(\n              `[mp4-remuxer]: It is approximately ${\n                deltaToFrameEnd / 90\n              } ms to the next segment; using duration ${\n                mp4SampleDuration / 90\n              } ms for the last video frame.`\n            );\n          } else {\n            mp4SampleDuration = lastFrameDuration;\n          }\n        } else {\n          mp4SampleDuration = lastFrameDuration;\n        }\n      }\n      const compositionTimeOffset = Math.round(avcSample.pts - avcSample.dts);\n      minDtsDelta = Math.min(minDtsDelta, mp4SampleDuration);\n      maxDtsDelta = Math.max(maxDtsDelta, mp4SampleDuration);\n      minPtsDelta = Math.min(minPtsDelta, ptsDelta);\n      maxPtsDelta = Math.max(maxPtsDelta, ptsDelta);\n\n      outputSamples.push(\n        new Mp4Sample(\n          avcSample.key,\n          mp4SampleDuration,\n          mp4SampleLength,\n          compositionTimeOffset\n        )\n      );\n    }\n\n    if (outputSamples.length) {\n      if (chromeVersion) {\n        if (chromeVersion < 70) {\n          // Chrome workaround, mark first sample as being a Random Access Point (keyframe) to avoid sourcebuffer append issue\n          // https://code.google.com/p/chromium/issues/detail?id=229412\n          const flags = outputSamples[0].flags;\n          flags.dependsOn = 2;\n          flags.isNonSync = 0;\n        }\n      } else if (safariWebkitVersion) {\n        // Fix for \"CNN special report, with CC\" in test-streams (Safari browser only)\n        // Ignore DTS when frame durations are irregular. Safari MSE does not handle this leading to gaps.\n        if (\n          maxPtsDelta - minPtsDelta < maxDtsDelta - minDtsDelta &&\n          averageSampleDuration / maxDtsDelta < 0.025 &&\n          outputSamples[0].cts === 0\n        ) {\n          logger.warn(\n            'Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.'\n          );\n          let dts = firstDTS;\n          for (let i = 0, len = outputSamples.length; i < len; i++) {\n            const nextDts = dts + outputSamples[i].duration;\n            const pts = dts + outputSamples[i].cts;\n            if (i < len - 1) {\n              const nextPts = nextDts + outputSamples[i + 1].cts;\n              outputSamples[i].duration = nextPts - pts;\n            } else {\n              outputSamples[i].duration = i\n                ? outputSamples[i - 1].duration\n                : averageSampleDuration;\n            }\n            outputSamples[i].cts = 0;\n            dts = nextDts;\n          }\n        }\n      }\n    }\n\n    console.assert(\n      mp4SampleDuration !== null,\n      'mp4SampleDuration must be computed'\n    );\n    // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n    mp4SampleDuration =\n      stretchedLastFrame || !mp4SampleDuration\n        ? averageSampleDuration\n        : mp4SampleDuration;\n    this.nextAvcDts = nextAvcDts = lastDTS + mp4SampleDuration;\n    this.videoSampleDuration = mp4SampleDuration;\n    this.isVideoContiguous = true;\n    const moof = MP4.moof(\n      track.sequenceNumber++,\n      firstDTS,\n      Object.assign({}, track, {\n        samples: outputSamples,\n      })\n    );\n    const type: SourceBufferName = 'video';\n    const data = {\n      data1: moof,\n      data2: mdat,\n      startPTS: minPTS / timeScale,\n      endPTS: (maxPTS + mp4SampleDuration) / timeScale,\n      startDTS: firstDTS / timeScale,\n      endDTS: (nextAvcDts as number) / timeScale,\n      type,\n      hasAudio: false,\n      hasVideo: true,\n      nb: outputSamples.length,\n      dropped: track.dropped,\n    };\n\n    track.samples = [];\n    track.dropped = 0;\n\n    console.assert(mdat.length, 'MDAT length must not be zero');\n\n    return data;\n  }\n\n  remuxAudio(\n    track: DemuxedAudioTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    accurateTimeOffset: boolean,\n    videoTimeOffset?: number\n  ): RemuxedTrack | undefined {\n    const inputTimeScale: number = track.inputTimeScale;\n    const mp4timeScale: number = track.samplerate\n      ? track.samplerate\n      : inputTimeScale;\n    const scaleFactor: number = inputTimeScale / mp4timeScale;\n    const mp4SampleDuration: number =\n      track.segmentCodec === 'aac'\n        ? AAC_SAMPLES_PER_FRAME\n        : MPEG_AUDIO_SAMPLE_PER_FRAME;\n    const inputSampleDuration: number = mp4SampleDuration * scaleFactor;\n    const initPTS: number = this._initPTS;\n    const rawMPEG: boolean =\n      track.segmentCodec === 'mp3' && this.typeSupported.mpeg;\n    const outputSamples: Array<Mp4Sample> = [];\n    const alignedWithVideo = videoTimeOffset !== undefined;\n\n    let inputSamples: Array<AudioSample> = track.samples;\n    let offset: number = rawMPEG ? 0 : 8;\n    let nextAudioPts: number = this.nextAudioPts || -1;\n\n    // window.audioSamples ? window.audioSamples.push(inputSamples.map(s => s.pts)) : (window.audioSamples = [inputSamples.map(s => s.pts)]);\n\n    // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n    // for sake of clarity:\n    // consecutive fragments are frags with\n    //  - less than 100ms gaps between new time offset (if accurate) and next expected PTS OR\n    //  - less than 20 audio frames distance\n    // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n    // this helps ensuring audio continuity\n    // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame\n    const timeOffsetMpegTS = timeOffset * inputTimeScale;\n    this.isAudioContiguous = contiguous =\n      contiguous ||\n      ((inputSamples.length &&\n        nextAudioPts > 0 &&\n        ((accurateTimeOffset &&\n          Math.abs(timeOffsetMpegTS - nextAudioPts) < 9000) ||\n          Math.abs(\n            normalizePts(inputSamples[0].pts - initPTS, timeOffsetMpegTS) -\n              nextAudioPts\n          ) <\n            20 * inputSampleDuration)) as boolean);\n\n    // compute normalized PTS\n    inputSamples.forEach(function (sample) {\n      sample.pts = normalizePts(sample.pts - initPTS, timeOffsetMpegTS);\n    });\n\n    if (!contiguous || nextAudioPts < 0) {\n      // filter out sample with negative PTS that are not playable anyway\n      // if we don't remove these negative samples, they will shift all audio samples forward.\n      // leading to audio overlap between current / next fragment\n      inputSamples = inputSamples.filter((sample) => sample.pts >= 0);\n\n      // in case all samples have negative PTS, and have been filtered out, return now\n      if (!inputSamples.length) {\n        return;\n      }\n\n      if (videoTimeOffset === 0) {\n        // Set the start to 0 to match video so that start gaps larger than inputSampleDuration are filled with silence\n        nextAudioPts = 0;\n      } else if (accurateTimeOffset && !alignedWithVideo) {\n        // When not seeking, not live, and LevelDetails.PTSKnown, use fragment start as predicted next audio PTS\n        nextAudioPts = Math.max(0, timeOffsetMpegTS);\n      } else {\n        // if frags are not contiguous and if we cant trust time offset, let's use first sample PTS as next audio PTS\n        nextAudioPts = inputSamples[0].pts;\n      }\n    }\n\n    // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n    // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n    // In an effort to prevent this from happening, we inject frames here where there are gaps.\n    // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n    // frame.\n\n    if (track.segmentCodec === 'aac') {\n      const maxAudioFramesDrift = this.config.maxAudioFramesDrift;\n      for (let i = 0, nextPts = nextAudioPts; i < inputSamples.length; i++) {\n        // First, let's see how far off this frame is from where we expect it to be\n        const sample = inputSamples[i];\n        const pts = sample.pts;\n        const delta = pts - nextPts;\n        const duration = Math.abs((1000 * delta) / inputTimeScale);\n\n        // When remuxing with video, if we're overlapping by more than a duration, drop this sample to stay in sync\n        if (\n          delta <= -maxAudioFramesDrift * inputSampleDuration &&\n          alignedWithVideo\n        ) {\n          if (i === 0) {\n            logger.warn(\n              `Audio frame @ ${(pts / inputTimeScale).toFixed(\n                3\n              )}s overlaps nextAudioPts by ${Math.round(\n                (1000 * delta) / inputTimeScale\n              )} ms.`\n            );\n            this.nextAudioPts = nextAudioPts = nextPts = pts;\n          }\n        } // eslint-disable-line brace-style\n\n        // Insert missing frames if:\n        // 1: We're more than maxAudioFramesDrift frame away\n        // 2: Not more than MAX_SILENT_FRAME_DURATION away\n        // 3: currentTime (aka nextPtsNorm) is not 0\n        // 4: remuxing with video (videoTimeOffset !== undefined)\n        else if (\n          delta >= maxAudioFramesDrift * inputSampleDuration &&\n          duration < MAX_SILENT_FRAME_DURATION &&\n          alignedWithVideo\n        ) {\n          let missing = Math.round(delta / inputSampleDuration);\n          // Adjust nextPts so that silent samples are aligned with media pts. This will prevent media samples from\n          // later being shifted if nextPts is based on timeOffset and delta is not a multiple of inputSampleDuration.\n          nextPts = pts - missing * inputSampleDuration;\n          if (nextPts < 0) {\n            missing--;\n            nextPts += inputSampleDuration;\n          }\n          if (i === 0) {\n            this.nextAudioPts = nextAudioPts = nextPts;\n          }\n          logger.warn(\n            `[mp4-remuxer]: Injecting ${missing} audio frame @ ${(\n              nextPts / inputTimeScale\n            ).toFixed(3)}s due to ${Math.round(\n              (1000 * delta) / inputTimeScale\n            )} ms gap.`\n          );\n          for (let j = 0; j < missing; j++) {\n            const newStamp = Math.max(nextPts as number, 0);\n            let fillFrame = AAC.getSilentFrame(\n              track.manifestCodec || track.codec,\n              track.channelCount\n            );\n            if (!fillFrame) {\n              logger.log(\n                '[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead.'\n              );\n              fillFrame = sample.unit.subarray();\n            }\n            inputSamples.splice(i, 0, {\n              unit: fillFrame,\n              pts: newStamp,\n            });\n            nextPts += inputSampleDuration;\n            i++;\n          }\n        }\n        sample.pts = nextPts;\n        nextPts += inputSampleDuration;\n      }\n    }\n    let firstPTS: number | null = null;\n    let lastPTS: number | null = null;\n    let mdat: any;\n    let mdatSize: number = 0;\n    let sampleLength: number = inputSamples.length;\n    while (sampleLength--) {\n      mdatSize += inputSamples[sampleLength].unit.byteLength;\n    }\n    for (let j = 0, nbSamples = inputSamples.length; j < nbSamples; j++) {\n      const audioSample = inputSamples[j];\n      const unit = audioSample.unit;\n      let pts = audioSample.pts;\n      if (lastPTS !== null) {\n        // If we have more than one sample, set the duration of the sample to the \"real\" duration; the PTS diff with\n        // the previous sample\n        const prevSample = outputSamples[j - 1];\n        prevSample.duration = Math.round((pts - lastPTS) / scaleFactor);\n      } else {\n        if (contiguous && track.segmentCodec === 'aac') {\n          // set PTS/DTS to expected PTS/DTS\n          pts = nextAudioPts;\n        }\n        // remember first PTS of our audioSamples\n        firstPTS = pts;\n        if (mdatSize > 0) {\n          /* concatenate the audio data and construct the mdat in place\n            (need 8 more bytes to fill length and mdat type) */\n          mdatSize += offset;\n          try {\n            mdat = new Uint8Array(mdatSize);\n          } catch (err) {\n            this.observer.emit(Events.ERROR, Events.ERROR, {\n              type: ErrorTypes.MUX_ERROR,\n              details: ErrorDetails.REMUX_ALLOC_ERROR,\n              fatal: false,\n              bytes: mdatSize,\n              reason: `fail allocating audio mdat ${mdatSize}`,\n            });\n            return;\n          }\n          if (!rawMPEG) {\n            const view = new DataView(mdat.buffer);\n            view.setUint32(0, mdatSize);\n            mdat.set(MP4.types.mdat, 4);\n          }\n        } else {\n          // no audio samples\n          return;\n        }\n      }\n      mdat.set(unit, offset);\n      const unitLen = unit.byteLength;\n      offset += unitLen;\n      // Default the sample's duration to the computed mp4SampleDuration, which will either be 1024 for AAC or 1152 for MPEG\n      // In the case that we have 1 sample, this will be the duration. If we have more than one sample, the duration\n      // becomes the PTS diff with the previous sample\n      outputSamples.push(new Mp4Sample(true, mp4SampleDuration, unitLen, 0));\n      lastPTS = pts;\n    }\n\n    // We could end up with no audio samples if all input samples were overlapping with the previously remuxed ones\n    const nbSamples = outputSamples.length;\n    if (!nbSamples) {\n      return;\n    }\n\n    // The next audio sample PTS should be equal to last sample PTS + duration\n    const lastSample = outputSamples[outputSamples.length - 1];\n    this.nextAudioPts = nextAudioPts =\n      lastPTS! + scaleFactor * lastSample.duration;\n\n    // Set the track samples from inputSamples to outputSamples before remuxing\n    const moof = rawMPEG\n      ? new Uint8Array(0)\n      : MP4.moof(\n          track.sequenceNumber++,\n          firstPTS! / scaleFactor,\n          Object.assign({}, track, { samples: outputSamples })\n        );\n\n    // Clear the track samples. This also clears the samples array in the demuxer, since the reference is shared\n    track.samples = [];\n    const start = firstPTS! / inputTimeScale;\n    const end = nextAudioPts / inputTimeScale;\n    const type: SourceBufferName = 'audio';\n    const audioData = {\n      data1: moof,\n      data2: mdat,\n      startPTS: start,\n      endPTS: end,\n      startDTS: start,\n      endDTS: end,\n      type,\n      hasAudio: true,\n      hasVideo: false,\n      nb: nbSamples,\n    };\n\n    this.isAudioContiguous = true;\n\n    console.assert(mdat.length, 'MDAT length must not be zero');\n    return audioData;\n  }\n\n  remuxEmptyAudio(\n    track: DemuxedAudioTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    videoData: Fragment\n  ): RemuxedTrack | undefined {\n    const inputTimeScale: number = track.inputTimeScale;\n    const mp4timeScale: number = track.samplerate\n      ? track.samplerate\n      : inputTimeScale;\n    const scaleFactor: number = inputTimeScale / mp4timeScale;\n    const nextAudioPts: number | null = this.nextAudioPts;\n    // sync with video's timestamp\n    const startDTS: number =\n      (nextAudioPts !== null\n        ? nextAudioPts\n        : videoData.startDTS * inputTimeScale) + this._initDTS;\n    const endDTS: number = videoData.endDTS * inputTimeScale + this._initDTS;\n    // one sample's duration value\n    const frameDuration: number = scaleFactor * AAC_SAMPLES_PER_FRAME;\n    // samples count of this segment's duration\n    const nbSamples: number = Math.ceil((endDTS - startDTS) / frameDuration);\n    // silent frame\n    const silentFrame: Uint8Array | undefined = AAC.getSilentFrame(\n      track.manifestCodec || track.codec,\n      track.channelCount\n    );\n\n    logger.warn('[mp4-remuxer]: remux empty Audio');\n    // Can't remux if we can't generate a silent frame...\n    if (!silentFrame) {\n      logger.trace(\n        '[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec'\n      );\n      return;\n    }\n\n    const samples: Array<any> = [];\n    for (let i = 0; i < nbSamples; i++) {\n      const stamp = startDTS + i * frameDuration;\n      samples.push({ unit: silentFrame, pts: stamp, dts: stamp });\n    }\n    track.samples = samples;\n\n    return this.remuxAudio(track, timeOffset, contiguous, false);\n  }\n}\n\nexport function normalizePts(value: number, reference: number | null): number {\n  let offset;\n  if (reference === null) {\n    return value;\n  }\n\n  if (reference < value) {\n    // - 2^33\n    offset = -8589934592;\n  } else {\n    // + 2^33\n    offset = 8589934592;\n  }\n  /* PTS is 33bit (from 0 to 2^33 -1)\n    if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n    PTS looping occured. fill the gap */\n  while (Math.abs(value - reference) > 4294967296) {\n    value += offset;\n  }\n\n  return value;\n}\n\nfunction findKeyframeIndex(samples: Array<AvcSample>): number {\n  for (let i = 0; i < samples.length; i++) {\n    if (samples[i].key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function flushTextTrackMetadataCueSamples(\n  track: DemuxedMetadataTrack,\n  timeOffset: number,\n  initPTS: number,\n  initDTS: number\n): RemuxedMetadata | undefined {\n  const length = track.samples.length;\n  if (!length) {\n    return;\n  }\n  const inputTimeScale = track.inputTimeScale;\n  for (let index = 0; index < length; index++) {\n    const sample = track.samples[index];\n    // setting id3 pts, dts to relative time\n    // using this._initPTS and this._initDTS to calculate relative time\n    sample.pts =\n      normalizePts(sample.pts - initPTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n    sample.dts =\n      normalizePts(sample.dts - initDTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n  }\n  const samples = track.samples;\n  track.samples = [];\n  return {\n    samples,\n  };\n}\n\nexport function flushTextTrackUserdataCueSamples(\n  track: DemuxedUserdataTrack,\n  timeOffset: number,\n  initPTS: number\n): RemuxedUserdata | undefined {\n  const length = track.samples.length;\n  if (!length) {\n    return;\n  }\n\n  const inputTimeScale = track.inputTimeScale;\n  for (let index = 0; index < length; index++) {\n    const sample = track.samples[index];\n    // setting text pts, dts to relative time\n    // using this._initPTS and this._initDTS to calculate relative time\n    sample.pts =\n      normalizePts(sample.pts - initPTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n  }\n  track.samples.sort((a, b) => a.pts - b.pts);\n  const samples = track.samples;\n  track.samples = [];\n  return {\n    samples,\n  };\n}\n\nclass Mp4Sample {\n  public size: number;\n  public duration: number;\n  public cts: number;\n  public flags: Mp4SampleFlags;\n\n  constructor(\n    isKeyframe: boolean,\n    duration: number,\n    size: number,\n    cts: number\n  ) {\n    this.duration = duration;\n    this.size = size;\n    this.cts = cts;\n    this.flags = new Mp4SampleFlags(isKeyframe);\n  }\n}\n\nclass Mp4SampleFlags {\n  public isLeading: 0 = 0;\n  public isDependedOn: 0 = 0;\n  public hasRedundancy: 0 = 0;\n  public degradPrio: 0 = 0;\n  public dependsOn: 1 | 2 = 1;\n  public isNonSync: 0 | 1 = 1;\n\n  constructor(isKeyframe) {\n    this.dependsOn = isKeyframe ? 2 : 1;\n    this.isNonSync = isKeyframe ? 0 : 1;\n  }\n}\n","import {\n  flushTextTrackMetadataCueSamples,\n  flushTextTrackUserdataCueSamples,\n} from './mp4-remuxer';\nimport {\n  InitData,\n  InitDataTrack,\n  patchEncyptionData,\n} from '../utils/mp4-tools';\nimport {\n  getDuration,\n  getStartDTS,\n  offsetStartDTS,\n  parseInitSegment,\n} from '../utils/mp4-tools';\nimport { ElementaryStreamTypes } from '../loader/fragment';\nimport { logger } from '../utils/logger';\nimport type { TrackSet } from '../types/track';\nimport type {\n  InitSegmentData,\n  RemuxedTrack,\n  Remuxer,\n  RemuxerResult,\n} from '../types/remuxer';\nimport type {\n  DemuxedAudioTrack,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n  PassthroughTrack,\n} from '../types/demuxer';\nimport type { DecryptData } from '../loader/level-key';\n\nclass PassThroughRemuxer implements Remuxer {\n  private emitInitSegment: boolean = false;\n  private audioCodec?: string;\n  private videoCodec?: string;\n  private initData?: InitData;\n  private initPTS?: number;\n  private initTracks?: TrackSet;\n  private lastEndTime: number | null = null;\n\n  public destroy() {}\n\n  public resetTimeStamp(defaultInitPTS) {\n    this.initPTS = defaultInitPTS;\n    this.lastEndTime = null;\n  }\n\n  public resetNextTimestamp() {\n    this.lastEndTime = null;\n  }\n\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    decryptdata: DecryptData | null\n  ) {\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this.generateInitSegment(patchEncyptionData(initSegment, decryptdata));\n    this.emitInitSegment = true;\n  }\n\n  private generateInitSegment(initSegment: Uint8Array | undefined): void {\n    let { audioCodec, videoCodec } = this;\n    if (!initSegment || !initSegment.byteLength) {\n      this.initTracks = undefined;\n      this.initData = undefined;\n      return;\n    }\n    const initData = (this.initData = parseInitSegment(initSegment));\n\n    // Get codec from initSegment or fallback to default\n    if (!audioCodec) {\n      audioCodec = getParsedTrackCodec(\n        initData.audio,\n        ElementaryStreamTypes.AUDIO\n      );\n    }\n\n    if (!videoCodec) {\n      videoCodec = getParsedTrackCodec(\n        initData.video,\n        ElementaryStreamTypes.VIDEO\n      );\n    }\n\n    const tracks: TrackSet = {};\n    if (initData.audio && initData.video) {\n      tracks.audiovideo = {\n        container: 'video/mp4',\n        codec: audioCodec + ',' + videoCodec,\n        initSegment,\n        id: 'main',\n      };\n    } else if (initData.audio) {\n      tracks.audio = {\n        container: 'audio/mp4',\n        codec: audioCodec,\n        initSegment,\n        id: 'audio',\n      };\n    } else if (initData.video) {\n      tracks.video = {\n        container: 'video/mp4',\n        codec: videoCodec,\n        initSegment,\n        id: 'main',\n      };\n    } else {\n      logger.warn(\n        '[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes.'\n      );\n    }\n    this.initTracks = tracks;\n  }\n\n  public remux(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: PassthroughTrack,\n    id3Track: DemuxedMetadataTrack,\n    textTrack: DemuxedUserdataTrack,\n    timeOffset: number\n  ): RemuxerResult {\n    let { initPTS, lastEndTime } = this;\n    const result: RemuxerResult = {\n      audio: undefined,\n      video: undefined,\n      text: textTrack,\n      id3: id3Track,\n      initSegment: undefined,\n    };\n\n    // If we haven't yet set a lastEndDTS, or it was reset, set it to the provided timeOffset. We want to use the\n    // lastEndDTS over timeOffset whenever possible; during progressive playback, the media source will not update\n    // the media duration (which is what timeOffset is provided as) before we need to process the next chunk.\n    if (!Number.isFinite(lastEndTime!)) {\n      lastEndTime = this.lastEndTime = timeOffset || 0;\n    }\n\n    // The binary segment data is added to the videoTrack in the mp4demuxer. We don't check to see if the data is only\n    // audio or video (or both); adding it to video was an arbitrary choice.\n    const data = videoTrack.samples;\n    if (!data || !data.length) {\n      return result;\n    }\n\n    const initSegment: InitSegmentData = {\n      initPTS: undefined,\n      timescale: 1,\n    };\n    let initData = this.initData;\n    if (!initData || !initData.length) {\n      this.generateInitSegment(data);\n      initData = this.initData;\n    }\n    if (!initData || !initData.length) {\n      // We can't remux if the initSegment could not be generated\n      logger.warn('[passthrough-remuxer.ts]: Failed to generate initSegment.');\n      return result;\n    }\n    if (this.emitInitSegment) {\n      initSegment.tracks = this.initTracks as TrackSet;\n      this.emitInitSegment = false;\n    }\n\n    const startDTS = getStartDTS(initData, data);\n    if (!Number.isFinite(initPTS!)) {\n      this.initPTS = initSegment.initPTS = initPTS = startDTS - timeOffset;\n    }\n\n    const duration = getDuration(data, initData);\n    const startTime = audioTrack\n      ? startDTS - (initPTS as number)\n      : (lastEndTime as number);\n    const endTime = startTime + duration;\n    offsetStartDTS(initData, data, initPTS as number);\n\n    if (duration > 0) {\n      this.lastEndTime = endTime;\n    } else {\n      logger.warn('Duration parsed from mp4 should be greater than zero');\n      this.resetNextTimestamp();\n    }\n\n    const hasAudio = !!initData.audio;\n    const hasVideo = !!initData.video;\n\n    let type: any = '';\n    if (hasAudio) {\n      type += 'audio';\n    }\n\n    if (hasVideo) {\n      type += 'video';\n    }\n\n    const track: RemuxedTrack = {\n      data1: data,\n      startPTS: startTime,\n      startDTS: startTime,\n      endPTS: endTime,\n      endDTS: endTime,\n      type,\n      hasAudio,\n      hasVideo,\n      nb: 1,\n      dropped: 0,\n    };\n\n    result.audio = track.type === 'audio' ? track : undefined;\n    result.video = track.type !== 'audio' ? track : undefined;\n    result.initSegment = initSegment;\n    const initPtsNum = this.initPTS ?? 0;\n    result.id3 = flushTextTrackMetadataCueSamples(\n      id3Track,\n      timeOffset,\n      initPtsNum,\n      initPtsNum\n    );\n\n    if (textTrack.samples.length) {\n      result.text = flushTextTrackUserdataCueSamples(\n        textTrack,\n        timeOffset,\n        initPtsNum\n      );\n    }\n\n    return result;\n  }\n}\n\nfunction getParsedTrackCodec(\n  track: InitDataTrack | undefined,\n  type: ElementaryStreamTypes.AUDIO | ElementaryStreamTypes.VIDEO\n): string {\n  const parsedCodec = track?.codec;\n  if (parsedCodec && parsedCodec.length > 4) {\n    return parsedCodec;\n  }\n  // Since mp4-tools cannot parse full codec string (see 'TODO: Parse codec details'... in mp4-tools)\n  // Provide defaults based on codec type\n  // This allows for some playback of some fmp4 playlists without CODECS defined in manifest\n  if (parsedCodec === 'hvc1' || parsedCodec === 'hev1') {\n    return 'hvc1.1.c.L120.90';\n  }\n  if (parsedCodec === 'av01') {\n    return 'av01.0.04M.08';\n  }\n  if (parsedCodec === 'avc1' || type === ElementaryStreamTypes.VIDEO) {\n    return 'avc1.42e01e';\n  }\n  return 'mp4a.40.5';\n}\nexport default PassThroughRemuxer;\n","/**\n * Sub-class specialization of EventHandler base class.\n *\n * TaskLoop allows to schedule a task function being called (optionnaly repeatedly) on the main loop,\n * scheduled asynchroneously, avoiding recursive calls in the same tick.\n *\n * The task itself is implemented in `doTick`. It can be requested and called for single execution\n * using the `tick` method.\n *\n * It will be assured that the task execution method (`tick`) only gets called once per main loop \"tick\",\n * no matter how often it gets requested for execution. Execution in further ticks will be scheduled accordingly.\n *\n * If further execution requests have already been scheduled on the next tick, it can be checked with `hasNextTick`,\n * and cancelled with `clearNextTick`.\n *\n * The task can be scheduled as an interval repeatedly with a period as parameter (see `setInterval`, `clearInterval`).\n *\n * Sub-classes need to implement the `doTick` method which will effectively have the task execution routine.\n *\n * Further explanations:\n *\n * The baseclass has a `tick` method that will schedule the doTick call. It may be called synchroneously\n * only for a stack-depth of one. On re-entrant calls, sub-sequent calls are scheduled for next main loop ticks.\n *\n * When the task execution (`tick` method) is called in re-entrant way this is detected and\n * we are limiting the task execution per call stack to exactly one, but scheduling/post-poning further\n * task processing on the next main loop iteration (also known as \"next tick\" in the Node/JS runtime lingo).\n */\nexport default class TaskLoop {\n  private readonly _boundTick: () => void;\n  private _tickTimer: number | null = null;\n  private _tickInterval: number | null = null;\n  private _tickCallCount = 0;\n\n  constructor() {\n    this._boundTick = this.tick.bind(this);\n  }\n\n  public destroy() {\n    this.onHandlerDestroying();\n    this.onHandlerDestroyed();\n  }\n\n  protected onHandlerDestroying() {\n    // clear all timers before unregistering from event bus\n    this.clearNextTick();\n    this.clearInterval();\n  }\n\n  protected onHandlerDestroyed() {}\n\n  /**\n   * @returns {boolean}\n   */\n  public hasInterval(): boolean {\n    return !!this._tickInterval;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  public hasNextTick(): boolean {\n    return !!this._tickTimer;\n  }\n\n  /**\n   * @param {number} millis Interval time (ms)\n   * @returns {boolean} True when interval has been scheduled, false when already scheduled (no effect)\n   */\n  public setInterval(millis: number): boolean {\n    if (!this._tickInterval) {\n      this._tickInterval = self.setInterval(this._boundTick, millis);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns {boolean} True when interval was cleared, false when none was set (no effect)\n   */\n  public clearInterval(): boolean {\n    if (this._tickInterval) {\n      self.clearInterval(this._tickInterval);\n      this._tickInterval = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns {boolean} True when timeout was cleared, false when none was set (no effect)\n   */\n  public clearNextTick(): boolean {\n    if (this._tickTimer) {\n      self.clearTimeout(this._tickTimer);\n      this._tickTimer = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Will call the subclass doTick implementation in this main loop tick\n   * or in the next one (via setTimeout(,0)) in case it has already been called\n   * in this tick (in case this is a re-entrant call).\n   */\n  public tick(): void {\n    this._tickCallCount++;\n    if (this._tickCallCount === 1) {\n      this.doTick();\n      // re-entrant call to tick from previous doTick call stack\n      // -> schedule a call on the next main loop iteration to process this task processing request\n      if (this._tickCallCount > 1) {\n        // make sure only one timer exists at any time at max\n        this.tickImmediate();\n      }\n      this._tickCallCount = 0;\n    }\n  }\n\n  public tickImmediate(): void {\n    this.clearNextTick();\n    this._tickTimer = self.setTimeout(this._boundTick, 0);\n  }\n\n  /**\n   * For subclass to implement task logic\n   * @abstract\n   */\n  protected doTick(): void {}\n}\n","export interface Demuxer {\n  demux(\n    data: Uint8Array,\n    timeOffset: number,\n    isSampleAes?: boolean,\n    flush?: boolean\n  ): DemuxerResult;\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult>;\n  flush(timeOffset?: number): DemuxerResult | Promise<DemuxerResult>;\n  destroy(): void;\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  );\n  resetTimeStamp(defaultInitPTS?: number | null): void;\n  resetContiguity(): void;\n}\n\nexport interface DemuxerResult {\n  audioTrack: DemuxedAudioTrack;\n  videoTrack: DemuxedVideoTrack;\n  id3Track: DemuxedMetadataTrack;\n  textTrack: DemuxedUserdataTrack;\n}\n\nexport interface DemuxedTrack {\n  type: string;\n  id: number;\n  pid: number;\n  inputTimeScale: number;\n  sequenceNumber: number;\n  samples:\n    | AudioSample[]\n    | AvcSample[]\n    | MetadataSample[]\n    | UserdataSample[]\n    | Uint8Array;\n  timescale?: number;\n  container?: string;\n  dropped: number;\n  duration?: number;\n  pesData?: ElementaryStreamData | null;\n  codec?: string;\n}\n\nexport interface PassthroughTrack extends DemuxedTrack {\n  sampleDuration: number;\n  samples: Uint8Array;\n  timescale: number;\n  duration: number;\n  codec: string;\n}\nexport interface DemuxedAudioTrack extends DemuxedTrack {\n  config?: number[];\n  samplerate?: number;\n  segmentCodec?: string;\n  channelCount?: number;\n  manifestCodec?: string;\n  samples: AudioSample[];\n}\n\nexport interface DemuxedVideoTrack extends DemuxedTrack {\n  width?: number;\n  height?: number;\n  pixelRatio?: [number, number];\n  audFound?: boolean;\n  pps?: number[];\n  sps?: number[];\n  naluState?: number;\n  samples: AvcSample[] | Uint8Array;\n}\n\nexport interface DemuxedAvcTrack extends DemuxedVideoTrack {\n  samples: AvcSample[];\n}\n\nexport interface DemuxedMetadataTrack extends DemuxedTrack {\n  samples: MetadataSample[];\n}\n\nexport interface DemuxedUserdataTrack extends DemuxedTrack {\n  samples: UserdataSample[];\n}\n\nexport enum MetadataSchema {\n  audioId3 = 'org.id3',\n  dateRange = 'com.apple.quicktime.HLS',\n  emsg = 'https://aomedia.org/emsg/ID3',\n}\nexport interface MetadataSample {\n  pts: number;\n  dts: number;\n  duration: number;\n  len?: number;\n  data: Uint8Array;\n  type: MetadataSchema;\n}\n\nexport interface UserdataSample {\n  pts: number;\n  bytes?: Uint8Array;\n  type?: number;\n  payloadType?: number;\n  uuid?: string;\n  userData?: string;\n  userDataBytes?: Uint8Array;\n}\n\nexport interface AvcSample {\n  dts: number;\n  pts: number;\n  key: boolean;\n  frame: boolean;\n  units: AvcSampleUnit[];\n  debug: string;\n  length: number;\n}\n\nexport interface AvcSampleUnit {\n  data: Uint8Array;\n  type: number;\n}\n\nexport type AudioSample = {\n  unit: Uint8Array;\n  pts: number;\n};\n\nexport type AudioFrame = {\n  sample: AudioSample;\n  length: number;\n  missing: number;\n};\n\nexport interface ElementaryStreamData {\n  data: Uint8Array[];\n  size: number;\n}\n\nexport interface KeyData {\n  method: string;\n  key: Uint8Array;\n  iv: Uint8Array;\n}\n","import { LevelDetails } from '../loader/level-details';\nimport { AttrList } from '../utils/attr-list';\n\nexport interface LevelParsed {\n  attrs: LevelAttributes;\n  audioCodec?: string;\n  bitrate: number;\n  details?: LevelDetails;\n  height?: number;\n  id?: number;\n  level?: number;\n  name: string;\n  textCodec?: string;\n  unknownCodecs?: string[];\n  url: string;\n  videoCodec?: string;\n  width?: number;\n}\n\nexport interface LevelAttributes extends AttrList {\n  'ALLOWED-CPC'?: string;\n  AUDIO?: string;\n  AUTOSELECT?: string;\n  'AVERAGE-BANDWIDTH'?: string;\n  BANDWIDTH?: string;\n  BYTERANGE?: string;\n  'CLOSED-CAPTIONS'?: string;\n  CHARACTERISTICS?: string;\n  CODECS?: string;\n  DEFAULT?: string;\n  FORCED?: string;\n  'FRAME-RATE'?: string;\n  'HDCP-LEVEL'?: string;\n  LANGUAGE?: string;\n  NAME?: string;\n  'PATHWAY-ID'?: string;\n  'PROGRAM-ID'?: string;\n  RESOLUTION?: string;\n  SCORE?: string;\n  SUBTITLES?: string;\n  TYPE?: string;\n  URI?: string;\n  'VIDEO-RANGE'?: string;\n}\n\nexport const HdcpLevels = ['NONE', 'TYPE-0', 'TYPE-1', 'TYPE-2', null] as const;\nexport type HdcpLevel = typeof HdcpLevels[number];\n\nexport enum HlsSkip {\n  No = '',\n  Yes = 'YES',\n  v2 = 'v2',\n}\n\nexport function getSkipValue(details: LevelDetails, msn?: number): HlsSkip {\n  const { canSkipUntil, canSkipDateRanges, endSN } = details;\n  const snChangeGoal = msn !== undefined ? msn - endSN : 0;\n  if (canSkipUntil && snChangeGoal < canSkipUntil) {\n    if (canSkipDateRanges) {\n      return HlsSkip.v2;\n    }\n    return HlsSkip.Yes;\n  }\n  return HlsSkip.No;\n}\n\nexport class HlsUrlParameters {\n  msn?: number;\n  part?: number;\n  skip?: HlsSkip;\n\n  constructor(msn?: number, part?: number, skip?: HlsSkip) {\n    this.msn = msn;\n    this.part = part;\n    this.skip = skip;\n  }\n\n  addDirectives(uri: string): string | never {\n    const url: URL = new self.URL(uri);\n    if (this.msn !== undefined) {\n      url.searchParams.set('_HLS_msn', this.msn.toString());\n    }\n    if (this.part !== undefined) {\n      url.searchParams.set('_HLS_part', this.part.toString());\n    }\n    if (this.skip) {\n      url.searchParams.set('_HLS_skip', this.skip);\n    }\n    return url.href;\n  }\n}\n\nexport class Level {\n  public readonly attrs: LevelAttributes;\n  public readonly audioCodec: string | undefined;\n  public readonly bitrate: number;\n  public readonly codecSet: string;\n  public readonly height: number;\n  public readonly id: number;\n  public readonly name: string | undefined;\n  public readonly videoCodec: string | undefined;\n  public readonly width: number;\n  public readonly unknownCodecs: string[] | undefined;\n  public audioGroupIds?: string[];\n  public details?: LevelDetails;\n  public fragmentError: number = 0;\n  public loadError: number = 0;\n  public loaded?: { bytes: number; duration: number };\n  public realBitrate: number = 0;\n  public textGroupIds?: string[];\n  public url: string[];\n  private _urlId: number = 0;\n\n  constructor(data: LevelParsed) {\n    this.url = [data.url];\n    this.attrs = data.attrs;\n    this.bitrate = data.bitrate;\n    if (data.details) {\n      this.details = data.details;\n    }\n    this.id = data.id || 0;\n    this.name = data.name;\n    this.width = data.width || 0;\n    this.height = data.height || 0;\n    this.audioCodec = data.audioCodec;\n    this.videoCodec = data.videoCodec;\n    this.unknownCodecs = data.unknownCodecs;\n    this.codecSet = [data.videoCodec, data.audioCodec]\n      .filter((c) => c)\n      .join(',')\n      .replace(/\\.[^.,]+/g, '');\n  }\n\n  get maxBitrate(): number {\n    return Math.max(this.realBitrate, this.bitrate);\n  }\n\n  get uri(): string {\n    return this.url[this._urlId] || '';\n  }\n\n  get urlId(): number {\n    return this._urlId;\n  }\n\n  set urlId(value: number) {\n    const newValue = value % this.url.length;\n    if (this._urlId !== newValue) {\n      this.details = undefined;\n      this._urlId = newValue;\n    }\n  }\n}\n","import type { Fragment } from '../loader/fragment';\nimport type { Part } from '../loader/fragment';\nimport type { KeyLoaderInfo } from '../loader/key-loader';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { HlsUrlParameters } from './level';\n\nexport interface LoaderContext {\n  // target URL\n  url: string;\n  // loader response type (arraybuffer or default response type for playlist)\n  responseType: string;\n  // headers\n  headers?: Record<string, string>;\n  // start byte range offset\n  rangeStart?: number;\n  // end byte range offset\n  rangeEnd?: number;\n  // true if onProgress should report partial chunk of loaded content\n  progressData?: boolean;\n}\n\nexport interface FragmentLoaderContext extends LoaderContext {\n  frag: Fragment;\n  part: Part | null;\n  resetIV?: boolean;\n}\n\nexport interface KeyLoaderContext extends LoaderContext {\n  keyInfo: KeyLoaderInfo;\n  frag: Fragment;\n}\n\nexport interface LoaderConfiguration {\n  // Max number of load retries\n  maxRetry: number;\n  // Timeout after which `onTimeOut` callback will be triggered\n  // (if loading is still not finished after that delay)\n  timeout: number;\n  // Delay between an I/O error and following connection retry (ms).\n  // This to avoid spamming the server\n  retryDelay: number;\n  // max connection retry delay (ms)\n  maxRetryDelay: number;\n  // When streaming progressively, this is the minimum chunk size required to emit a PROGRESS event\n  highWaterMark: number;\n}\n\nexport interface LoaderResponse {\n  url: string;\n  data: string | ArrayBuffer;\n}\n\nexport interface LoaderStats {\n  aborted: boolean;\n  loaded: number;\n  retry: number;\n  total: number;\n  chunkCount: number;\n  bwEstimate: number;\n  loading: HlsProgressivePerformanceTiming;\n  parsing: HlsPerformanceTiming;\n  buffering: HlsProgressivePerformanceTiming;\n}\n\nexport interface HlsPerformanceTiming {\n  start: number;\n  end: number;\n}\n\nexport interface HlsChunkPerformanceTiming extends HlsPerformanceTiming {\n  executeStart: number;\n  executeEnd: number;\n}\n\nexport interface HlsProgressivePerformanceTiming extends HlsPerformanceTiming {\n  first: number;\n}\n\nexport type LoaderOnSuccess<T extends LoaderContext> = (\n  response: LoaderResponse,\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnProgress<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  data: string | ArrayBuffer,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnError<T extends LoaderContext> = (\n  error: {\n    // error status code\n    code: number;\n    // error description\n    text: string;\n  },\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnTimeout<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnAbort<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport interface LoaderCallbacks<T extends LoaderContext> {\n  onSuccess: LoaderOnSuccess<T>;\n  onError: LoaderOnError<T>;\n  onTimeout: LoaderOnTimeout<T>;\n  onAbort?: LoaderOnAbort<T>;\n  onProgress?: LoaderOnProgress<T>;\n}\n\nexport interface Loader<T extends LoaderContext> {\n  destroy(): void;\n  abort(): void;\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<T>\n  ): void;\n  /**\n   * `getCacheAge()` is called by hls.js to get the duration that a given object\n   * has been sitting in a cache proxy when playing live.  If implemented,\n   * this should return a value in seconds.\n   *\n   * For HTTP based loaders, this should return the contents of the \"age\" header.\n   *\n   * @returns time object being lodaded\n   */\n  getCacheAge?: () => number | null;\n  context: T;\n  stats: LoaderStats;\n}\n\nexport enum PlaylistContextType {\n  MANIFEST = 'manifest',\n  LEVEL = 'level',\n  AUDIO_TRACK = 'audioTrack',\n  SUBTITLE_TRACK = 'subtitleTrack',\n}\n\nexport enum PlaylistLevelType {\n  MAIN = 'main',\n  AUDIO = 'audio',\n  SUBTITLE = 'subtitle',\n}\n\nexport interface PlaylistLoaderContext extends LoaderContext {\n  loader?: Loader<PlaylistLoaderContext>;\n\n  type: PlaylistContextType;\n  // the level index to load\n  level: number | null;\n  // level or track id from LevelLoadingData / TrackLoadingData\n  id: number | null;\n  // track group id\n  groupId: string | null;\n  // internal representation of a parsed m3u8 level playlist\n  levelDetails?: LevelDetails;\n  // Blocking playlist request delivery directives (or null id none were added to playlist url\n  deliveryDirectives: HlsUrlParameters | null;\n}\n","import type { RemuxerResult } from './remuxer';\nimport type { HlsChunkPerformanceTiming } from './loader';\nimport type { SourceBufferName } from './buffer';\n\nexport interface TransmuxerResult {\n  remuxResult: RemuxerResult;\n  chunkMeta: ChunkMetadata;\n}\n\nexport class ChunkMetadata {\n  public readonly level: number;\n  public readonly sn: number;\n  public readonly part: number;\n  public readonly id: number;\n  public readonly size: number;\n  public readonly partial: boolean;\n  public readonly transmuxing: HlsChunkPerformanceTiming =\n    getNewPerformanceTiming();\n  public readonly buffering: {\n    [key in SourceBufferName]: HlsChunkPerformanceTiming;\n  } = {\n    audio: getNewPerformanceTiming(),\n    video: getNewPerformanceTiming(),\n    audiovideo: getNewPerformanceTiming(),\n  };\n\n  constructor(\n    level: number,\n    sn: number,\n    id: number,\n    size = 0,\n    part = -1,\n    partial = false\n  ) {\n    this.level = level;\n    this.sn = sn;\n    this.id = id;\n    this.size = size;\n    this.part = part;\n    this.partial = partial;\n  }\n}\n\nfunction getNewPerformanceTiming(): HlsChunkPerformanceTiming {\n  return { start: 0, executeStart: 0, executeEnd: 0, end: 0 };\n}\n","const DECIMAL_RESOLUTION_REGEX = /^(\\d+)x(\\d+)$/; // eslint-disable-line no-useless-escape\nconst ATTR_LIST_REGEX = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g; // eslint-disable-line no-useless-escape\n\n// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\nexport class AttrList {\n  [key: string]: any;\n\n  constructor(attrs: string | Record<string, any>) {\n    if (typeof attrs === 'string') {\n      attrs = AttrList.parseAttrList(attrs);\n    }\n\n    for (const attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        this[attr] = attrs[attr];\n      }\n    }\n  }\n\n  decimalInteger(attrName: string): number {\n    const intValue = parseInt(this[attrName], 10);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n\n    return intValue;\n  }\n\n  hexadecimalInteger(attrName: string) {\n    if (this[attrName]) {\n      let stringValue = (this[attrName] || '0x').slice(2);\n      stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;\n\n      const value = new Uint8Array(stringValue.length / 2);\n      for (let i = 0; i < stringValue.length / 2; i++) {\n        value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      return value;\n    } else {\n      return null;\n    }\n  }\n\n  hexadecimalIntegerAsNumber(attrName: string): number {\n    const intValue = parseInt(this[attrName], 16);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n\n    return intValue;\n  }\n\n  decimalFloatingPoint(attrName: string): number {\n    return parseFloat(this[attrName]);\n  }\n\n  optionalFloat(attrName: string, defaultValue: number): number {\n    const value = this[attrName];\n    return value ? parseFloat(value) : defaultValue;\n  }\n\n  enumeratedString(attrName: string): string | undefined {\n    return this[attrName];\n  }\n\n  bool(attrName: string): boolean {\n    return this[attrName] === 'YES';\n  }\n\n  decimalResolution(attrName: string):\n    | {\n        width: number;\n        height: number;\n      }\n    | undefined {\n    const res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);\n    if (res === null) {\n      return undefined;\n    }\n\n    return {\n      width: parseInt(res[1], 10),\n      height: parseInt(res[2], 10),\n    };\n  }\n\n  static parseAttrList(input: string): Record<string, any> {\n    let match;\n    const attrs = {};\n    const quote = '\"';\n    ATTR_LIST_REGEX.lastIndex = 0;\n    while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {\n      let value = match[2];\n\n      if (\n        value.indexOf(quote) === 0 &&\n        value.lastIndexOf(quote) === value.length - 1\n      ) {\n        value = value.slice(1, -1);\n      }\n\n      attrs[match[1]] = value;\n    }\n    return attrs;\n  }\n}\n","type BinarySearchComparison<T> = (candidate: T) => -1 | 0 | 1;\n\nconst BinarySearch = {\n  /**\n   * Searches for an item in an array which matches a certain condition.\n   * This requires the condition to only match one item in the array,\n   * and for the array to be ordered.\n   *\n   * @param {Array<T>} list The array to search.\n   * @param {BinarySearchComparison<T>} comparisonFn\n   *      Called and provided a candidate item as the first argument.\n   *      Should return:\n   *          > -1 if the item should be located at a lower index than the provided item.\n   *          > 1 if the item should be located at a higher index than the provided item.\n   *          > 0 if the item is the item you're looking for.\n   *\n   * @return {T | null} The object if it is found or null otherwise.\n   */\n  search: function <T>(\n    list: T[],\n    comparisonFn: BinarySearchComparison<T>\n  ): T | null {\n    let minIndex: number = 0;\n    let maxIndex: number = list.length - 1;\n    let currentIndex: number | null = null;\n    let currentElement: T | null = null;\n\n    while (minIndex <= maxIndex) {\n      currentIndex = ((minIndex + maxIndex) / 2) | 0;\n      currentElement = list[currentIndex];\n\n      const comparisonResult = comparisonFn(currentElement);\n      if (comparisonResult > 0) {\n        minIndex = currentIndex + 1;\n      } else if (comparisonResult < 0) {\n        maxIndex = currentIndex - 1;\n      } else {\n        return currentElement;\n      }\n    }\n\n    return null;\n  },\n};\n\nexport default BinarySearch;\n","/**\n * @module BufferHelper\n *\n * Providing methods dealing with buffer length retrieval for example.\n *\n * In general, a helper around HTML5 MediaElement TimeRanges gathered from `buffered` property.\n *\n * Also @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered\n */\n\nimport { logger } from './logger';\n\ntype BufferTimeRange = {\n  start: number;\n  end: number;\n};\n\nexport type Bufferable = {\n  buffered: TimeRanges;\n};\n\nexport type BufferInfo = {\n  len: number;\n  start: number;\n  end: number;\n  nextStart?: number;\n};\n\nconst noopBuffered: TimeRanges = {\n  length: 0,\n  start: () => 0,\n  end: () => 0,\n};\n\nexport class BufferHelper {\n  /**\n   * Return true if `media`'s buffered include `position`\n   * @param {Bufferable} media\n   * @param {number} position\n   * @returns {boolean}\n   */\n  static isBuffered(media: Bufferable, position: number): boolean {\n    try {\n      if (media) {\n        const buffered = BufferHelper.getBuffered(media);\n        for (let i = 0; i < buffered.length; i++) {\n          if (position >= buffered.start(i) && position <= buffered.end(i)) {\n            return true;\n          }\n        }\n      }\n    } catch (error) {\n      // this is to catch\n      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':\n      // This SourceBuffer has been removed from the parent media source\n    }\n    return false;\n  }\n\n  static bufferInfo(\n    media: Bufferable | null,\n    pos: number,\n    maxHoleDuration: number\n  ): BufferInfo {\n    try {\n      if (media) {\n        const vbuffered = BufferHelper.getBuffered(media);\n        const buffered: BufferTimeRange[] = [];\n        let i: number;\n        for (i = 0; i < vbuffered.length; i++) {\n          buffered.push({ start: vbuffered.start(i), end: vbuffered.end(i) });\n        }\n\n        return this.bufferedInfo(buffered, pos, maxHoleDuration);\n      }\n    } catch (error) {\n      // this is to catch\n      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':\n      // This SourceBuffer has been removed from the parent media source\n    }\n    return { len: 0, start: pos, end: pos, nextStart: undefined };\n  }\n\n  static bufferedInfo(\n    buffered: BufferTimeRange[],\n    pos: number,\n    maxHoleDuration: number\n  ): {\n    len: number;\n    start: number;\n    end: number;\n    nextStart?: number;\n  } {\n    pos = Math.max(0, pos);\n    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\n    buffered.sort(function (a, b) {\n      const diff = a.start - b.start;\n      if (diff) {\n        return diff;\n      } else {\n        return b.end - a.end;\n      }\n    });\n\n    let buffered2: BufferTimeRange[] = [];\n    if (maxHoleDuration) {\n      // there might be some small holes between buffer time range\n      // consider that holes smaller than maxHoleDuration are irrelevant and build another\n      // buffer time range representations that discards those holes\n      for (let i = 0; i < buffered.length; i++) {\n        const buf2len = buffered2.length;\n        if (buf2len) {\n          const buf2end = buffered2[buf2len - 1].end;\n          // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\n          if (buffered[i].start - buf2end < maxHoleDuration) {\n            // merge overlapping time ranges\n            // update lastRange.end only if smaller than item.end\n            // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\n            // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\n            if (buffered[i].end > buf2end) {\n              buffered2[buf2len - 1].end = buffered[i].end;\n            }\n          } else {\n            // big hole\n            buffered2.push(buffered[i]);\n          }\n        } else {\n          // first value\n          buffered2.push(buffered[i]);\n        }\n      }\n    } else {\n      buffered2 = buffered;\n    }\n\n    let bufferLen = 0;\n\n    // bufferStartNext can possibly be undefined based on the conditional logic below\n    let bufferStartNext: number | undefined;\n\n    // bufferStart and bufferEnd are buffer boundaries around current video position\n    let bufferStart: number = pos;\n    let bufferEnd: number = pos;\n    for (let i = 0; i < buffered2.length; i++) {\n      const start = buffered2[i].start;\n      const end = buffered2[i].end;\n      // logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\n      if (pos + maxHoleDuration >= start && pos < end) {\n        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\n        bufferStart = start;\n        bufferEnd = end;\n        bufferLen = bufferEnd - pos;\n      } else if (pos + maxHoleDuration < start) {\n        bufferStartNext = start;\n        break;\n      }\n    }\n    return {\n      len: bufferLen,\n      start: bufferStart || 0,\n      end: bufferEnd || 0,\n      nextStart: bufferStartNext,\n    };\n  }\n\n  /**\n   * Safe method to get buffered property.\n   * SourceBuffer.buffered may throw if SourceBuffer is removed from it's MediaSource\n   */\n  static getBuffered(media: Bufferable): TimeRanges {\n    try {\n      return media.buffered;\n    } catch (e) {\n      logger.log('failed to get media.buffered', e);\n      return noopBuffered;\n    }\n  }\n}\n","// from http://mp4ra.org/codecs.html\nconst sampleEntryCodesISO = {\n  audio: {\n    a3ds: true,\n    'ac-3': true,\n    'ac-4': true,\n    alac: true,\n    alaw: true,\n    dra1: true,\n    'dts+': true,\n    'dts-': true,\n    dtsc: true,\n    dtse: true,\n    dtsh: true,\n    'ec-3': true,\n    enca: true,\n    g719: true,\n    g726: true,\n    m4ae: true,\n    mha1: true,\n    mha2: true,\n    mhm1: true,\n    mhm2: true,\n    mlpa: true,\n    mp4a: true,\n    'raw ': true,\n    Opus: true,\n    opus: true, // browsers expect this to be lowercase despite MP4RA says 'Opus'\n    samr: true,\n    sawb: true,\n    sawp: true,\n    sevc: true,\n    sqcp: true,\n    ssmv: true,\n    twos: true,\n    ulaw: true,\n  },\n  video: {\n    avc1: true,\n    avc2: true,\n    avc3: true,\n    avc4: true,\n    avcp: true,\n    av01: true,\n    drac: true,\n    dva1: true,\n    dvav: true,\n    dvh1: true,\n    dvhe: true,\n    encv: true,\n    hev1: true,\n    hvc1: true,\n    mjp2: true,\n    mp4v: true,\n    mvc1: true,\n    mvc2: true,\n    mvc3: true,\n    mvc4: true,\n    resv: true,\n    rv60: true,\n    s263: true,\n    svc1: true,\n    svc2: true,\n    'vc-1': true,\n    vp08: true,\n    vp09: true,\n  },\n  text: {\n    stpp: true,\n    wvtt: true,\n  },\n};\n\nexport type CodecType = 'audio' | 'video';\n\nexport function isCodecType(codec: string, type: CodecType): boolean {\n  const typeCodes = sampleEntryCodesISO[type];\n  return !!typeCodes && typeCodes[codec.slice(0, 4)] === true;\n}\n\nexport function isCodecSupportedInMp4(codec: string, type: CodecType): boolean {\n  return MediaSource.isTypeSupported(\n    `${type || 'video'}/mp4;codecs=\"${codec}\"`\n  );\n}\n","import { logger } from './logger';\nimport { adjustSliding } from '../controller/level-helper';\n\nimport type { Fragment } from '../loader/fragment';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { Level } from '../types/level';\nimport type { RequiredProperties } from '../types/general';\n\nexport function findFirstFragWithCC(fragments: Fragment[], cc: number) {\n  let firstFrag: Fragment | null = null;\n\n  for (let i = 0, len = fragments.length; i < len; i++) {\n    const currentFrag = fragments[i];\n    if (currentFrag && currentFrag.cc === cc) {\n      firstFrag = currentFrag;\n      break;\n    }\n  }\n\n  return firstFrag;\n}\n\nexport function shouldAlignOnDiscontinuities(\n  lastFrag: Fragment | null,\n  lastLevel: Level,\n  details: LevelDetails\n): lastLevel is RequiredProperties<Level, 'details'> {\n  if (lastLevel.details) {\n    if (\n      details.endCC > details.startCC ||\n      (lastFrag && lastFrag.cc < details.startCC)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Find the first frag in the previous level which matches the CC of the first frag of the new level\nexport function findDiscontinuousReferenceFrag(\n  prevDetails: LevelDetails,\n  curDetails: LevelDetails,\n  referenceIndex: number = 0\n) {\n  const prevFrags = prevDetails.fragments;\n  const curFrags = curDetails.fragments;\n\n  if (!curFrags.length || !prevFrags.length) {\n    logger.log('No fragments to align');\n    return;\n  }\n\n  const prevStartFrag = findFirstFragWithCC(prevFrags, curFrags[0].cc);\n\n  if (!prevStartFrag || (prevStartFrag && !prevStartFrag.startPTS)) {\n    logger.log('No frag in previous level to align on');\n    return;\n  }\n\n  return prevStartFrag;\n}\n\nfunction adjustFragmentStart(frag: Fragment, sliding: number) {\n  if (frag) {\n    const start = frag.start + sliding;\n    frag.start = frag.startPTS = start;\n    frag.endPTS = start + frag.duration;\n  }\n}\n\nexport function adjustSlidingStart(sliding: number, details: LevelDetails) {\n  // Update segments\n  const fragments = details.fragments;\n  for (let i = 0, len = fragments.length; i < len; i++) {\n    adjustFragmentStart(fragments[i], sliding);\n  }\n  // Update LL-HLS parts at the end of the playlist\n  if (details.fragmentHint) {\n    adjustFragmentStart(details.fragmentHint, sliding);\n  }\n  details.alignedSliding = true;\n}\n\n/**\n * Using the parameters of the last level, this function computes PTS' of the new fragments so that they form a\n * contiguous stream with the last fragments.\n * The PTS of a fragment lets Hls.js know where it fits into a stream - by knowing every PTS, we know which fragment to\n * download at any given time. PTS is normally computed when the fragment is demuxed, so taking this step saves us time\n * and an extra download.\n * @param lastFrag\n * @param lastLevel\n * @param details\n */\nexport function alignStream(\n  lastFrag: Fragment | null,\n  lastLevel: Level | null,\n  details: LevelDetails\n) {\n  if (!lastLevel) {\n    return;\n  }\n  alignDiscontinuities(lastFrag, details, lastLevel);\n  if (!details.alignedSliding && lastLevel.details) {\n    // If the PTS wasn't figured out via discontinuity sequence that means there was no CC increase within the level.\n    // Aligning via Program Date Time should therefore be reliable, since PDT should be the same within the same\n    // discontinuity sequence.\n    alignPDT(details, lastLevel.details);\n  }\n  if (\n    !details.alignedSliding &&\n    lastLevel.details &&\n    !details.skippedSegments\n  ) {\n    // Try to align on sn so that we pick a better start fragment.\n    // Do not perform this on playlists with delta updates as this is only to align levels on switch\n    // and adjustSliding only adjusts fragments after skippedSegments.\n    adjustSliding(lastLevel.details, details);\n  }\n}\n\n/**\n * Computes the PTS if a new level's fragments using the PTS of a fragment in the last level which shares the same\n * discontinuity sequence.\n * @param lastFrag - The last Fragment which shares the same discontinuity sequence\n * @param lastLevel - The details of the last loaded level\n * @param details - The details of the new level\n */\nfunction alignDiscontinuities(\n  lastFrag: Fragment | null,\n  details: LevelDetails,\n  lastLevel: Level\n) {\n  if (shouldAlignOnDiscontinuities(lastFrag, lastLevel, details)) {\n    const referenceFrag = findDiscontinuousReferenceFrag(\n      lastLevel.details,\n      details\n    );\n    if (referenceFrag && Number.isFinite(referenceFrag.start)) {\n      logger.log(\n        `Adjusting PTS using last level due to CC increase within current level ${details.url}`\n      );\n      adjustSlidingStart(referenceFrag.start, details);\n    }\n  }\n}\n\n/**\n * Computes the PTS of a new level's fragments using the difference in Program Date Time from the last level.\n * @param details - The details of the new level\n * @param lastDetails - The details of the last loaded level\n */\nexport function alignPDT(details: LevelDetails, lastDetails: LevelDetails) {\n  // This check protects the unsafe \"!\" usage below for null program date time access.\n  if (\n    !lastDetails.fragments.length ||\n    !details.hasProgramDateTime ||\n    !lastDetails.hasProgramDateTime\n  ) {\n    return;\n  }\n  // if last level sliding is 1000 and its first frag PROGRAM-DATE-TIME is 2017-08-20 1:10:00 AM\n  // and if new details first frag PROGRAM DATE-TIME is 2017-08-20 1:10:08 AM\n  // then we can deduce that playlist B sliding is 1000+8 = 1008s\n  const lastPDT = lastDetails.fragments[0].programDateTime!; // hasProgramDateTime check above makes this safe.\n  const newPDT = details.fragments[0].programDateTime!;\n  // date diff is in ms. frag.start is in seconds\n  const sliding = (newPDT - lastPDT) / 1000 + lastDetails.fragments[0].start;\n  if (sliding && Number.isFinite(sliding)) {\n    logger.log(\n      `Adjusting PTS using programDateTime delta ${\n        newPDT - lastPDT\n      }ms, sliding:${sliding.toFixed(3)} ${details.url} `\n    );\n    adjustSlidingStart(sliding, details);\n  }\n}\n\n/**\n * Ensures appropriate time-alignment between renditions based on PDT. Unlike `alignPDT`, which adjusts\n * the timeline based on the delta between PDTs of the 0th fragment of two playlists/`LevelDetails`,\n * this function assumes the timelines represented in `refDetails` are accurate, including the PDTs,\n * and uses the \"wallclock\"/PDT timeline as a cross-reference to `details`, adjusting the presentation\n * times/timelines of `details` accordingly.\n * Given the asynchronous nature of fetches and initial loads of live `main` and audio/subtitle tracks,\n * the primary purpose of this function is to ensure the \"local timelines\" of audio/subtitle tracks\n * are aligned to the main/video timeline, using PDT as the cross-reference/\"anchor\" that should\n * be consistent across playlists, per the HLS spec.\n * @param details - The details of the rendition you'd like to time-align (e.g. an audio rendition).\n * @param refDetails - The details of the reference rendition with start and PDT times for alignment.\n */\nexport function alignMediaPlaylistByPDT(\n  details: LevelDetails,\n  refDetails: LevelDetails\n) {\n  if (!details.hasProgramDateTime || !refDetails.hasProgramDateTime) {\n    return;\n  }\n\n  const fragments = details.fragments;\n  const refFragments = refDetails.fragments;\n  if (!fragments.length || !refFragments.length) {\n    return;\n  }\n\n  // Calculate a delta to apply to all fragments according to the delta in PDT times and start times\n  // of a fragment in the reference details, and a fragment in the target details of the same discontinuity.\n  // If a fragment of the same discontinuity was not found use the middle fragment of both.\n  const middleFrag = Math.round(refFragments.length / 2) - 1;\n  const refFrag = refFragments[middleFrag];\n  const frag =\n    findFirstFragWithCC(fragments, refFrag.cc) ||\n    fragments[Math.round(fragments.length / 2) - 1];\n\n  const refPDT = refFrag.programDateTime;\n  const targetPDT = frag.programDateTime;\n  if (refPDT === null || targetPDT === null) {\n    return;\n  }\n\n  const delta = (targetPDT - refPDT) / 1000 - (frag.start - refFrag.start);\n  adjustSlidingStart(delta, details);\n}\n","/*\n * EWMA Bandwidth Estimator\n *  - heavily inspired from shaka-player\n * Tracks bandwidth samples and estimates available bandwidth.\n * Based on the minimum of two exponentially-weighted moving averages with\n * different half-lives.\n */\n\nimport EWMA from '../utils/ewma';\n\nclass EwmaBandWidthEstimator {\n  private defaultEstimate_: number;\n  private minWeight_: number;\n  private minDelayMs_: number;\n  private slow_: EWMA;\n  private fast_: EWMA;\n\n  constructor(slow: number, fast: number, defaultEstimate: number) {\n    this.defaultEstimate_ = defaultEstimate;\n    this.minWeight_ = 0.001;\n    this.minDelayMs_ = 50;\n    this.slow_ = new EWMA(slow);\n    this.fast_ = new EWMA(fast);\n  }\n\n  update(slow: number, fast: number) {\n    const { slow_, fast_ } = this;\n    if (this.slow_.halfLife !== slow) {\n      this.slow_ = new EWMA(slow, slow_.getEstimate(), slow_.getTotalWeight());\n    }\n    if (this.fast_.halfLife !== fast) {\n      this.fast_ = new EWMA(fast, fast_.getEstimate(), fast_.getTotalWeight());\n    }\n  }\n\n  sample(durationMs: number, numBytes: number) {\n    durationMs = Math.max(durationMs, this.minDelayMs_);\n    const numBits = 8 * numBytes;\n    // weight is duration in seconds\n    const durationS = durationMs / 1000;\n    // value is bandwidth in bits/s\n    const bandwidthInBps = numBits / durationS;\n    this.fast_.sample(durationS, bandwidthInBps);\n    this.slow_.sample(durationS, bandwidthInBps);\n  }\n\n  canEstimate(): boolean {\n    const fast = this.fast_;\n    return fast && fast.getTotalWeight() >= this.minWeight_;\n  }\n\n  getEstimate(): number {\n    if (this.canEstimate()) {\n      // console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));\n      // console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));\n      // Take the minimum of these two estimates.  This should have the effect of\n      // adapting down quickly, but up more slowly.\n      return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n    } else {\n      return this.defaultEstimate_;\n    }\n  }\n\n  destroy() {}\n}\nexport default EwmaBandWidthEstimator;\n","/*\n * compute an Exponential Weighted moving average\n * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n *  - heavily inspired from shaka-player\n */\n\nclass EWMA {\n  public readonly halfLife: number;\n  private alpha_: number;\n  private estimate_: number;\n  private totalWeight_: number;\n\n  //  About half of the estimated value will be from the last |halfLife| samples by weight.\n  constructor(halfLife: number, estimate: number = 0, weight: number = 0) {\n    this.halfLife = halfLife;\n    // Larger values of alpha expire historical data more slowly.\n    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;\n    this.estimate_ = estimate;\n    this.totalWeight_ = weight;\n  }\n\n  sample(weight: number, value: number) {\n    const adjAlpha = Math.pow(this.alpha_, weight);\n    this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n    this.totalWeight_ += weight;\n  }\n\n  getTotalWeight(): number {\n    return this.totalWeight_;\n  }\n\n  getEstimate(): number {\n    if (this.alpha_) {\n      const zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n      if (zeroFactor) {\n        return this.estimate_ / zeroFactor;\n      }\n    }\n    return this.estimate_;\n  }\n}\n\nexport default EWMA;\n","import {\n  LoaderCallbacks,\n  LoaderContext,\n  Loader,\n  LoaderStats,\n  LoaderConfiguration,\n  LoaderOnProgress,\n} from '../types/loader';\nimport { LoadStats } from '../loader/load-stats';\nimport ChunkCache from '../demux/chunk-cache';\n\nexport function fetchSupported() {\n  if (\n    // @ts-ignore\n    self.fetch &&\n    self.AbortController &&\n    self.ReadableStream &&\n    self.Request\n  ) {\n    try {\n      new self.ReadableStream({}); // eslint-disable-line no-new\n      return true;\n    } catch (e) {\n      /* noop */\n    }\n  }\n  return false;\n}\n\nclass FetchLoader implements Loader<LoaderContext> {\n  private fetchSetup: Function;\n  private requestTimeout?: number;\n  private request!: Request;\n  private response!: Response;\n  private controller: AbortController;\n  public context!: LoaderContext;\n  private config: LoaderConfiguration | null = null;\n  private callbacks: LoaderCallbacks<LoaderContext> | null = null;\n  public stats: LoaderStats;\n  private loader: Response | null = null;\n\n  constructor(config /* HlsConfig */) {\n    this.fetchSetup = config.fetchSetup || getRequest;\n    this.controller = new self.AbortController();\n    this.stats = new LoadStats();\n  }\n\n  destroy(): void {\n    this.loader = this.callbacks = null;\n    this.abortInternal();\n  }\n\n  abortInternal(): void {\n    const response = this.response;\n    if (!response || !response.ok) {\n      this.stats.aborted = true;\n      this.controller.abort();\n    }\n  }\n\n  abort(): void {\n    this.abortInternal();\n    if (this.callbacks?.onAbort) {\n      this.callbacks.onAbort(this.stats, this.context, this.response);\n    }\n  }\n\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<LoaderContext>\n  ): void {\n    const stats = this.stats;\n    if (stats.loading.start) {\n      throw new Error('Loader can only be used once.');\n    }\n    stats.loading.start = self.performance.now();\n\n    const initParams = getRequestParameters(context, this.controller.signal);\n    const onProgress: LoaderOnProgress<LoaderContext> | undefined =\n      callbacks.onProgress;\n    const isArrayBuffer = context.responseType === 'arraybuffer';\n    const LENGTH = isArrayBuffer ? 'byteLength' : 'length';\n\n    this.context = context;\n    this.config = config;\n    this.callbacks = callbacks;\n    this.request = this.fetchSetup(context, initParams);\n    self.clearTimeout(this.requestTimeout);\n    this.requestTimeout = self.setTimeout(() => {\n      this.abortInternal();\n      callbacks.onTimeout(stats, context, this.response);\n    }, config.timeout);\n\n    self\n      .fetch(this.request)\n      .then((response: Response): Promise<string | ArrayBuffer> => {\n        this.response = this.loader = response;\n\n        if (!response.ok) {\n          const { status, statusText } = response;\n          throw new FetchError(\n            statusText || 'fetch, bad network response',\n            status,\n            response\n          );\n        }\n        stats.loading.first = Math.max(\n          self.performance.now(),\n          stats.loading.start\n        );\n        stats.total = parseInt(response.headers.get('Content-Length') || '0');\n\n        if (onProgress && Number.isFinite(config.highWaterMark)) {\n          return this.loadProgressively(\n            response,\n            stats,\n            context,\n            config.highWaterMark,\n            onProgress\n          );\n        }\n\n        if (isArrayBuffer) {\n          return response.arrayBuffer();\n        }\n        return response.text();\n      })\n      .then((responseData: string | ArrayBuffer) => {\n        const { response } = this;\n        self.clearTimeout(this.requestTimeout);\n        stats.loading.end = Math.max(\n          self.performance.now(),\n          stats.loading.first\n        );\n        const total = responseData[LENGTH];\n        if (total) {\n          stats.loaded = stats.total = total;\n        }\n\n        const loaderResponse = {\n          url: response.url,\n          data: responseData,\n        };\n\n        if (onProgress && !Number.isFinite(config.highWaterMark)) {\n          onProgress(stats, context, responseData, response);\n        }\n\n        callbacks.onSuccess(loaderResponse, stats, context, response);\n      })\n      .catch((error) => {\n        self.clearTimeout(this.requestTimeout);\n        if (stats.aborted) {\n          return;\n        }\n        // CORS errors result in an undefined code. Set it to 0 here to align with XHR's behavior\n        // when destroying, 'error' itself can be undefined\n        const code: number = !error ? 0 : error.code || 0;\n        const text: string = !error ? null : error.message;\n        callbacks.onError(\n          { code, text },\n          context,\n          error ? error.details : null\n        );\n      });\n  }\n\n  getCacheAge(): number | null {\n    let result: number | null = null;\n    if (this.response) {\n      const ageHeader = this.response.headers.get('age');\n      result = ageHeader ? parseFloat(ageHeader) : null;\n    }\n    return result;\n  }\n\n  private loadProgressively(\n    response: Response,\n    stats: LoaderStats,\n    context: LoaderContext,\n    highWaterMark: number = 0,\n    onProgress: LoaderOnProgress<LoaderContext>\n  ): Promise<ArrayBuffer> {\n    const chunkCache = new ChunkCache();\n    const reader = (response.body as ReadableStream).getReader();\n\n    const pump = (): Promise<ArrayBuffer> => {\n      return reader\n        .read()\n        .then((data) => {\n          if (data.done) {\n            if (chunkCache.dataLength) {\n              onProgress(stats, context, chunkCache.flush(), response);\n            }\n\n            return Promise.resolve(new ArrayBuffer(0));\n          }\n          const chunk: Uint8Array = data.value;\n          const len = chunk.length;\n          stats.loaded += len;\n          if (len < highWaterMark || chunkCache.dataLength) {\n            // The current chunk is too small to to be emitted or the cache already has data\n            // Push it to the cache\n            chunkCache.push(chunk);\n            if (chunkCache.dataLength >= highWaterMark) {\n              // flush in order to join the typed arrays\n              onProgress(stats, context, chunkCache.flush(), response);\n            }\n          } else {\n            // If there's nothing cached already, and the chache is large enough\n            // just emit the progress event\n            onProgress(stats, context, chunk, response);\n          }\n          return pump();\n        })\n        .catch(() => {\n          /* aborted */\n          return Promise.reject();\n        });\n    };\n\n    return pump();\n  }\n}\n\nfunction getRequestParameters(context: LoaderContext, signal): any {\n  const initParams: any = {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'same-origin',\n    signal,\n    headers: new self.Headers(Object.assign({}, context.headers)),\n  };\n\n  if (context.rangeEnd) {\n    initParams.headers.set(\n      'Range',\n      'bytes=' + context.rangeStart + '-' + String(context.rangeEnd - 1)\n    );\n  }\n\n  return initParams;\n}\n\nfunction getRequest(context: LoaderContext, initParams: any): Request {\n  return new self.Request(context.url, initParams);\n}\n\nclass FetchError extends Error {\n  public code: number;\n  public details: any;\n  constructor(message: string, code: number, details: any) {\n    super(message);\n    this.code = code;\n    this.details = details;\n  }\n}\n\nexport default FetchLoader;\n","/**\n *  hex dump helper class\n */\n\nconst Hex = {\n  hexDump: function (array: Uint8Array) {\n    let str = '';\n    for (let i = 0; i < array.length; i++) {\n      let h = array[i].toString(16);\n      if (h.length < 2) {\n        h = '0' + h;\n      }\n\n      str += h;\n    }\n    return str;\n  },\n};\n\nexport default Hex;\n","import { base64Decode } from './numeric-encoding-utils';\n\nfunction getKeyIdBytes(str: string): Uint8Array {\n  const keyIdbytes = strToUtf8array(str).subarray(0, 16);\n  const paddedkeyIdbytes = new Uint8Array(16);\n  paddedkeyIdbytes.set(keyIdbytes, 16 - keyIdbytes.length);\n  return paddedkeyIdbytes;\n}\n\nexport function changeEndianness(keyId: Uint8Array) {\n  const swap = function (array: Uint8Array, from: number, to: number) {\n    const cur = array[from];\n    array[from] = array[to];\n    array[to] = cur;\n  };\n\n  swap(keyId, 0, 3);\n  swap(keyId, 1, 2);\n  swap(keyId, 4, 5);\n  swap(keyId, 6, 7);\n}\n\nexport function convertDataUriToArrayBytes(uri: string): Uint8Array | null {\n  // data:[<media type][;attribute=value][;base64],<data>\n  const colonsplit = uri.split(':');\n  let keydata: Uint8Array | null = null;\n  if (colonsplit[0] === 'data' && colonsplit.length === 2) {\n    const semicolonsplit = colonsplit[1].split(';');\n    const commasplit = semicolonsplit[semicolonsplit.length - 1].split(',');\n    if (commasplit.length === 2) {\n      const isbase64 = commasplit[0] === 'base64';\n      const data = commasplit[1];\n      if (isbase64) {\n        semicolonsplit.splice(-1, 1); // remove from processing\n        keydata = base64Decode(data);\n      } else {\n        keydata = getKeyIdBytes(data);\n      }\n    }\n  }\n  return keydata;\n}\n\nexport function strToUtf8array(str: string): Uint8Array {\n  return Uint8Array.from(unescape(encodeURIComponent(str)), (c) =>\n    c.charCodeAt(0)\n  );\n}\n","export interface ILogFunction {\n  (message?: any, ...optionalParams: any[]): void;\n}\n\nexport interface ILogger {\n  trace: ILogFunction;\n  debug: ILogFunction;\n  log: ILogFunction;\n  warn: ILogFunction;\n  info: ILogFunction;\n  error: ILogFunction;\n}\n\nconst noop: ILogFunction = function () {};\n\nconst fakeLogger: ILogger = {\n  trace: noop,\n  debug: noop,\n  log: noop,\n  warn: noop,\n  info: noop,\n  error: noop,\n};\n\nlet exportedLogger: ILogger = fakeLogger;\n\n// let lastCallTime;\n// function formatMsgWithTimeInfo(type, msg) {\n//   const now = Date.now();\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n//   lastCallTime = now;\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n//   return msg;\n// }\n\nfunction consolePrintFn(type: string): ILogFunction {\n  const func: ILogFunction = self.console[type];\n  if (func) {\n    return func.bind(self.console, `[${type}] >`);\n  }\n  return noop;\n}\n\nfunction exportLoggerFunctions(\n  debugConfig: boolean | ILogger,\n  ...functions: string[]\n): void {\n  functions.forEach(function (type) {\n    exportedLogger[type] = debugConfig[type]\n      ? debugConfig[type].bind(debugConfig)\n      : consolePrintFn(type);\n  });\n}\n\nexport function enableLogs(debugConfig: boolean | ILogger, id: string): void {\n  // check that console is available\n  if (\n    (self.console && debugConfig === true) ||\n    typeof debugConfig === 'object'\n  ) {\n    exportLoggerFunctions(\n      debugConfig,\n      // Remove out from list here to hard-disable a log-level\n      // 'trace',\n      'debug',\n      'log',\n      'info',\n      'warn',\n      'error'\n    );\n    // Some browsers don't allow to use bind on console object anyway\n    // fallback to default if needed\n    try {\n      exportedLogger.log(`Debug logs enabled for \"${id}\"`);\n    } catch (e) {\n      exportedLogger = fakeLogger;\n    }\n  } else {\n    exportedLogger = fakeLogger;\n  }\n}\n\nexport const logger: ILogger = exportedLogger;\n","import type { DRMSystemOptions, EMEControllerConfig } from '../config';\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess\n */\nexport enum KeySystems {\n  CLEARKEY = 'org.w3.clearkey',\n  FAIRPLAY = 'com.apple.fps',\n  PLAYREADY = 'com.microsoft.playready',\n  WIDEVINE = 'com.widevine.alpha',\n}\n\n// Playlist #EXT-X-KEY KEYFORMAT values\nexport enum KeySystemFormats {\n  CLEARKEY = 'org.w3.clearkey',\n  FAIRPLAY = 'com.apple.streamingkeydelivery',\n  PLAYREADY = 'com.microsoft.playready',\n  WIDEVINE = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n}\n\nexport function keySystemFormatToKeySystemDomain(\n  format: KeySystemFormats\n): KeySystems | undefined {\n  switch (format) {\n    case KeySystemFormats.FAIRPLAY:\n      return KeySystems.FAIRPLAY;\n    case KeySystemFormats.PLAYREADY:\n      return KeySystems.PLAYREADY;\n    case KeySystemFormats.WIDEVINE:\n      return KeySystems.WIDEVINE;\n    case KeySystemFormats.CLEARKEY:\n      return KeySystems.CLEARKEY;\n  }\n}\n\n// System IDs for which we can extract a key ID from \"encrypted\" event PSSH\nexport enum KeySystemIds {\n  // CENC = '1077efecc0b24d02ace33c1e52e2fb4b'\n  // CLEARKEY = 'e2719d58a985b3c9781ab030af78d30e',\n  // FAIRPLAY = '94ce86fb07ff4f43adb893d2fa968ca2',\n  // PLAYREADY = '9a04f07998404286ab92e65be0885f95',\n  WIDEVINE = 'edef8ba979d64acea3c827dcd51d21ed',\n}\n\nexport function keySystemIdToKeySystemDomain(\n  systemId: KeySystemIds\n): KeySystems | undefined {\n  if (systemId === KeySystemIds.WIDEVINE) {\n    return KeySystems.WIDEVINE;\n    // } else if (systemId === KeySystemIds.PLAYREADY) {\n    //   return KeySystems.PLAYREADY;\n    // } else if (systemId === KeySystemIds.CENC || systemId === KeySystemIds.CLEARKEY) {\n    //   return KeySystems.CLEARKEY;\n  }\n}\n\nexport function keySystemDomainToKeySystemFormat(\n  keySystem: KeySystems\n): KeySystemFormats | undefined {\n  switch (keySystem) {\n    case KeySystems.FAIRPLAY:\n      return KeySystemFormats.FAIRPLAY;\n    case KeySystems.PLAYREADY:\n      return KeySystemFormats.PLAYREADY;\n    case KeySystems.WIDEVINE:\n      return KeySystemFormats.WIDEVINE;\n    case KeySystems.CLEARKEY:\n      return KeySystemFormats.CLEARKEY;\n  }\n}\n\nexport function getKeySystemsForConfig(\n  config: EMEControllerConfig\n): KeySystems[] {\n  const { drmSystems, widevineLicenseUrl } = config;\n  const keySystemsToAttempt: KeySystems[] = drmSystems\n    ? [\n        KeySystems.FAIRPLAY,\n        KeySystems.WIDEVINE,\n        KeySystems.PLAYREADY,\n        KeySystems.CLEARKEY,\n      ].filter((keySystem) => !!drmSystems[keySystem])\n    : [];\n  if (!keySystemsToAttempt[KeySystems.WIDEVINE] && widevineLicenseUrl) {\n    keySystemsToAttempt.push(KeySystems.WIDEVINE);\n  }\n  return keySystemsToAttempt;\n}\n\nexport type MediaKeyFunc = (\n  keySystem: KeySystems,\n  supportedConfigurations: MediaKeySystemConfiguration[]\n) => Promise<MediaKeySystemAccess>;\n\nexport const requestMediaKeySystemAccess = (function (): MediaKeyFunc | null {\n  if (\n    typeof self !== 'undefined' &&\n    self.navigator &&\n    self.navigator.requestMediaKeySystemAccess\n  ) {\n    return self.navigator.requestMediaKeySystemAccess.bind(self.navigator);\n  } else {\n    return null;\n  }\n})();\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration\n */\nexport function getSupportedMediaKeySystemConfigurations(\n  keySystem: KeySystems,\n  audioCodecs: string[],\n  videoCodecs: string[],\n  drmSystemOptions: DRMSystemOptions\n): MediaKeySystemConfiguration[] {\n  let initDataTypes: string[];\n  switch (keySystem) {\n    case KeySystems.FAIRPLAY:\n      initDataTypes = ['cenc', 'sinf'];\n      break;\n    case KeySystems.WIDEVINE:\n    case KeySystems.PLAYREADY:\n      initDataTypes = ['cenc'];\n      break;\n    case KeySystems.CLEARKEY:\n      initDataTypes = ['cenc', 'keyids'];\n      break;\n    default:\n      throw new Error(`Unknown key-system: ${keySystem}`);\n  }\n  return createMediaKeySystemConfigurations(\n    initDataTypes,\n    audioCodecs,\n    videoCodecs,\n    drmSystemOptions\n  );\n}\n\nfunction createMediaKeySystemConfigurations(\n  initDataTypes: string[],\n  audioCodecs: string[],\n  videoCodecs: string[],\n  drmSystemOptions: DRMSystemOptions\n): MediaKeySystemConfiguration[] {\n  const baseConfig: MediaKeySystemConfiguration = {\n    initDataTypes: initDataTypes,\n    persistentState: drmSystemOptions.persistentState || 'not-allowed',\n    distinctiveIdentifier:\n      drmSystemOptions.distinctiveIdentifier || 'not-allowed',\n    sessionTypes: drmSystemOptions.sessionTypes || [\n      drmSystemOptions.sessionType || 'temporary',\n    ],\n    audioCapabilities: audioCodecs.map((codec) => ({\n      contentType: `audio/mp4; codecs=\"${codec}\"`,\n      robustness: drmSystemOptions.audioRobustness || '',\n      encryptionScheme: drmSystemOptions.audioEncryptionScheme || null,\n    })),\n    videoCapabilities: videoCodecs.map((codec) => ({\n      contentType: `video/mp4; codecs=\"${codec}\"`,\n      robustness: drmSystemOptions.videoRobustness || '',\n      encryptionScheme: drmSystemOptions.videoEncryptionScheme || null,\n    })),\n  };\n\n  return [baseConfig];\n}\n","/**\n * MediaSource helper\n */\n\nexport function getMediaSource(): typeof MediaSource | undefined {\n  return self.MediaSource || ((self as any).WebKitMediaSource as MediaSource);\n}\n","import { ElementaryStreamTypes } from '../loader/fragment';\nimport { sliceUint8 } from './typed-array';\nimport { utf8ArrayToStr } from '../demux/id3';\nimport { logger } from '../utils/logger';\nimport Hex from './hex';\nimport type { PassthroughTrack, UserdataSample } from '../types/demuxer';\nimport type { DecryptData } from '../loader/level-key';\n\nconst UINT32_MAX = Math.pow(2, 32) - 1;\nconst push = [].push;\n\n// We are using fixed track IDs for driving the MP4 remuxer\n// instead of following the TS PIDs.\n// There is no reason not to do this and some browsers/SourceBuffer-demuxers\n// may not like if there are TrackID \"switches\"\n// See https://github.com/video-dev/hls.js/issues/1331\n// Here we are mapping our internal track types to constant MP4 track IDs\n// With MSE currently one can only have one track of each, and we are muxing\n// whatever video/audio rendition in them.\nexport const RemuxerTrackIdConfig = {\n  video: 1,\n  audio: 2,\n  id3: 3,\n  text: 4,\n};\n\nexport function bin2str(data: Uint8Array): string {\n  return String.fromCharCode.apply(null, data);\n}\n\nexport function readUint16(buffer: Uint8Array, offset: number): number {\n  const val = (buffer[offset] << 8) | buffer[offset + 1];\n  return val < 0 ? 65536 + val : val;\n}\n\nexport function readUint32(buffer: Uint8Array, offset: number): number {\n  const val = readSint32(buffer, offset);\n  return val < 0 ? 4294967296 + val : val;\n}\n\nexport function readSint32(buffer: Uint8Array, offset: number): number {\n  return (\n    (buffer[offset] << 24) |\n    (buffer[offset + 1] << 16) |\n    (buffer[offset + 2] << 8) |\n    buffer[offset + 3]\n  );\n}\n\nexport function writeUint32(buffer: Uint8Array, offset: number, value: number) {\n  buffer[offset] = value >> 24;\n  buffer[offset + 1] = (value >> 16) & 0xff;\n  buffer[offset + 2] = (value >> 8) & 0xff;\n  buffer[offset + 3] = value & 0xff;\n}\n\n// Find the data for a box specified by its path\nexport function findBox(data: Uint8Array, path: string[]): Uint8Array[] {\n  const results = [] as Uint8Array[];\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n  const end = data.byteLength;\n\n  for (let i = 0; i < end; ) {\n    const size = readUint32(data, i);\n    const type = bin2str(data.subarray(i + 4, i + 8));\n    const endbox = size > 1 ? i + size : end;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, endbox));\n      } else {\n        // recursively search for the next box along the path\n        const subresults = findBox(data.subarray(i + 8, endbox), path.slice(1));\n        if (subresults.length) {\n          push.apply(results, subresults);\n        }\n      }\n    }\n    i = endbox;\n  }\n\n  // we've finished searching all of data\n  return results;\n}\n\ntype SidxInfo = {\n  earliestPresentationTime: number;\n  timescale: number;\n  version: number;\n  referencesCount: number;\n  references: any[];\n};\n\nexport function parseSegmentIndex(sidx: Uint8Array): SidxInfo | null {\n  const references: any[] = [];\n\n  const version = sidx[0];\n\n  // set initial offset, we skip the reference ID (not needed)\n  let index = 8;\n\n  const timescale = readUint32(sidx, index);\n  index += 4;\n\n  // TODO: parse earliestPresentationTime and firstOffset\n  // usually zero in our case\n  const earliestPresentationTime = 0;\n  const firstOffset = 0;\n\n  if (version === 0) {\n    index += 8;\n  } else {\n    index += 16;\n  }\n\n  // skip reserved\n  index += 2;\n\n  let startByte = sidx.length + firstOffset;\n\n  const referencesCount = readUint16(sidx, index);\n  index += 2;\n\n  for (let i = 0; i < referencesCount; i++) {\n    let referenceIndex = index;\n\n    const referenceInfo = readUint32(sidx, referenceIndex);\n    referenceIndex += 4;\n\n    const referenceSize = referenceInfo & 0x7fffffff;\n    const referenceType = (referenceInfo & 0x80000000) >>> 31;\n\n    if (referenceType === 1) {\n      // eslint-disable-next-line no-console\n      console.warn('SIDX has hierarchical references (not supported)');\n      return null;\n    }\n\n    const subsegmentDuration = readUint32(sidx, referenceIndex);\n    referenceIndex += 4;\n\n    references.push({\n      referenceSize,\n      subsegmentDuration, // unscaled\n      info: {\n        duration: subsegmentDuration / timescale,\n        start: startByte,\n        end: startByte + referenceSize - 1,\n      },\n    });\n\n    startByte += referenceSize;\n\n    // Skipping 1 bit for |startsWithSap|, 3 bits for |sapType|, and 28 bits\n    // for |sapDelta|.\n    referenceIndex += 4;\n\n    // skip to next ref\n    index = referenceIndex;\n  }\n\n  return {\n    earliestPresentationTime,\n    timescale,\n    version,\n    referencesCount,\n    references,\n  };\n}\n\n/**\n * Parses an MP4 initialization segment and extracts stream type and\n * timescale values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * moov > trak > mdia > hdlr\n * ```\n * @param initSegment {Uint8Array} the bytes of the init segment\n * @return {InitData} a hash of track type to timescale values or null if\n * the init segment is malformed.\n */\n\nexport interface InitDataTrack {\n  timescale: number;\n  id: number;\n  codec: string;\n}\n\ntype HdlrType = ElementaryStreamTypes.AUDIO | ElementaryStreamTypes.VIDEO;\n\nexport interface InitData extends Array<any> {\n  [index: number]:\n    | {\n        timescale: number;\n        type: HdlrType;\n        default?: {\n          duration: number;\n          flags: number;\n        };\n      }\n    | undefined;\n  audio?: InitDataTrack;\n  video?: InitDataTrack;\n  caption?: InitDataTrack;\n}\n\nexport function parseInitSegment(initSegment: Uint8Array): InitData {\n  const result: InitData = [];\n  const traks = findBox(initSegment, ['moov', 'trak']);\n  for (let i = 0; i < traks.length; i++) {\n    const trak = traks[i];\n    const tkhd = findBox(trak, ['tkhd'])[0];\n    if (tkhd) {\n      let version = tkhd[0];\n      let index = version === 0 ? 12 : 20;\n      const trackId = readUint32(tkhd, index);\n      const mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        const timescale = readUint32(mdhd, index);\n        const hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n        if (hdlr) {\n          const hdlrType = bin2str(hdlr.subarray(8, 12));\n          const type: HdlrType | undefined = {\n            soun: ElementaryStreamTypes.AUDIO as const,\n            vide: ElementaryStreamTypes.VIDEO as const,\n          }[hdlrType];\n          if (type) {\n            // Parse codec details\n            const stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n            let codec;\n            if (stsd) {\n              codec = bin2str(stsd.subarray(12, 16));\n              // TODO: Parse codec details to be able to build MIME type.\n              // stsd.start += 8;\n              // const codecBox = findBox(stsd, [codec])[0];\n              // if (codecBox) {\n              //   TODO: Codec parsing support for avc1, mp4a, hevc, av01...\n              // }\n            }\n            result[trackId] = { timescale, type };\n            result[type] = { timescale, id: trackId, codec };\n          }\n        }\n      }\n    }\n  }\n\n  const trex = findBox(initSegment, ['moov', 'mvex', 'trex']);\n  trex.forEach((trex) => {\n    const trackId = readUint32(trex, 4);\n    const track = result[trackId];\n    if (track) {\n      track.default = {\n        duration: readUint32(trex, 12),\n        flags: readUint32(trex, 20),\n      };\n    }\n  });\n\n  return result;\n}\n\nexport function patchEncyptionData(\n  initSegment: Uint8Array | undefined,\n  decryptdata: DecryptData | null\n): Uint8Array | undefined {\n  if (!initSegment || !decryptdata) {\n    return initSegment;\n  }\n  const keyId = decryptdata.keyId;\n  if (keyId && decryptdata.isCommonEncryption) {\n    const traks = findBox(initSegment, ['moov', 'trak']);\n    traks.forEach((trak) => {\n      const stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      // skip the sample entry count\n      const sampleEntries = stsd.subarray(8);\n      let encBoxes = findBox(sampleEntries, ['enca']);\n      const isAudio = encBoxes.length > 0;\n      if (!isAudio) {\n        encBoxes = findBox(sampleEntries, ['encv']);\n      }\n      encBoxes.forEach((enc) => {\n        const encBoxChildren = isAudio ? enc.subarray(28) : enc.subarray(78);\n        const sinfBoxes = findBox(encBoxChildren, ['sinf']);\n        sinfBoxes.forEach((sinf) => {\n          const tenc = parseSinf(sinf);\n          if (tenc) {\n            // Look for default key id (keyID offset is always 8 within the tenc box):\n            const tencKeyId = tenc.subarray(8, 24);\n            if (!tencKeyId.some((b) => b !== 0)) {\n              logger.log(\n                `[eme] Patching keyId in 'enc${\n                  isAudio ? 'a' : 'v'\n                }>sinf>>tenc' box: ${Hex.hexDump(tencKeyId)} -> ${Hex.hexDump(\n                  keyId\n                )}`\n              );\n              tenc.set(keyId, 8);\n            }\n          }\n        });\n      });\n    });\n  }\n\n  return initSegment;\n}\n\nexport function parseSinf(sinf: Uint8Array): Uint8Array | null {\n  const schm = findBox(sinf, ['schm'])[0];\n  if (schm) {\n    const scheme = bin2str(schm.subarray(4, 8));\n    if (scheme === 'cbcs' || scheme === 'cenc') {\n      return findBox(sinf, ['schi', 'tenc'])[0];\n    }\n  }\n  logger.error(`[eme] missing 'schm' box`);\n  return null;\n}\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param initData {InitData} a hash of track type to timescale values\n * @param fmp4 {Uint8Array} the bytes of the mp4 fragment\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nexport function getStartDTS(initData: InitData, fmp4: Uint8Array): number {\n  // we need info from two children of each track fragment box\n  return (\n    findBox(fmp4, ['moof', 'traf']).reduce((result: number | null, traf) => {\n      const tfdt = findBox(traf, ['tfdt'])[0];\n      const version = tfdt[0];\n      const start = findBox(traf, ['tfhd']).reduce(\n        (result: number | null, tfhd) => {\n          // get the track id from the tfhd\n          const id = readUint32(tfhd, 4);\n          const track = initData[id];\n          if (track) {\n            let baseTime = readUint32(tfdt, 4);\n            if (version === 1) {\n              baseTime *= Math.pow(2, 32);\n              baseTime += readUint32(tfdt, 8);\n            }\n            // assume a 90kHz clock if no timescale was specified\n            const scale = track.timescale || 90e3;\n            // convert base time to seconds\n            const startTime = baseTime / scale;\n            if (\n              isFinite(startTime) &&\n              (result === null || startTime < result)\n            ) {\n              return startTime;\n            }\n          }\n          return result;\n        },\n        null\n      );\n      if (\n        start !== null &&\n        isFinite(start) &&\n        (result === null || start < result)\n      ) {\n        return start;\n      }\n      return result;\n    }, null) || 0\n  );\n}\n\n/*\n  For Reference:\n  aligned(8) class TrackFragmentHeaderBox\n           extends FullBox(‘tfhd’, 0, tf_flags){\n     unsigned int(32)  track_ID;\n     // all the following are optional fields\n     unsigned int(64)  base_data_offset;\n     unsigned int(32)  sample_description_index;\n     unsigned int(32)  default_sample_duration;\n     unsigned int(32)  default_sample_size;\n     unsigned int(32)  default_sample_flags\n  }\n */\nexport function getDuration(data: Uint8Array, initData: InitData) {\n  let rawDuration = 0;\n  let videoDuration = 0;\n  let audioDuration = 0;\n  const trafs = findBox(data, ['moof', 'traf']);\n  for (let i = 0; i < trafs.length; i++) {\n    const traf = trafs[i];\n    // There is only one tfhd & trun per traf\n    // This is true for CMAF style content, and we should perhaps check the ftyp\n    // and only look for a single trun then, but for ISOBMFF we should check\n    // for multiple track runs.\n    const tfhd = findBox(traf, ['tfhd'])[0];\n    // get the track id from the tfhd\n    const id = readUint32(tfhd, 4);\n    const track = initData[id];\n    if (!track) {\n      continue;\n    }\n    const trackDefault = track.default;\n    const tfhdFlags = readUint32(tfhd, 0) | trackDefault?.flags!;\n    let sampleDuration: number | undefined = trackDefault?.duration;\n    if (tfhdFlags & 0x000008) {\n      // 0x000008 indicates the presence of the default_sample_duration field\n      if (tfhdFlags & 0x000002) {\n        // 0x000002 indicates the presence of the sample_description_index field, which precedes default_sample_duration\n        // If present, the default_sample_duration exists at byte offset 12\n        sampleDuration = readUint32(tfhd, 12);\n      } else {\n        // Otherwise, the duration is at byte offset 8\n        sampleDuration = readUint32(tfhd, 8);\n      }\n    }\n    // assume a 90kHz clock if no timescale was specified\n    const timescale = track.timescale || 90e3;\n    const truns = findBox(traf, ['trun']);\n    for (let j = 0; j < truns.length; j++) {\n      rawDuration = computeRawDurationFromSamples(truns[j]);\n      if (!rawDuration && sampleDuration) {\n        const sampleCount = readUint32(truns[j], 4);\n        rawDuration = sampleDuration * sampleCount;\n      }\n      if (track.type === ElementaryStreamTypes.VIDEO) {\n        videoDuration += rawDuration / timescale;\n      } else if (track.type === ElementaryStreamTypes.AUDIO) {\n        audioDuration += rawDuration / timescale;\n      }\n    }\n  }\n  if (videoDuration === 0 && audioDuration === 0) {\n    // If duration samples are not available in the traf use sidx subsegment_duration\n    let sidxDuration = 0;\n    const sidxs = findBox(data, ['sidx']);\n    for (let i = 0; i < sidxs.length; i++) {\n      const sidx = parseSegmentIndex(sidxs[i]);\n      if (sidx?.references) {\n        sidxDuration += sidx.references.reduce(\n          (dur, ref) => dur + ref.info.duration || 0,\n          0\n        );\n      }\n    }\n\n    return sidxDuration;\n  }\n  if (videoDuration) {\n    return videoDuration;\n  }\n  return audioDuration;\n}\n\n/*\n  For Reference:\n  aligned(8) class TrackRunBox\n           extends FullBox(‘trun’, version, tr_flags) {\n     unsigned int(32)  sample_count;\n     // the following are optional fields\n     signed int(32) data_offset;\n     unsigned int(32)  first_sample_flags;\n     // all fields in the following array are optional\n     {\n        unsigned int(32)  sample_duration;\n        unsigned int(32)  sample_size;\n        unsigned int(32)  sample_flags\n        if (version == 0)\n           { unsigned int(32)\n        else\n           { signed int(32)\n     }[ sample_count ]\n  }\n */\nexport function computeRawDurationFromSamples(trun): number {\n  const flags = readUint32(trun, 0);\n  // Flags are at offset 0, non-optional sample_count is at offset 4. Therefore we start 8 bytes in.\n  // Each field is an int32, which is 4 bytes\n  let offset = 8;\n  // data-offset-present flag\n  if (flags & 0x000001) {\n    offset += 4;\n  }\n  // first-sample-flags-present flag\n  if (flags & 0x000004) {\n    offset += 4;\n  }\n\n  let duration = 0;\n  const sampleCount = readUint32(trun, 4);\n  for (let i = 0; i < sampleCount; i++) {\n    // sample-duration-present flag\n    if (flags & 0x000100) {\n      const sampleDuration = readUint32(trun, offset);\n      duration += sampleDuration;\n      offset += 4;\n    }\n    // sample-size-present flag\n    if (flags & 0x000200) {\n      offset += 4;\n    }\n    // sample-flags-present flag\n    if (flags & 0x000400) {\n      offset += 4;\n    }\n    // sample-composition-time-offsets-present flag\n    if (flags & 0x000800) {\n      offset += 4;\n    }\n  }\n  return duration;\n}\n\nexport function offsetStartDTS(\n  initData: InitData,\n  fmp4: Uint8Array,\n  timeOffset: number\n) {\n  findBox(fmp4, ['moof', 'traf']).forEach((traf) => {\n    findBox(traf, ['tfhd']).forEach((tfhd) => {\n      // get the track id from the tfhd\n      const id = readUint32(tfhd, 4);\n      const track = initData[id];\n      if (!track) {\n        return;\n      }\n      // assume a 90kHz clock if no timescale was specified\n      const timescale = track.timescale || 90e3;\n      // get the base media decode time from the tfdt\n      findBox(traf, ['tfdt']).forEach((tfdt) => {\n        const version = tfdt[0];\n        let baseMediaDecodeTime = readUint32(tfdt, 4);\n\n        if (version === 0) {\n          baseMediaDecodeTime -= timeOffset * timescale;\n          baseMediaDecodeTime = Math.max(baseMediaDecodeTime, 0);\n          writeUint32(tfdt, 4, baseMediaDecodeTime);\n        } else {\n          baseMediaDecodeTime *= Math.pow(2, 32);\n          baseMediaDecodeTime += readUint32(tfdt, 8);\n          baseMediaDecodeTime -= timeOffset * timescale;\n          baseMediaDecodeTime = Math.max(baseMediaDecodeTime, 0);\n          const upper = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1));\n          const lower = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));\n          writeUint32(tfdt, 4, upper);\n          writeUint32(tfdt, 8, lower);\n        }\n      });\n    });\n  });\n}\n\n// TODO: Check if the last moof+mdat pair is part of the valid range\nexport function segmentValidRange(data: Uint8Array): SegmentedRange {\n  const segmentedRange: SegmentedRange = {\n    valid: null,\n    remainder: null,\n  };\n\n  const moofs = findBox(data, ['moof']);\n  if (!moofs) {\n    return segmentedRange;\n  } else if (moofs.length < 2) {\n    segmentedRange.remainder = data;\n    return segmentedRange;\n  }\n  const last = moofs[moofs.length - 1];\n  // Offset by 8 bytes; findBox offsets the start by as much\n  segmentedRange.valid = sliceUint8(data, 0, last.byteOffset - 8);\n  segmentedRange.remainder = sliceUint8(data, last.byteOffset - 8);\n  return segmentedRange;\n}\n\nexport interface SegmentedRange {\n  valid: Uint8Array | null;\n  remainder: Uint8Array | null;\n}\n\nexport function appendUint8Array(\n  data1: Uint8Array,\n  data2: Uint8Array\n): Uint8Array {\n  const temp = new Uint8Array(data1.length + data2.length);\n  temp.set(data1);\n  temp.set(data2, data1.length);\n\n  return temp;\n}\n\nexport interface IEmsgParsingData {\n  schemeIdUri: string;\n  value: string;\n  timeScale: number;\n  presentationTimeDelta?: number;\n  presentationTime?: number;\n  eventDuration: number;\n  id: number;\n  payload: Uint8Array;\n}\n\nexport function parseSamples(\n  timeOffset: number,\n  track: PassthroughTrack\n): UserdataSample[] {\n  const seiSamples = [] as UserdataSample[];\n  const videoData = track.samples;\n  const timescale = track.timescale;\n  const trackId = track.id;\n  let isHEVCFlavor = false;\n\n  const moofs = findBox(videoData, ['moof']);\n  moofs.map((moof) => {\n    const moofOffset = moof.byteOffset - 8;\n    const trafs = findBox(moof, ['traf']);\n    trafs.map((traf) => {\n      // get the base media decode time from the tfdt\n      const baseTime = findBox(traf, ['tfdt']).map((tfdt) => {\n        const version = tfdt[0];\n        let result = readUint32(tfdt, 4);\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += readUint32(tfdt, 8);\n        }\n        return result / timescale;\n      })[0];\n\n      if (baseTime !== undefined) {\n        timeOffset = baseTime;\n      }\n\n      return findBox(traf, ['tfhd']).map((tfhd) => {\n        const id = readUint32(tfhd, 4);\n        const tfhdFlags = readUint32(tfhd, 0) & 0xffffff;\n        const baseDataOffsetPresent = (tfhdFlags & 0x000001) !== 0;\n        const sampleDescriptionIndexPresent = (tfhdFlags & 0x000002) !== 0;\n        const defaultSampleDurationPresent = (tfhdFlags & 0x000008) !== 0;\n        let defaultSampleDuration = 0;\n        const defaultSampleSizePresent = (tfhdFlags & 0x000010) !== 0;\n        let defaultSampleSize = 0;\n        const defaultSampleFlagsPresent = (tfhdFlags & 0x000020) !== 0;\n        let tfhdOffset = 8;\n\n        if (id === trackId) {\n          if (baseDataOffsetPresent) {\n            tfhdOffset += 8;\n          }\n          if (sampleDescriptionIndexPresent) {\n            tfhdOffset += 4;\n          }\n          if (defaultSampleDurationPresent) {\n            defaultSampleDuration = readUint32(tfhd, tfhdOffset);\n            tfhdOffset += 4;\n          }\n          if (defaultSampleSizePresent) {\n            defaultSampleSize = readUint32(tfhd, tfhdOffset);\n            tfhdOffset += 4;\n          }\n          if (defaultSampleFlagsPresent) {\n            tfhdOffset += 4;\n          }\n          if (track.type === 'video') {\n            isHEVCFlavor = isHEVC(track.codec);\n          }\n\n          findBox(traf, ['trun']).map((trun) => {\n            const version = trun[0];\n            const flags = readUint32(trun, 0) & 0xffffff;\n            const dataOffsetPresent = (flags & 0x000001) !== 0;\n            let dataOffset = 0;\n            const firstSampleFlagsPresent = (flags & 0x000004) !== 0;\n            const sampleDurationPresent = (flags & 0x000100) !== 0;\n            let sampleDuration = 0;\n            const sampleSizePresent = (flags & 0x000200) !== 0;\n            let sampleSize = 0;\n            const sampleFlagsPresent = (flags & 0x000400) !== 0;\n            const sampleCompositionOffsetsPresent = (flags & 0x000800) !== 0;\n            let compositionOffset = 0;\n            const sampleCount = readUint32(trun, 4);\n            let trunOffset = 8; // past version, flags, and sample count\n\n            if (dataOffsetPresent) {\n              dataOffset = readUint32(trun, trunOffset);\n              trunOffset += 4;\n            }\n            if (firstSampleFlagsPresent) {\n              trunOffset += 4;\n            }\n\n            let sampleOffset = dataOffset + moofOffset;\n\n            for (let ix = 0; ix < sampleCount; ix++) {\n              if (sampleDurationPresent) {\n                sampleDuration = readUint32(trun, trunOffset);\n                trunOffset += 4;\n              } else {\n                sampleDuration = defaultSampleDuration;\n              }\n              if (sampleSizePresent) {\n                sampleSize = readUint32(trun, trunOffset);\n                trunOffset += 4;\n              } else {\n                sampleSize = defaultSampleSize;\n              }\n              if (sampleFlagsPresent) {\n                trunOffset += 4;\n              }\n              if (sampleCompositionOffsetsPresent) {\n                if (version === 0) {\n                  compositionOffset = readUint32(trun, trunOffset);\n                } else {\n                  compositionOffset = readSint32(trun, trunOffset);\n                }\n                trunOffset += 4;\n              }\n              if (track.type === ElementaryStreamTypes.VIDEO) {\n                let naluTotalSize = 0;\n                while (naluTotalSize < sampleSize) {\n                  const naluSize = readUint32(videoData, sampleOffset);\n                  sampleOffset += 4;\n                  if (isSEIMessage(isHEVCFlavor, videoData[sampleOffset])) {\n                    const data = videoData.subarray(\n                      sampleOffset,\n                      sampleOffset + naluSize\n                    );\n                    parseSEIMessageFromNALu(\n                      data,\n                      isHEVCFlavor ? 2 : 1,\n                      timeOffset + compositionOffset / timescale,\n                      seiSamples\n                    );\n                  }\n                  sampleOffset += naluSize;\n                  naluTotalSize += naluSize + 4;\n                }\n              }\n\n              timeOffset += sampleDuration / timescale;\n            }\n          });\n        }\n      });\n    });\n  });\n  return seiSamples;\n}\n\nfunction isHEVC(codec: string) {\n  if (!codec) {\n    return false;\n  }\n  const delimit = codec.indexOf('.');\n  const baseCodec = delimit < 0 ? codec : codec.substring(0, delimit);\n  return (\n    baseCodec === 'hvc1' ||\n    baseCodec === 'hev1' ||\n    // Dolby Vision\n    baseCodec === 'dvh1' ||\n    baseCodec === 'dvhe'\n  );\n}\n\nfunction isSEIMessage(isHEVCFlavor: boolean, naluHeader: number) {\n  if (isHEVCFlavor) {\n    const naluType = (naluHeader >> 1) & 0x3f;\n    return naluType === 39 || naluType === 40;\n  } else {\n    const naluType = naluHeader & 0x1f;\n    return naluType === 6;\n  }\n}\n\nexport function parseSEIMessageFromNALu(\n  unescapedData: Uint8Array,\n  headerSize: number,\n  pts: number,\n  samples: UserdataSample[]\n) {\n  const data = discardEPB(unescapedData);\n  let seiPtr = 0;\n  // skip nal header\n  seiPtr += headerSize;\n  let payloadType = 0;\n  let payloadSize = 0;\n  let endOfCaptions = false;\n  let b = 0;\n\n  while (seiPtr < data.length) {\n    payloadType = 0;\n    do {\n      if (seiPtr >= data.length) {\n        break;\n      }\n      b = data[seiPtr++];\n      payloadType += b;\n    } while (b === 0xff);\n\n    // Parse payload size.\n    payloadSize = 0;\n    do {\n      if (seiPtr >= data.length) {\n        break;\n      }\n      b = data[seiPtr++];\n      payloadSize += b;\n    } while (b === 0xff);\n\n    const leftOver = data.length - seiPtr;\n\n    if (!endOfCaptions && payloadType === 4 && seiPtr < data.length) {\n      endOfCaptions = true;\n\n      const countryCode = data[seiPtr++];\n      if (countryCode === 181) {\n        const providerCode = readUint16(data, seiPtr);\n        seiPtr += 2;\n\n        if (providerCode === 49) {\n          const userStructure = readUint32(data, seiPtr);\n          seiPtr += 4;\n\n          if (userStructure === 0x47413934) {\n            const userDataType = data[seiPtr++];\n\n            // Raw CEA-608 bytes wrapped in CEA-708 packet\n            if (userDataType === 3) {\n              const firstByte = data[seiPtr++];\n              const totalCCs = 0x1f & firstByte;\n              const enabled = 0x40 & firstByte;\n              const totalBytes = enabled ? 2 + totalCCs * 3 : 0;\n              const byteArray = new Uint8Array(totalBytes);\n              if (enabled) {\n                byteArray[0] = firstByte;\n                for (let i = 1; i < totalBytes; i++) {\n                  byteArray[i] = data[seiPtr++];\n                }\n              }\n\n              samples.push({\n                type: userDataType,\n                payloadType,\n                pts,\n                bytes: byteArray,\n              });\n            }\n          }\n        }\n      }\n    } else if (payloadType === 5 && payloadSize < leftOver) {\n      endOfCaptions = true;\n\n      if (payloadSize > 16) {\n        const uuidStrArray: Array<string> = [];\n        for (let i = 0; i < 16; i++) {\n          const b = data[seiPtr++].toString(16);\n          uuidStrArray.push(b.length == 1 ? '0' + b : b);\n\n          if (i === 3 || i === 5 || i === 7 || i === 9) {\n            uuidStrArray.push('-');\n          }\n        }\n        const length = payloadSize - 16;\n        const userDataBytes = new Uint8Array(length);\n        for (let i = 0; i < length; i++) {\n          userDataBytes[i] = data[seiPtr++];\n        }\n\n        samples.push({\n          payloadType,\n          pts,\n          uuid: uuidStrArray.join(''),\n          userData: utf8ArrayToStr(userDataBytes),\n          userDataBytes,\n        });\n      }\n    } else if (payloadSize < leftOver) {\n      seiPtr += payloadSize;\n    } else if (payloadSize > leftOver) {\n      break;\n    }\n  }\n}\n\n/**\n * remove Emulation Prevention bytes from a RBSP\n */\nexport function discardEPB(data: Uint8Array): Uint8Array {\n  const length = data.byteLength;\n  const EPBPositions = [] as Array<number>;\n  let i = 1;\n\n  // Find all `Emulation Prevention Bytes`\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      EPBPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  }\n\n  // If no Emulation Prevention Bytes were found just return the original\n  // array\n  if (EPBPositions.length === 0) {\n    return data;\n  }\n\n  // Create a new array to hold the NAL unit data\n  const newLength = length - EPBPositions.length;\n  const newData = new Uint8Array(newLength);\n  let sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === EPBPositions[0]) {\n      // Skip this byte\n      sourceIndex++;\n      // Remove this position index\n      EPBPositions.shift();\n    }\n    newData[i] = data[sourceIndex];\n  }\n  return newData;\n}\n\nexport function parseEmsg(data: Uint8Array): IEmsgParsingData {\n  const version = data[0];\n  let schemeIdUri: string = '';\n  let value: string = '';\n  let timeScale: number = 0;\n  let presentationTimeDelta: number = 0;\n  let presentationTime: number = 0;\n  let eventDuration: number = 0;\n  let id: number = 0;\n  let offset: number = 0;\n\n  if (version === 0) {\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      value += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    value += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    timeScale = readUint32(data, 12);\n    presentationTimeDelta = readUint32(data, 16);\n    eventDuration = readUint32(data, 20);\n    id = readUint32(data, 24);\n    offset = 28;\n  } else if (version === 1) {\n    offset += 4;\n    timeScale = readUint32(data, offset);\n    offset += 4;\n    const leftPresentationTime = readUint32(data, offset);\n    offset += 4;\n    const rightPresentationTime = readUint32(data, offset);\n    offset += 4;\n    presentationTime = 2 ** 32 * leftPresentationTime + rightPresentationTime;\n    if (!Number.isSafeInteger(presentationTime)) {\n      presentationTime = Number.MAX_SAFE_INTEGER;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box'\n      );\n    }\n\n    eventDuration = readUint32(data, offset);\n    offset += 4;\n    id = readUint32(data, offset);\n    offset += 4;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      value += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    value += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n  }\n  const payload = data.subarray(offset, data.byteLength);\n\n  return {\n    schemeIdUri,\n    value,\n    timeScale,\n    presentationTime,\n    presentationTimeDelta,\n    eventDuration,\n    id,\n    payload,\n  };\n}\n\nexport function mp4Box(type: ArrayLike<number>, ...payload: Uint8Array[]) {\n  const len = payload.length;\n  let size = 8;\n  let i = len;\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  const result = new Uint8Array(size);\n  result[0] = (size >> 24) & 0xff;\n  result[1] = (size >> 16) & 0xff;\n  result[2] = (size >> 8) & 0xff;\n  result[3] = size & 0xff;\n  result.set(type, 4);\n  for (i = 0, size = 8; i < len; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n}\n\nexport function mp4pssh(\n  systemId: Uint8Array,\n  keyids: Array<Uint8Array> | null,\n  data: Uint8Array\n) {\n  if (systemId.byteLength !== 16) {\n    throw new RangeError('Invalid system id');\n  }\n  let version;\n  let kids;\n  if (keyids) {\n    version = 1;\n    kids = new Uint8Array(keyids.length * 16);\n    for (let ix = 0; ix < keyids.length; ix++) {\n      const k = keyids[ix]; // uint8array\n      if (k.byteLength !== 16) {\n        throw new RangeError('Invalid key');\n      }\n      kids.set(k, ix * 16);\n    }\n  } else {\n    version = 0;\n    kids = new Uint8Array();\n  }\n  let kidCount;\n  if (version > 0) {\n    kidCount = new Uint8Array(4);\n    if (keyids!.length > 0) {\n      new DataView(kidCount.buffer).setUint32(0, keyids!.length, false);\n    }\n  } else {\n    kidCount = new Uint8Array();\n  }\n  const dataSize = new Uint8Array(4);\n  if (data && data.byteLength > 0) {\n    new DataView(dataSize.buffer).setUint32(0, data.byteLength, false);\n  }\n  return mp4Box(\n    [112, 115, 115, 104],\n    new Uint8Array([\n      version,\n      0x00,\n      0x00,\n      0x00, // Flags\n    ]),\n    systemId, // 16 bytes\n    kidCount,\n    kids,\n    dataSize,\n    data || new Uint8Array()\n  );\n}\n\nexport function parsePssh(initData: ArrayBuffer) {\n  if (!(initData instanceof ArrayBuffer) || initData.byteLength < 32) {\n    return null;\n  }\n  const result = {\n    version: 0,\n    systemId: '',\n    kids: null as null | Uint8Array[],\n    data: null as null | Uint8Array,\n  };\n  const view = new DataView(initData);\n  const boxSize = view.getUint32(0);\n  if (initData.byteLength !== boxSize && boxSize > 44) {\n    return null;\n  }\n  const type = view.getUint32(4);\n  if (type !== 0x70737368) {\n    return null;\n  }\n  result.version = view.getUint32(8) >>> 24;\n  if (result.version > 1) {\n    return null;\n  }\n  result.systemId = Hex.hexDump(new Uint8Array(initData, 12, 16));\n  const dataSizeOrKidCount = view.getUint32(28);\n  if (result.version === 0) {\n    if (boxSize - 32 < dataSizeOrKidCount) {\n      return null;\n    }\n    result.data = new Uint8Array(initData, 32, dataSizeOrKidCount);\n  } else if (result.version === 1) {\n    result.kids = [];\n    for (let i = 0; i < dataSizeOrKidCount; i++) {\n      result.kids.push(new Uint8Array(initData, 32 + i * 16, 16));\n    }\n  }\n  return result;\n}\n","export function base64ToBase64Url(base64encodedStr: string): string {\n  return base64encodedStr\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\nexport function strToBase64Encode(str: string): string {\n  return btoa(str);\n}\n\nexport function base64DecodeToStr(str: string): string {\n  return atob(str);\n}\n\nexport function base64Encode(input: Uint8Array): string {\n  return btoa(String.fromCharCode(...input));\n}\n\nexport function base64UrlEncode(input: Uint8Array): string {\n  return base64ToBase64Url(base64Encode(input));\n}\n\nexport function base64Decode(base64encodedStr: string): Uint8Array {\n  return Uint8Array.from(atob(base64encodedStr), (c) => c.charCodeAt(0));\n}\n","import { logger } from './logger';\n\nexport function sendAddTrackEvent(track: TextTrack, videoEl: HTMLMediaElement) {\n  let event: Event;\n  try {\n    event = new Event('addtrack');\n  } catch (err) {\n    // for IE11\n    event = document.createEvent('Event');\n    event.initEvent('addtrack', false, false);\n  }\n  (event as any).track = track;\n  videoEl.dispatchEvent(event);\n}\n\nexport function addCueToTrack(track: TextTrack, cue: VTTCue) {\n  // Sometimes there are cue overlaps on segmented vtts so the same\n  // cue can appear more than once in different vtt files.\n  // This avoid showing duplicated cues with same timecode and text.\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n  if (track.cues && !track.cues.getCueById(cue.id)) {\n    try {\n      track.addCue(cue);\n      if (!track.cues.getCueById(cue.id)) {\n        throw new Error(`addCue is failed for: ${cue}`);\n      }\n    } catch (err) {\n      logger.debug(`[texttrack-utils]: ${err}`);\n      const textTrackCue = new (self.TextTrackCue as any)(\n        cue.startTime,\n        cue.endTime,\n        cue.text\n      );\n      textTrackCue.id = cue.id;\n      track.addCue(textTrackCue);\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\nexport function clearCurrentCues(track: TextTrack) {\n  // When track.mode is disabled, track.cues will be null.\n  // To guarantee the removal of cues, we need to temporarily\n  // change the mode to hidden\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n  if (track.cues) {\n    for (let i = track.cues.length; i--; ) {\n      track.removeCue(track.cues[i]);\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\nexport function removeCuesInRange(\n  track: TextTrack,\n  start: number,\n  end: number,\n  predicate?: (cue: TextTrackCue) => boolean\n) {\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n\n  if (track.cues && track.cues.length > 0) {\n    const cues = getCuesInRange(track.cues, start, end);\n    for (let i = 0; i < cues.length; i++) {\n      if (!predicate || predicate(cues[i])) {\n        track.removeCue(cues[i]);\n      }\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\n// Find first cue starting after given time.\n// Modified version of binary search O(log(n)).\nfunction getFirstCueIndexAfterTime(\n  cues: TextTrackCueList | TextTrackCue[],\n  time: number\n): number {\n  // If first cue starts after time, start there\n  if (time < cues[0].startTime) {\n    return 0;\n  }\n  // If the last cue ends before time there is no overlap\n  const len = cues.length - 1;\n  if (time > cues[len].endTime) {\n    return -1;\n  }\n\n  let left = 0;\n  let right = len;\n\n  while (left <= right) {\n    const mid = Math.floor((right + left) / 2);\n\n    if (time < cues[mid].startTime) {\n      right = mid - 1;\n    } else if (time > cues[mid].startTime && left < len) {\n      left = mid + 1;\n    } else {\n      // If it's not lower or higher, it must be equal.\n      return mid;\n    }\n  }\n  // At this point, left and right have swapped.\n  // No direct match was found, left or right element must be the closest. Check which one has the smallest diff.\n  return cues[left].startTime - time < time - cues[right].startTime\n    ? left\n    : right;\n}\n\nexport function getCuesInRange(\n  cues: TextTrackCueList | TextTrackCue[],\n  start: number,\n  end: number\n): TextTrackCue[] {\n  const cuesFound: TextTrackCue[] = [];\n  const firstCueInRange = getFirstCueIndexAfterTime(cues, start);\n  if (firstCueInRange > -1) {\n    for (let i = firstCueInRange, len = cues.length; i < len; i++) {\n      const cue = cues[i];\n      if (cue.startTime >= start && cue.endTime <= end) {\n        cuesFound.push(cue);\n      } else if (cue.startTime > end) {\n        return cuesFound;\n      }\n    }\n  }\n  return cuesFound;\n}\n","/**\n *  TimeRanges to string helper\n */\n\nconst TimeRanges = {\n  toString: function (r: TimeRanges) {\n    let log = '';\n    const len = r.length;\n    for (let i = 0; i < len; i++) {\n      log += `[${r.start(i).toFixed(3)}-${r.end(i).toFixed(3)}]`;\n    }\n\n    return log;\n  },\n};\n\nexport default TimeRanges;\n","const MPEG_TS_CLOCK_FREQ_HZ = 90000;\n\nexport function toTimescaleFromBase(\n  value,\n  destScale: number,\n  srcBase: number = 1,\n  round: boolean = false\n): number {\n  const result = value * destScale * srcBase; // equivalent to `(value * scale) / (1 / base)`\n  return round ? Math.round(result) : result;\n}\n\nexport function toTimescaleFromScale(\n  value,\n  destScale: number,\n  srcScale: number = 1,\n  round: boolean = false\n): number {\n  return toTimescaleFromBase(value, destScale, 1 / srcScale, round);\n}\n\nexport function toMsFromMpegTsClock(\n  value: number,\n  round: boolean = false\n): number {\n  return toTimescaleFromBase(value, 1000, 1 / MPEG_TS_CLOCK_FREQ_HZ, round);\n}\n\nexport function toMpegTsClockFromTimescale(\n  value: number,\n  srcScale: number = 1\n): number {\n  return toTimescaleFromBase(value, MPEG_TS_CLOCK_FREQ_HZ, 1 / srcScale);\n}\n","export function sliceUint8(\n  array: Uint8Array,\n  start?: number,\n  end?: number\n): Uint8Array {\n  // @ts-expect-error This polyfills IE11 usage of Uint8Array slice.\n  // It always exists in the TypeScript definition so fails, but it fails at runtime on IE11.\n  return Uint8Array.prototype.slice\n    ? array.slice(start, end)\n    : new Uint8Array(Array.prototype.slice.call(array, start, end));\n}\n","import { logger } from '../utils/logger';\nimport type {\n  LoaderCallbacks,\n  LoaderContext,\n  LoaderStats,\n  Loader,\n  LoaderConfiguration,\n} from '../types/loader';\nimport { LoadStats } from '../loader/load-stats';\n\nconst AGE_HEADER_LINE_REGEX = /^age:\\s*[\\d.]+\\s*$/m;\n\nclass XhrLoader implements Loader<LoaderContext> {\n  private xhrSetup: Function | null;\n  private requestTimeout?: number;\n  private retryTimeout?: number;\n  private retryDelay: number;\n  private config: LoaderConfiguration | null = null;\n  private callbacks: LoaderCallbacks<LoaderContext> | null = null;\n  public context!: LoaderContext;\n\n  private loader: XMLHttpRequest | null = null;\n  public stats: LoaderStats;\n\n  constructor(config /* HlsConfig */) {\n    this.xhrSetup = config ? config.xhrSetup : null;\n    this.stats = new LoadStats();\n    this.retryDelay = 0;\n  }\n\n  destroy(): void {\n    this.callbacks = null;\n    this.abortInternal();\n    this.loader = null;\n    this.config = null;\n  }\n\n  abortInternal(): void {\n    const loader = this.loader;\n    self.clearTimeout(this.requestTimeout);\n    self.clearTimeout(this.retryTimeout);\n    if (loader) {\n      loader.onreadystatechange = null;\n      loader.onprogress = null;\n      if (loader.readyState !== 4) {\n        this.stats.aborted = true;\n        loader.abort();\n      }\n    }\n  }\n\n  abort(): void {\n    this.abortInternal();\n    if (this.callbacks?.onAbort) {\n      this.callbacks.onAbort(this.stats, this.context, this.loader);\n    }\n  }\n\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<LoaderContext>\n  ): void {\n    if (this.stats.loading.start) {\n      throw new Error('Loader can only be used once.');\n    }\n    this.stats.loading.start = self.performance.now();\n    this.context = context;\n    this.config = config;\n    this.callbacks = callbacks;\n    this.retryDelay = config.retryDelay;\n    this.loadInternal();\n  }\n\n  loadInternal(): void {\n    const { config, context } = this;\n    if (!config) {\n      return;\n    }\n    const xhr = (this.loader = new self.XMLHttpRequest());\n\n    const stats = this.stats;\n    stats.loading.first = 0;\n    stats.loaded = 0;\n    const xhrSetup = this.xhrSetup;\n\n    try {\n      if (xhrSetup) {\n        try {\n          xhrSetup(xhr, context.url);\n        } catch (e) {\n          // fix xhrSetup: (xhr, url) => {xhr.setRequestHeader(\"Content-Language\", \"test\");}\n          // not working, as xhr.setRequestHeader expects xhr.readyState === OPEN\n          xhr.open('GET', context.url, true);\n          xhrSetup(xhr, context.url);\n        }\n      }\n      if (!xhr.readyState) {\n        xhr.open('GET', context.url, true);\n      }\n\n      const headers = this.context.headers;\n      if (headers) {\n        for (const header in headers) {\n          xhr.setRequestHeader(header, headers[header]);\n        }\n      }\n    } catch (e) {\n      // IE11 throws an exception on xhr.open if attempting to access an HTTP resource over HTTPS\n      this.callbacks!.onError(\n        { code: xhr.status, text: e.message },\n        context,\n        xhr\n      );\n      return;\n    }\n\n    if (context.rangeEnd) {\n      xhr.setRequestHeader(\n        'Range',\n        'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1)\n      );\n    }\n\n    xhr.onreadystatechange = this.readystatechange.bind(this);\n    xhr.onprogress = this.loadprogress.bind(this);\n    xhr.responseType = context.responseType as XMLHttpRequestResponseType;\n    // setup timeout before we perform request\n    self.clearTimeout(this.requestTimeout);\n    this.requestTimeout = self.setTimeout(\n      this.loadtimeout.bind(this),\n      config.timeout\n    );\n    xhr.send();\n  }\n\n  readystatechange(): void {\n    const { context, loader: xhr, stats } = this;\n    if (!context || !xhr) {\n      return;\n    }\n    const readyState = xhr.readyState;\n    const config = this.config as LoaderConfiguration;\n\n    // don't proceed if xhr has been aborted\n    if (stats.aborted) {\n      return;\n    }\n\n    // >= HEADERS_RECEIVED\n    if (readyState >= 2) {\n      // clear xhr timeout and rearm it if readyState less than 4\n      self.clearTimeout(this.requestTimeout);\n      if (stats.loading.first === 0) {\n        stats.loading.first = Math.max(\n          self.performance.now(),\n          stats.loading.start\n        );\n      }\n\n      if (readyState === 4) {\n        xhr.onreadystatechange = null;\n        xhr.onprogress = null;\n        const status = xhr.status;\n        // http status between 200 to 299 are all successful\n        const isArrayBuffer = xhr.responseType === 'arraybuffer';\n        if (\n          status >= 200 &&\n          status < 300 &&\n          ((isArrayBuffer && xhr.response) || xhr.responseText !== null)\n        ) {\n          stats.loading.end = Math.max(\n            self.performance.now(),\n            stats.loading.first\n          );\n          let data;\n          let len: number;\n          if (isArrayBuffer) {\n            data = xhr.response;\n            len = data.byteLength;\n          } else {\n            data = xhr.responseText;\n            len = data.length;\n          }\n          stats.loaded = stats.total = len;\n\n          if (!this.callbacks) {\n            return;\n          }\n          const onProgress = this.callbacks.onProgress;\n          if (onProgress) {\n            onProgress(stats, context, data, xhr);\n          }\n          if (!this.callbacks) {\n            return;\n          }\n          const response = {\n            url: xhr.responseURL,\n            data: data,\n          };\n\n          this.callbacks.onSuccess(response, stats, context, xhr);\n        } else {\n          // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error\n          if (\n            stats.retry >= config.maxRetry ||\n            (status >= 400 && status < 499)\n          ) {\n            logger.error(`${status} while loading ${context.url}`);\n            this.callbacks!.onError(\n              { code: status, text: xhr.statusText },\n              context,\n              xhr\n            );\n          } else {\n            // retry\n            logger.warn(\n              `${status} while loading ${context.url}, retrying in ${this.retryDelay}...`\n            );\n            // abort and reset internal state\n            this.abortInternal();\n            this.loader = null;\n            // schedule retry\n            self.clearTimeout(this.retryTimeout);\n            this.retryTimeout = self.setTimeout(\n              this.loadInternal.bind(this),\n              this.retryDelay\n            );\n            // set exponential backoff\n            this.retryDelay = Math.min(\n              2 * this.retryDelay,\n              config.maxRetryDelay\n            );\n            stats.retry++;\n          }\n        }\n      } else {\n        // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet\n        self.clearTimeout(this.requestTimeout);\n        this.requestTimeout = self.setTimeout(\n          this.loadtimeout.bind(this),\n          config.timeout\n        );\n      }\n    }\n  }\n\n  loadtimeout(): void {\n    logger.warn(`timeout while loading ${this.context.url}`);\n    const callbacks = this.callbacks;\n    if (callbacks) {\n      this.abortInternal();\n      callbacks.onTimeout(this.stats, this.context, this.loader);\n    }\n  }\n\n  loadprogress(event: ProgressEvent): void {\n    const stats = this.stats;\n\n    stats.loaded = event.loaded;\n    if (event.lengthComputable) {\n      stats.total = event.total;\n    }\n  }\n\n  getCacheAge(): number | null {\n    let result: number | null = null;\n    if (\n      this.loader &&\n      AGE_HEADER_LINE_REGEX.test(this.loader.getAllResponseHeaders())\n    ) {\n      const ageHeader = this.loader.getResponseHeader('age');\n      result = ageHeader ? parseFloat(ageHeader) : null;\n    }\n    return result;\n  }\n}\n\nexport default XhrLoader;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// module factories are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./src/hls.ts\");\n",""],"names":["AbrController","AudioStreamController","AudioTrackController","SubtitleStreamController","SubtitleTrackController","BufferController","TimelineController","CapLevelController","FPSController","EMEController","CMCDController","XhrLoader","FetchLoader","fetchSupported","Cues","requestMediaKeySystemAccess","logger","hlsDefaultConfig","autoStartLoad","startPosition","defaultAudioCodec","undefined","debug","capLevelOnFPSDrop","capLevelToPlayerSize","ignoreDevicePixelRatio","initialLiveManifestSize","maxBufferLength","backBufferLength","Infinity","maxBufferSize","maxBufferHole","highBufferWatchdogPeriod","nudgeOffset","nudgeMaxRetry","maxFragLookUpTolerance","liveSyncDurationCount","liveMaxLatencyDurationCount","liveSyncDuration","liveMaxLatencyDuration","maxLiveSyncPlaybackRate","liveDurationInfinity","liveBackBufferLength","maxMaxBufferLength","enableWorker","enableSoftwareAES","manifestLoadingTimeOut","manifestLoadingMaxRetry","manifestLoadingRetryDelay","manifestLoadingMaxRetryTimeout","startLevel","levelLoadingTimeOut","levelLoadingMaxRetry","levelLoadingRetryDelay","levelLoadingMaxRetryTimeout","fragLoadingTimeOut","fragLoadingMaxRetry","fragLoadingRetryDelay","fragLoadingMaxRetryTimeout","startFragPrefetch","fpsDroppedMonitoringPeriod","fpsDroppedMonitoringThreshold","appendErrorMaxRetry","loader","fLoader","pLoader","xhrSetup","licenseXhrSetup","licenseResponseCallback","abrController","bufferController","capLevelController","fpsController","stretchShortVideoTrack","maxAudioFramesDrift","forceKeyFrameOnDiscontinuity","abrEwmaFastLive","abrEwmaSlowLive","abrEwmaFastVoD","abrEwmaSlowVoD","abrEwmaDefaultEstimate","abrBandWidthFactor","abrBandWidthUpFactor","abrMaxWithRealBitrate","maxStarvationDelay","maxLoadingDelay","minAutoBitrate","emeEnabled","widevineLicenseUrl","drmSystems","drmSystemOptions","requestMediaKeySystemAccessFunc","testBandwidth","progressive","lowLatencyMode","cmcd","enableDateRangeMetadataCues","enableEmsgMetadataCues","enableID3MetadataCues","timelineConfig","subtitleStreamController","__USE_SUBTITLES__","subtitleTrackController","timelineController","audioStreamController","__USE_ALT_AUDIO__","audioTrackController","emeController","__USE_EME_DRM__","cmcdController","__USE_CMCD__","cueHandler","enableWebVTT","enableIMSC1","enableCEA708Captions","captionsTextTrack1Label","captionsTextTrack1LanguageCode","captionsTextTrack2Label","captionsTextTrack2LanguageCode","captionsTextTrack3Label","captionsTextTrack3LanguageCode","captionsTextTrack4Label","captionsTextTrack4LanguageCode","renderTextTracksNatively","mergeConfig","defaultConfig","userConfig","Error","enableStreamingMode","config","currentLoader","log","canStreamProgressively","EwmaBandWidthEstimator","Events","ErrorDetails","ErrorTypes","PlaylistLevelType","hls","lastLoadedFragLevel","_nextAutoLevel","timer","onCheck","_abandonRulesCheck","bind","fragCurrent","partCurrent","bitrateTestDelay","bwEstimator","registerListeners","on","FRAG_LOADING","onFragLoading","FRAG_LOADED","onFragLoaded","FRAG_BUFFERED","onFragBuffered","LEVEL_LOADED","onLevelLoaded","ERROR","onError","unregisterListeners","off","destroy","clearTimer","event","data","frag","type","MAIN","part","self","setInterval","details","live","update","autoLevelEnabled","media","stats","duration","aborted","loaded","total","level","paused","playbackRate","readyState","bufferInfo","mainForwardBufferInfo","requestDelay","performance","now","loading","start","Math","abs","loadedFirstByte","first","bwEstimate","getEstimate","levels","minAutoLevel","expectedLen","max","round","maxBitrate","loadRate","fragLoadedDelay","bufferStarvationDelay","len","fragLevelNextLoadedDelay","Number","POSITIVE_INFINITY","nextLoadLevel","levelNextBitrate","warn","sn","index","toFixed","sample","keyLoader","abortRequests","trigger","FRAG_LOAD_EMERGENCY_ABORTED","loadedBytes","bytes","loadedDuration","realBitrate","bitrateTest","fragBufferedData","id","processingMs","parsing","end","KEY_SYSTEM_ERROR","FRAG_LOAD_ERROR","FRAG_LOAD_TIMEOUT","KEY_LOAD_ERROR","KEY_LOAD_TIMEOUT","clearInterval","getNextABRAutoLevel","maxAutoLevel","currentFragDuration","avgbw","bestLevel","findBestLevel","trace","min","bwFactor","bwUpFactor","currentBw","maxFetchDuration","currentLevel","currentCodecSet","codecSet","i","levelInfo","levelDetails","avgDuration","partTarget","averagetargetduration","adjustedbw","bitrate","fetchDuration","forcedAutoLevel","canEstimate","nextABRAutoLevel","loadError","nextLevel","getSkipValue","HlsSkip","HlsUrlParameters","computeReloadInterval","mergeDetails","BasePlaylistController","logPrefix","requestScheduled","canLoad","retryCount","fatal","NETWORK_ERROR","stopLoad","clearTimeout","startLoad","loadPlaylist","switchParams","playlistUri","previous","renditionReports","length","attr","uri","URL","URI","url","href","error","slice","msn","parseInt","lastPartSn","lastPartIndex","currentGoal","age","targetduration","No","hlsUrlParameters","shouldLoadTrack","track","playlistLoaded","previousDetails","elapsed","advancedDateTime","Date","reloaded","advanced","fragments","deliveryDirectives","canBlockReload","endSN","endSn","hasParts","lastPart","nextSnStartIndex","lastAdvanced","cdnAge","ageHeader","tuneInGoal","segments","floor","parts","getDeliveryDirectives","position","distanceToLiveEdgeMs","edge","reloadInterval","updated","estimatedTimeUntilUpdate","setTimeout","previousDeliveryDirectives","skip","deltaUpdateFailed","retryLoadingOrFail","errorEvent","retry","indexOf","context","delay","pow","TaskLoop","FragmentState","BufferHelper","ChunkMetadata","appendUint8Array","alignStream","findFragmentByPDT","findFragmentByPTS","findFragWithCC","getFragmentWithSN","getPartWith","updateFragPTSDTS","FragmentLoader","LoadError","Decrypter","TimeRanges","State","STOPPED","IDLE","KEY_LOADING","FRAG_LOADING_WAITING_RETRY","WAITING_TRACK","PARSING","PARSED","ENDED","WAITING_INIT_PTS","WAITING_LEVEL","BaseStreamController","fragmentTracker","fragPrevious","transmuxer","_state","mediaBuffer","lastCurrentTime","nextLoadPosition","loadedmetadata","fragLoadError","retryDate","fragmentLoader","levelLastLoaded","startFragRequested","decrypter","initPTS","onvseeking","onvended","LEVEL_SWITCHING","onLevelSwitching","doTick","onTickEnd","abort","removeFragment","resetTransmuxer","clearNextTick","state","_streamEnded","nextStart","partList","lastPartBuffered","isBuffered","playlistType","isEndListAppended","getLevelDetails","onMediaAttached","onMediaSeeking","onMediaEnded","addEventListener","onMediaDetaching","ended","removeEventListener","detach","removeAllFragments","currentTime","resetLoadingState","tolerance","fragStartOffset","fragEndOffset","pastFragment","tickImmediate","onHandlerDestroying","onHandlerDestroyed","loadFragment","targetBufferTime","_loadFragForPlayback","progressCallback","fragContextChanged","chunkCount","_handleFragmentLoadProgress","_doFragLoad","then","_handleFragmentLoadComplete","catch","reason","resetFragmentLoading","flushMainBuffer","startOffset","endOffset","flushScope","BUFFER_FLUSHING","_loadInitSegment","payload","decryptData","decryptdata","byteLength","key","iv","method","startTime","decrypt","Uint8Array","buffer","decryptedData","endTime","FRAG_DECRYPTED","tstart","tdecrypt","console","assert","buffering","tick","urlId","fragBufferedComplete","startPTS","NaN","endPTS","toString","getBuffered","buffered","seekToStartPos","fragLoadedEndData","partsLoaded","complete","some","fragLoaded","chunkMeta","flush","keyLoadingPromise","encrypted","startSN","load","keyLoadedData","KEY_LOADED","throwIfFragContextChanged","encryptedFragments","loadClear","fragmentHint","partIndex","getNextPart","cc","parseFloat","doFragPartsLoad","handleFragLoadError","loadedEndOfParts","Promise","resolve","dataOnProgress","all","fragLoadedData","reject","loadPartIndex","loadPart","partLoadedData","loadedPart","nextPart","fragment","INTERNAL_ABORTED","handleFragLoadAborted","OTHER_ERROR","INTERNAL_EXCEPTION","err","_handleTransmuxerFlush","getCurrentContext","updateLevelTiming","partial","levelIndex","bufferFragmentData","data1","data2","segment","parent","BUFFER_APPENDING","dropped","independent","flushBufferGap","fragDuration","segmentFraction","getFwdBufferInfo","bufferable","pos","getLoadPosition","bufferedFragAtPos","getBufferedFrag","getMaxBufferLength","levelBitrate","maxBufLen","reduceMaxBufferLength","threshold","minLength","getNextFragment","fragLen","PTSKnown","getInitialLiveFragment","liveSyncPosition","partEnd","fragmentEnd","getFragmentAtPosition","mapToInitFragWhenRequired","initSegment","contiguous","independentAttrOmitted","hasProgramDateTime","programDateTime","endProgramDateTime","targetSN","fragNext","liveStart","bufferEnd","loadingParts","concat","lookupTolerance","curSNIdx","getState","OK","sameLevel","nextFrag","synchronizeToLiveEdge","withinSlidingWindow","maxLatency","alignPlaylists","lastLevel","slidingStart","firstLevelLoad","aligned","alignedSliding","alignedSlidingStart","waitForCdnTuneIn","advancePartLimit","partHoldBack","setStartPosition","sliding","startTimeOffset","totalduration","onFragmentOrKeyLoadError","filterType","levelRetry","AUDIO","afterBufferFlushed","bufferType","bufferedTimeRanges","detectEvictedFragments","resetStartWhenNotLoaded","parsed","Object","keys","elementaryStreams","reduce","result","info","parsedDuration","drift","startDTS","endDTS","LEVEL_PTS_UPDATED","FRAG_PARSED","nextState","previousState","getMediaSource","ElementaryStreamTypes","BufferOperationQueue","MediaSource","VIDEO_CODEC_PROFILE_REPACE","_objectUrl","operationQueue","listeners","bufferCodecEventsExpected","_bufferCodecEventsTotal","mediaSource","lastMpegAudioChunk","appendError","tracks","pendingTracks","sourceBuffer","_onMediaSourceOpen","_onMediaEmptied","updateMediaElementDuration","MEDIA_ATTACHED","checkPendingTracks","_onMediaSourceClose","_onMediaSourceEnded","src","_initSourceBuffer","hasSourceTypes","getSourceBufferTypes","MEDIA_ATTACHING","onMediaAttaching","MEDIA_DETACHING","MANIFEST_PARSED","onManifestParsed","BUFFER_RESET","onBufferReset","onBufferAppending","BUFFER_CODECS","onBufferCodecs","BUFFER_EOS","onBufferEos","onBufferFlushing","LEVEL_UPDATED","onLevelUpdated","onFragParsed","FRAG_CHANGED","onFragChanged","audio","video","audiovideo","codecEvents","altAudio","ms","createObjectURL","endOfStream","message","revokeObjectURL","removeAttribute","MEDIA_DETACHED","forEach","sb","removeBufferListeners","removeSourceBuffer","sourceBufferCount","trackName","changeType","codec","levelCodec","container","metadata","currentCodec","replace","nextCodec","mimeType","appendChangeType","operation","execute","shiftAndExecuteNext","onStart","onComplete","e","append","eventData","chunkStats","bufferAppendingStart","fragBuffering","partBuffering","audioTrack","checkTimestampOffset","fragStart","executeStart","delta","timestampOffset","appendExecutor","executeEnd","timeRanges","BUFFER_APPENDED","MEDIA_ERROR","BUFFER_APPEND_ERROR","code","DOMException","QUOTA_EXCEEDED_ERR","BUFFER_FULL_ERROR","flushOperation","removeExecutor","BUFFER_FLUSHED","buffersAppendedTo","AUDIOVIDEO","push","VIDEO","onUnblocked","blockBuffers","flushBackBuffer","acc","ending","sourceBufferTypes","targetDuration","levelTargetDuration","maxBackBufferLength","targetBackBufferPosition","BACK_BUFFER_REACHED","LIVE_BACK_BUFFER_REACHED","levelDuration","mediaDuration","msDuration","updateSeekableRange","setLiveSeekableRange","pendingTracksCount","createSourceBuffers","buffers","BUFFER_INCOMPATIBLE_CODECS_ERROR","executeNext","tracksCreated","addSourceBuffer","sbName","addBufferListener","_onSBUpdateStart","_onSBUpdateEnd","_onSBUpdateError","BUFFER_ADD_CODEC_ERROR","BUFFER_CREATED","current","BUFFER_APPENDING_ERROR","removeStart","removeEnd","updating","remove","appendBuffer","blockingOperations","map","appendBlocker","fn","listener","l","sourceBufferReference","queues","queue","insertAbort","unshift","promise","shift","autoLevelCapping","firstLevel","restrictedLevels","streamController","clientRect","setStreamController","unregisterListener","stopCapping","FPS_DROP_LEVEL_CAPPING","onFpsDropLevelCapping","isLevelAllowed","droppedLevel","HTMLVideoElement","startCapping","detectPlayerSize","mediaHeight","mediaWidth","getMaxLevel","nextLevelSwitch","capLevelIndex","validLevels","filter","getMaxLevelByMediaSize","getDimensions","boundsRect","width","height","getBoundingClientRect","right","left","bottom","top","atGreatestBandwidth","curLevel","maxLevelIndex","contentScaleFactor","pixelRatio","devicePixelRatio","isVideoPlaybackQualityAvailable","lastTime","lastDroppedFrames","lastDecodedFrames","getVideoPlaybackQuality","checkFPSInterval","checkFPS","decodedFrames","droppedFrames","currentPeriod","currentDropped","currentDecoded","droppedFPS","FPS_DROP","totalDroppedFrames","videoPlaybackQuality","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","BinarySearch","PDTValue","Array","isArray","startPDT","endPDT","seg","pdtWithinToleranceTest","fragmentWithinToleranceTest","foundFragment","search","candidate","candidateLookupTolerance","deltaPTS","pdtBufferEnd","FragmentTracker","activeFragment","activeParts","endListFragments","create","bufferPadding","_registerListeners","onBufferAppended","_unregisterListeners","getAppendedFrag","levelType","activePart","appendedPTS","fragmentEntity","body","elementaryStream","timeRange","esData","range","time","isNotBuffered","isTimeBuffered","detectPartialFragments","fragKey","getFragmentKey","streamInfo","getBufferedTimes","endList","fragBuffered","minEndPTS","maxStartPTS","getPartialFragment","bestFragment","timePadding","bestOverlap","isPartial","lastFragmentEntity","APPENDING","PARTIAL","NOT_LOADED","rangeEnd","hasFragment","removeFragmentsInRange","clearElementaryStreamInfo","STALL_MINIMUM_DURATION_MS","MAX_START_GAP_JUMP","SKIP_BUFFER_HOLE_STEP_SECONDS","SKIP_BUFFER_RANGE_START","GapController","nudgeRetry","stallReported","stalled","moved","seeking","poll","activeFrag","seeked","beginSeek","stalledDuration","hasEnoughBuffer","noBufferGap","startJump","isLive","maxStartGapJump","_trySkipBufferHole","tnow","_reportStall","bufferedWithHoles","_tryFixBufferStall","stalledDurationMs","targetTime","_tryNudgeBuffer","JSON","stringify","BUFFER_STALLED_ERROR","lastEndTime","BUFFER_SEEK_OVER_HOLE","BUFFER_NUDGE_ON_STALL","sendAddTrackEvent","clearCurrentCues","removeCuesInRange","ID3","DateRangeAttribute","MetadataSchema","MIN_CUE_DURATION","getCueClass","WebKitDataCue","VTTCue","TextTrackCue","MAX_CUE_ENDTIME","Cue","MAX_VALUE","dateRangeDateToTimelineSeconds","date","offset","getTime","hexToArrayBuffer","str","from","split","ID3TrackController","id3Track","dateRangeCuesAppended","MANIFEST_LOADING","onManifestLoading","FRAG_PARSING_METADATA","onFragParsingMetadata","createTrack","getID3Track","textTracks","mode","textTrack","kind","label","addTextTrack","samples","emsg","frames","getID3Frames","pts","timeDiff","j","frame","isTimeStampFrame","updateId3CueEnds","cue","value","addCue","cues","predicate","audioId3","dateRanges","ids","idsToRemove","includes","removeCue","lastFragment","dateTimeOffset","dateRange","appendedDateRangeCues","durationKnown","startDate","endDate","endOnNext","nextDateRangeWithSameClass","filterMapArray","class","sort","a","b","attributes","ID","CLASS","START_DATE","DURATION","END_DATE","END_ON_NEXT","SCTE35_OUT","SCTE35_IN","LatencyController","stallCount","_latency","timeupdateHandler","timeupdate","latency","computeLatency","targetLatency","distanceFromTarget","liveMinLatencyDuration","inLiveRange","forwardBufferLength","rate","exp","edgeStalled","estimateLiveEdge","liveEdge","holdBack","maxLiveSyncOnStallIncrease","liveSyncOnStallIncrease","syncPosition","maxLevelUpdateAge","bufferedRanges","HdcpLevels","Level","isCodecSupportedInMp4","addGroupId","assignTrackIdsByGroup","PlaylistContextType","chromeOrFirefox","test","navigator","userAgent","toLowerCase","LevelController","_levels","_firstLevel","_startLevel","currentLevelIndex","manualLevelIndex","onParsedComplete","MANIFEST_LOADED","onManifestLoaded","AUDIO_TRACK_SWITCHED","onAudioTrackSwitched","audioTracks","subtitleTracks","bitrateStart","levelSet","levelFromSet","resolutionFound","videoCodecFound","audioCodecFound","levelParsed","attrs","videoCodec","audioCodec","levelKey","RESOLUTION","CODECS","SUBTITLES","subtitles","SCORE","decimalFloatingPoint","audioOnly","edata","sessionData","sessionKeys","t","forceStartLoad","MANIFEST_INCOMPATIBLE_CODECS_ERROR","AUDIO_TRACK","audioGroupIds","groupId","SUBTITLE_TRACK","textGroupIds","redundantFailover","levelError","levelSwitch","variantLevelIndex","fragmentError","KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED","restrictedHdcpLevel","maxHdcpLevel","FRAG_PARSING_ERROR","KEY_SYSTEM_NO_SESSION","LEVEL_LOAD_ERROR","LEVEL_LOAD_TIMEOUT","REMUX_ALLOC_ERROR","recoverLevel","errorDetails","retrying","redundantLevels","nextAutoLevel","newUrlId","audioGroupId","addDirectives","LEVEL_LOADING","removeLevel","filterLevelAndGroupByIdIndex","LEVELS_UPDATED","newLevel","LEVEL_SWITCH_ERROR","lastLevelIndex","levelSwitchingData","_urlId","configStartLevel","DateRange","groups","updatePTS","fromIdx","toIdx","fragFrom","fragTo","updateFromToPTS","fragToPTS","parsedMediaDuration","fragStartPts","fragEndPts","fragIdx","oldDetails","newDetails","currentInitSegment","oldFragments","oldInit","ccOffset","PTSFrag","mapFragmentIntersection","oldFrag","newFrag","relurl","fragmentsToCheck","skippedSegments","startCC","canSkipDateRanges","mergeDateRanges","recentlyRemovedDateranges","newFragments","mapPartIntersection","oldPart","newPart","adjustSliding","driftStartTime","driftStart","driftEndTime","driftEnd","oldDateRanges","deltaDateRanges","isValid","oldParts","newParts","intersectionFn","newFrags","oldFrags","addSliding","liveEdgeMaxTargetDurations","lastSegmentDuration","changeTypeSupported","TransmuxerInterface","TICK_INTERVAL","StreamController","audioCodecSwap","gapController","_forceStartLoad","fragPlaying","onvplaying","onvseeked","fragLastKbps","couldBacktrack","backtrackFragment","audioCodecSwitch","videoBuffer","onLevelLoading","onFragLoadEmergencyAborted","AUDIO_TRACK_SWITCHING","onAudioTrackSwitching","onBufferCreated","onBufferFlushed","onLevelsUpdated","doTickIdle","checkBuffer","checkFragmentChanged","getMainFwdBufferInfo","lastDetails","bufferLen","backtrackSn","backtrackFrag","fragState","_loadBitrateTestFrag","fragOrPart","followingBufferedFrag","immediateLevelSwitch","abortCurrentFrag","fetchdelay","fragPlayingCurrent","nextLevelId","bufferedFrag","nextBufferedFrag","maxStart","startPts","onMediaPlaying","onMediaSeeked","aac","heaac","newLevelId","endCC","accurateTimeOffset","initSegmentData","_getAudioCodec","_handleTransmuxComplete","fromAltAudio","trackId","mediaTrack","name","alternate","videoTrack","flushBuffer","bufferedInfo","swapAudioCodec","bufferStart","transmuxResult","remuxResult","text","id3","_bufferInitSegment","FRAG_PARSING_INIT_SEGMENT","timescale","INIT_PTS_FOUND","firstKeyFrame","firstKeyFramePTS","backtrack","setElementaryStreamInfo","emittedID3","emittedText","FRAG_PARSING_USERDATA","ua","channelCount","fragCurrentLevel","LEVEL_SWITCHED","currentFrag","epocMs","AESCrypto","subtle","aesIV","sliceUint8","removePadding","array","outputBytes","paddingBytes","DataView","getUint8","AESDecryptor","rcon","subMix","Uint32Array","invSubMix","sBox","invSBox","ksRows","keySize","keySchedule","invKeySchedule","initTable","uint8ArrayToUint32Array_","arrayBuffer","view","newArray","getUint32","subMix0","subMix1","subMix2","subMix3","invSubMix0","invSubMix1","invSubMix2","invSubMix3","d","x","xi","sx","x2","x4","x8","expandKey","keyBuffer","sameKey","ksRow","invKsRow","sbox","prev","networkToHostOrderSwap","word","inputArrayBuffer","nRounds","invSBOX","initVector","initVector0","initVector1","initVector2","initVector3","inputInt32","Int32Array","outputInt32","t0","t1","t2","t3","s0","s1","s2","s3","inputWords0","inputWords1","inputWords2","inputWords3","swapWord","FastAESKey","CHUNK_SIZE","removePKCS7Padding","logEnabled","softwareDecrypter","fastAesKey","remainderData","currentIV","currentResult","useSoftware","browserCrypto","crypto","webkitSubtle","isSync","reset","softwareDecrypt","decryptResult","webCryptoDecrypt","logOnce","currentChunk","getValidChunk","aesKey","onWebCryptoError","splitPoint","msg","importKey","BaseAudioDemuxer","ADTS","AACDemuxer","observer","resetInitSegment","trackDuration","_audioTrack","pid","sequenceNumber","segmentCodec","manifestCodec","inputTimeScale","probe","id3Data","getID3Data","canParse","appendFrame","initTrackConfig","basePTS","frameIndex","missing","getAudioConfig","adtsObjectType","adtsExtensionSamplingIndex","adtsChannelConfig","adtsSamplingRates","adtsSamplingIndex","samplerate","isHeaderPattern","getHeaderLength","getFullFrameLength","canGetFrameLength","isHeader","headerLength","frameLength","newOffset","getFrameDuration","parseFrameHeader","frameDuration","stamp","header","unit","set","subarray","dummyTrack","_id3Track","cachedData","lastPTS","resetTimeStamp","deaultTimestamp","resetContiguity","demux","timeOffset","lastDataIndex","timestamp","getTimeStamp","initPTSFn","dts","partialData","demuxSampleAes","keyData","ChunkCache","chunks","dataLength","chunk","concatUint8Arrays","ExpGolomb","bytesAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","size","bits","valu","skipLZ","leadingZeroCount","skipUEG","skipEG","readUEG","clz","readEG","readBoolean","readUByte","readUShort","readUInt","skipScalingList","lastScale","nextScale","deltaScale","readSPS","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","numRefFramesInPicOrderCntCycle","scalingListCount","profileIdc","chromaFormatIdc","picOrderCntType","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","aspectRatioIdc","ceil","readSliceType","isFooter","front","readSize","readTimeStamp","getFrameData","String","fromCharCode","frameData","decodeFrame","decodePrivFrame","decodeURLFrame","decodeTextFrame","owner","utf8ArrayToStr","privateData","description","timeStampFrame","pts33Bit","exitOnNull","decoder","getTextDecoder","decoded","decode","idx","substring","c","char2","char3","out","testables","TextDecoder","MpegAudio","MP3Demuxer","findBox","segmentValidRange","parseEmsg","parseSamples","parseInitSegment","RemuxerTrackIdConfig","emsgSchemePattern","MP4Demuxer","txtTrack","captionTrack","initData","sampleDuration","videoSamples","segmentedData","remainder","valid","extractID3Track","emsgs","emsgInfo","schemeIdUri","presentationTime","timeScale","presentationTimeDelta","eventDuration","chromeVersion","BitratesMap","SamplingRateMap","SamplesCoefficients","BytesInSlot","parseHeader","samplesPerFrame","sampleRate","mpegVersion","mpegLayer","bitRateIndex","sampleRateIndex","paddingBit","channelMode","columnInBitrates","bitRate","columnInSampleRates","sampleCoefficient","bytesInSlot","match","needChromeFix","headerSize","discardEPB","SampleAesDecrypter","decryptBuffer","encryptedData","decryptAacSample","sampleIndex","callback","curUnit","encryptedBuffer","byteOffset","decryptedBuffer","decryptAacSamples","getAvcEncryptedData","decodedData","encryptedDataLen","Int8Array","outputPos","inputPos","getAvcDecryptedUnit","uint8DecryptedData","decryptAvcSample","unitIndex","decryptAvcSamples","curUnits","units","work","Transmuxer","TransmuxConfig","TransmuxState","isPromise","EventEmitter","isTypeSupported","onTransmuxComplete","onFlush","useWorker","worker","onwmsg","forwardMessage","ev","typeSupported","mp4","mpeg","mp3","vendor","Worker","require","onWorkerMessage","onerror","filename","lineno","postMessage","cmd","objectURL","w","terminate","removeAllListeners","defaultInitPTS","transmuxing","lastFrag","discontinuity","trackSwitch","snDiff","partDiff","initSegmentChange","configureTransmuxer","ArrayBuffer","async","handleTransmuxComplete","transmuxerError","asyncFlush","handleFlushResult","results","logType","configure","enableLogs","TransmuxerWorker","forwardWorkerLogs","logFn","func","parse","emitTransmuxComplete","isEmptyResult","transferable","addToTransferable","TSDemuxer","MP4Remuxer","PassThroughRemuxer","muxConfig","remux","demuxer","remuxer","decryptionPromise","transmuxConfig","currentTransmuxState","uintData","defaultInitPts","getEncryptionType","getDecrypter","emptyResult","resetMuxers","needsProbing","resetInitialTimestamp","transmux","currentState","transmuxResults","emit","demuxResultOrPromise","demuxResult","flushRemux","resetNextTimestamp","transmuxSampleAes","transmuxUnencrypted","mux","Remuxer","Demuxer","encryptionType","p","Function","parseSEIMessageFromNALu","PACKET_LENGTH","sampleAes","pmtParsed","_duration","_pmtId","_avcTrack","_txtTrack","aacOverFlow","avcSample","syncOffset","scanwindow","foundPat","parsePID","pesData","isSampleAes","pes","avcId","avcData","audioId","id3Id","audioData","unknownPID","pmtId","tsPacketErrors","stt","atf","parsePES","parseAVCPES","parseAACPES","parseMPEGPES","parseID3PES","parsePAT","parsedPIDs","parsePMT","avc","extractRemainingSamples","last","parseAVCNALu","spsfound","audFound","pushAccessUnit","createAVCSample","sliceType","sps","expGolombDecoder","codecarray","codecstring","h","pps","getLastNalUnit","lastUnit","naluState","lastState","overflow","unitType","lastUnitStart","lastUnitType","tmp","frameMissingBytes","sampleLength","frameOverflowBytes","id3Sample","sectionLength","tableEnd","programInfoLength","stream","pesLen","pesHdrLen","pesPts","pesDts","newData","splice","pesPrefix","pesFlags","payloadStartOffset","dataLen","avcTrack","nbSamples","lastSample","webpackBootstrapFunc","__webpack_modules__","ENTRY_MODULE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","call","m","n","getter","__esModule","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","default","webpackBootstrapFuncArr","moduleNameReqExp","dependencyRegExp","quoteRegExp","isNumeric","isNaN","getModuleDependencies","sources","queueName","retval","fnString","wrapperSignature","webpackRequireName","re","RegExp","exec","hasValuesInQueues","hasValues","getRequiredModules","modulesQueue","main","requiredModules","seenModules","moduleToCheck","pop","newModules","newModulesKeys","getWebpackString","entryModule","moduleString","join","options","modules","blob","window","Blob","webkitURL","mozURL","msURL","workerUrl","URLToolkit","PlaylistLoader","KeyLoader","isSupported","Hls","coreComponents","networkControllers","_emitter","_autoLevelCapping","_maxHdcpLevel","latencyController","levelController","_media","DefaultConfig","ConfigAbrController","ConfigBufferController","ConfigCapLevelController","ConfigFpsController","playListLoader","id3TrackController","createController","AudioStreamControllerClass","SubtitleStreamControllerClass","ControllerClass","components","controllerInstance","once","eventObject","listenerCount","DESTROYING","detachMedia","component","attachMedia","loadSource","loadedSource","loadingSource","buildAbsoluteURL","location","alwaysNormalize","controller","recoverMediaError","loadLevel","manualLevel","shouldStartCapping","newCapLevelToPlayerSize","hdcpLevel","currentProgramDateTime","audioTrackId","subtitleTrack","subtitleTrackId","subtitleDisplay","__VERSION__","getSourceBuffer","SourceBuffer","WebKitSourceBuffer","sourceBufferValidAPI","AttrList","dateRangeAttr","dateRangeWithSameId","_startDate","_endDate","_badValueForSameId","previousAttr","PLANNED_DURATION","bool","MIN_CHUNK_SIZE","partLoadTimeout","onProgress","networkDetails","FragmentILoader","DefaultILoader","loaderContext","createLoaderContext","loaderConfig","timeout","maxRetry","retryDelay","maxRetryDelay","highWaterMark","onSuccess","response","resetLoader","resetIV","onAbort","onTimeout","updateStatsFromPart","fragStats","partStats","partTotal","estTotalParts","estLoadedParts","estRemainingParts","estRemainingBytes","fragLoading","partLoading","responseType","headers","rangeStart","byteRangeStartOffset","byteRangeEndOffset","byteRangeStart","byteRangeEnd","fragmentLen","params","LoadStats","BaseSegment","baseurl","_byteRange","_url","setByteRange","byteRange","Fragment","_decryptdata","rawProgramDateTime","tagList","levelkeys","title","setKeyFormat","keyFormat","getDecryptData","NONE","identity","keyFormats","Part","partAttrs","fragOffset","gap","enumeratedString","keyUriToKeyInfo","keyInfo","mediaKeySessionContext","isCommonEncryption","createKeyLoadError","loadingFrag","selectKeySystemFormat","keySystemFormat","loadInternal","errorMessage","keyLoadPromise","keyStatus","loadKeyHTTP","loadKeyEME","keySessionContextPromise","loadKey","keySessionContext","Loader","loaderCallbacks","DEFAULT_TARGET_DURATION","LevelDetails","baseUrl","availabilityDelay","misses","m3u8","version","canSkipUntil","preloadHint","partSnDiff","partIndexDiff","runTime","runDuration","changeEndianness","convertDataUriToArrayBytes","KeySystemFormats","mp4pssh","base64Decode","keyUriToKeyIdMap","LevelKey","clearKeyUriToKeyIdMap","format","formatversions","keyFormatVersions","keyId","pssh","FAIRPLAY","WIDEVINE","PLAYREADY","CLEARKEY","createInitializationVector","keyBytes","PlayReadyKeySystemUUID","keyBytesUtf16","Uint16Array","keyByteStr","apply","xmlKeyBytes","parser","DOMParser","xmlDoc","parseFromString","getElementsByTagName","childNodes","nodeValue","getAttribute","keyIdArray","keydata","padded","val","MAX_SAFE_INTEGER","dv","setUint32","segmentNumber","uint8View","isCodecType","MASTER_PLAYLIST_REGEX","MASTER_PLAYLIST_MEDIA_REGEX","LEVEL_PLAYLIST_REGEX_FAST","source","LEVEL_PLAYLIST_REGEX_SLOW","M3U8Parser","findGroup","mediaGroupId","group","convertAVC1ToAVCOTI","avcdata","parseMasterPlaylist","string","levelsWithKnownCodecs","hasSessionData","lastIndex","decimalInteger","NAME","resolution","decimalResolution","setCodecs","unknownCodecs","sessionAttrs","keyTag","sessionKey","parseKey","stripUnknownCodecLevels","parseMasterPlaylistMedia","medias","TYPE","instreamId","LANGUAGE","autoselect","forced","lang","groupCodec","assignCodec","parseLevelPlaylist","levelUrlId","currentSN","currentPart","discontinuityCounter","prevFrag","firstPdtIndex","createNextFrag","setFragLevelKeys","assignProgramDateTime","tag","value1","value2","toUpperCase","skipAttrs","startAttrs","mapAttrs","init","setInitSegment","serverControlAttrs","optionalFloat","partInfAttrs","previousFragmentPart","preloadHintAttrs","renditionReportAttrs","fragmentLength","firstFragment","lastSn","backfillProgramDateTimes","keyAttrs","decryptmethod","decrypturi","decryptiv","hexadecimalInteger","decryptkeyformatversions","decryptkeyformat","IV","resolvedUri","isFinite","codecs","filtered","preferred","lastIndexOf","groupItem","codecProperty","codecValue","fragPrev","BYTERANGE","mapContextToLevelType","SUBTITLE","getResponseUrl","loaders","destroyInternalLoaders","AUDIO_TRACK_LOADING","onAudioTrackLoading","SUBTITLE_TRACK_LOADING","onSubtitleTrackLoading","createInternalLoader","PLoader","InternalLoader","getInternalLoader","resetInternalLoader","contextType","MANIFEST","LEVEL","loadsuccess","loaderror","loadtimeout","handleManifestParsingError","handleTrackOrLevelPlaylist","handleMasterPlaylist","handleNetworkError","audioGroups","subtitleGroups","textCodec","captions","embeddedAudioFound","levelId","LEVEL_EMPTY_ERROR","singleLevel","handlePlaylistLoaded","MANIFEST_PARSING_ERROR","UNKNOWN","MANIFEST_LOAD_TIMEOUT","MANIFEST_LOAD_ERROR","AUDIO_TRACK_LOAD_TIMEOUT","AUDIO_TRACK_LOAD_ERROR","SUBTITLE_TRACK_LOAD_TIMEOUT","SUBTITLE_LOAD_ERROR","errorData","getCacheAge","AUDIO_TRACK_LOADED","SUBTITLE_TRACK_LOADED","isFiniteNumber","AAC","getSilentFrame","UINT32_MAX","MP4","types","avc1","avcC","btrt","dinf","dref","esds","ftyp","hdlr","mdat","mdhd","mdia","mfhd","minf","moof","moov","mp4a","mvex","mvhd","pasp","sdtp","stbl","stco","stsc","stsd","stsz","stts","tfdt","tfhd","traf","trak","trun","trex","tkhd","vmhd","smhd","charCodeAt","videoHdlr","audioHdlr","HDLR_TYPES","STTS","STSC","STCO","STSZ","VMHD","SMHD","STSD","majorBrand","avc1Brand","minorVersion","FTYP","box","DINF","upperWordDuration","lowerWordDuration","baseMediaDecodeTime","boxes","flags","dependsOn","isDependedOn","hasRedundancy","avcc","hSpacing","vSpacing","configlen","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","arraylen","cts","isLeading","paddingValue","isNonSync","degradPrio","movie","toMsFromMpegTsClock","MAX_SILENT_FRAME_DURATION","AAC_SAMPLES_PER_FRAME","MPEG_AUDIO_SAMPLE_PER_FRAME","safariWebkitVersion","ISGenerated","_initPTS","_initDTS","nextAvcDts","nextAudioPts","videoSampleDuration","isAudioContiguous","isVideoContiguous","defaultTimeStamp","getVideoStartPts","rolloverDetected","minPTS","normalizePts","audioTimeOffset","videoTimeOffset","hasAudio","hasVideo","enoughAudioSamples","enoughVideoSamples","canRemuxAvc","generateIS","firstKeyFrameIndex","findKeyframeIndex","tsDelta","audiovideoTimestampDelta","remuxAudio","audioTrackLength","remuxVideo","flushTextTrackMetadataCueSamples","flushTextTrackUserdataCueSamples","audioSamples","computePTSDTS","initDTS","inputSamples","outputSamples","mp4SampleDuration","firstDTS","lastDTS","maxPTS","NEGATIVE_INFINITY","sortSamples","deltadts","deltapts","inputDuration","averageSampleDuration","foundHole","foundOverlap","firstPTS","nbNalu","naluLen","nbUnits","sampleLen","mdatSize","MUX_ERROR","stretchedLastFrame","minDtsDelta","minPtsDelta","maxDtsDelta","maxPtsDelta","avcSampleUnits","mp4SampleLength","unitData","unitDataLen","ptsDelta","lastFrameDuration","gapTolerance","deltaToFrameEnd","compositionTimeOffset","Mp4Sample","nextDts","nextPts","nb","mp4timeScale","scaleFactor","inputSampleDuration","rawMPEG","alignedWithVideo","timeOffsetMpegTS","newStamp","fillFrame","audioSample","prevSample","unitLen","remuxEmptyAudio","videoData","silentFrame","reference","isKeyframe","Mp4SampleFlags","patchEncyptionData","getDuration","getStartDTS","offsetStartDTS","emitInitSegment","initTracks","generateInitSegment","getParsedTrackCodec","initPtsNum","parsedCodec","_boundTick","_tickTimer","_tickInterval","_tickCallCount","hasInterval","hasNextTick","millis","snChangeGoal","v2","Yes","searchParams","newValue","getNewPerformanceTiming","DECIMAL_RESOLUTION_REGEX","ATTR_LIST_REGEX","parseAttrList","attrName","intValue","stringValue","hexadecimalIntegerAsNumber","defaultValue","res","input","quote","list","comparisonFn","minIndex","maxIndex","currentIndex","currentElement","comparisonResult","noopBuffered","maxHoleDuration","vbuffered","diff","buffered2","buf2len","buf2end","bufferStartNext","sampleEntryCodesISO","a3ds","alac","alaw","dra1","dtsc","dtse","dtsh","enca","g719","g726","m4ae","mha1","mha2","mhm1","mhm2","mlpa","Opus","opus","samr","sawb","sawp","sevc","sqcp","ssmv","twos","ulaw","avc2","avc3","avc4","avcp","av01","drac","dva1","dvav","dvh1","dvhe","encv","hev1","hvc1","mjp2","mp4v","mvc1","mvc2","mvc3","mvc4","resv","rv60","s263","svc1","svc2","vp08","vp09","stpp","wvtt","typeCodes","findFirstFragWithCC","firstFrag","shouldAlignOnDiscontinuities","findDiscontinuousReferenceFrag","prevDetails","curDetails","referenceIndex","prevFrags","curFrags","prevStartFrag","adjustFragmentStart","adjustSlidingStart","alignDiscontinuities","alignPDT","referenceFrag","lastPDT","newPDT","alignMediaPlaylistByPDT","refDetails","refFragments","middleFrag","refFrag","refPDT","targetPDT","EWMA","slow","fast","defaultEstimate","defaultEstimate_","minWeight_","minDelayMs_","slow_","fast_","halfLife","getTotalWeight","durationMs","numBytes","numBits","durationS","bandwidthInBps","estimate","weight","alpha_","estimate_","totalWeight_","adjAlpha","zeroFactor","fetch","AbortController","ReadableStream","Request","fetchSetup","requestTimeout","request","callbacks","getRequest","abortInternal","ok","initParams","getRequestParameters","signal","isArrayBuffer","LENGTH","status","statusText","FetchError","loadProgressively","responseData","loaderResponse","chunkCache","reader","getReader","pump","read","done","credentials","Headers","Hex","hexDump","getKeyIdBytes","keyIdbytes","strToUtf8array","paddedkeyIdbytes","swap","to","cur","colonsplit","semicolonsplit","commasplit","isbase64","unescape","encodeURIComponent","noop","fakeLogger","exportedLogger","consolePrintFn","exportLoggerFunctions","debugConfig","functions","KeySystems","keySystemFormatToKeySystemDomain","KeySystemIds","keySystemIdToKeySystemDomain","systemId","keySystemDomainToKeySystemFormat","keySystem","getKeySystemsForConfig","keySystemsToAttempt","getSupportedMediaKeySystemConfigurations","audioCodecs","videoCodecs","initDataTypes","createMediaKeySystemConfigurations","baseConfig","persistentState","distinctiveIdentifier","sessionTypes","sessionType","audioCapabilities","contentType","robustness","audioRobustness","encryptionScheme","audioEncryptionScheme","videoCapabilities","videoRobustness","videoEncryptionScheme","WebKitMediaSource","bin2str","readUint16","readUint32","readSint32","writeUint32","path","endbox","subresults","parseSegmentIndex","sidx","references","earliestPresentationTime","firstOffset","startByte","referencesCount","referenceInfo","referenceSize","referenceType","subsegmentDuration","traks","hdlrType","soun","vide","sampleEntries","encBoxes","isAudio","enc","encBoxChildren","sinfBoxes","sinf","tenc","parseSinf","tencKeyId","schm","scheme","fmp4","baseTime","scale","rawDuration","videoDuration","audioDuration","trafs","trackDefault","tfhdFlags","truns","computeRawDurationFromSamples","sampleCount","sidxDuration","sidxs","dur","ref","upper","lower","segmentedRange","moofs","temp","seiSamples","isHEVCFlavor","moofOffset","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleDuration","defaultSampleSizePresent","defaultSampleSize","defaultSampleFlagsPresent","tfhdOffset","isHEVC","dataOffsetPresent","dataOffset","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleSize","sampleFlagsPresent","sampleCompositionOffsetsPresent","compositionOffset","trunOffset","sampleOffset","ix","naluTotalSize","naluSize","isSEIMessage","delimit","baseCodec","naluHeader","naluType","unescapedData","seiPtr","payloadType","payloadSize","endOfCaptions","leftOver","countryCode","providerCode","userStructure","userDataType","firstByte","totalCCs","enabled","totalBytes","byteArray","uuidStrArray","userDataBytes","uuid","userData","EPBPositions","newLength","sourceIndex","leftPresentationTime","rightPresentationTime","isSafeInteger","mp4Box","keyids","RangeError","kids","k","kidCount","dataSize","parsePssh","boxSize","dataSizeOrKidCount","base64ToBase64Url","base64encodedStr","strToBase64Encode","btoa","base64DecodeToStr","atob","base64Encode","base64UrlEncode","videoEl","Event","document","createEvent","initEvent","dispatchEvent","addCueToTrack","getCueById","textTrackCue","getCuesInRange","getFirstCueIndexAfterTime","mid","cuesFound","firstCueInRange","MPEG_TS_CLOCK_FREQ_HZ","toTimescaleFromBase","destScale","srcBase","toTimescaleFromScale","srcScale","toMpegTsClockFromTimescale","AGE_HEADER_LINE_REGEX","retryTimeout","onreadystatechange","onprogress","xhr","XMLHttpRequest","open","setRequestHeader","readystatechange","loadprogress","send","responseText","responseURL","lengthComputable","getAllResponseHeaders","getResponseHeader"],"sourceRoot":""}